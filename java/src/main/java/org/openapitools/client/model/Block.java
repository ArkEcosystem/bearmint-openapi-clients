/*
 * Railway
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Block
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-24T10:47:59.076628+03:00[Europe/Helsinki]")
public class Block {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private String hash;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Integer height;

  public static final String SERIALIZED_NAME_HEADER = "header";
  @SerializedName(SERIALIZED_NAME_HEADER)
  private List header = null;

  public static final String SERIALIZED_NAME_BYZANTINE_VALIDATORS = "byzantine_validators";
  @SerializedName(SERIALIZED_NAME_BYZANTINE_VALIDATORS)
  private List byzantineValidators = null;

  public static final String SERIALIZED_NAME_LAST_COMMIT_INFO = "last_commit_info";
  @SerializedName(SERIALIZED_NAME_LAST_COMMIT_INFO)
  private List lastCommitInfo = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public Block() {
  }

  public Block id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The id of the object.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The id of the object.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Block hash(String hash) {
    
    this.hash = hash;
    return this;
  }

   /**
   * The hash of the object.
   * @return hash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "gm4XrAp6aJ/+oKAcnCoJwafhNJ0HD20DWg1epsEG6+o=", value = "The hash of the object.")

  public String getHash() {
    return hash;
  }


  public void setHash(String hash) {
    this.hash = hash;
  }


  public Block height(Integer height) {
    
    this.height = height;
    return this;
  }

   /**
   * The height of the object.
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The height of the object.")

  public Integer getHeight() {
    return height;
  }


  public void setHeight(Integer height) {
    this.height = height;
  }


  public Block header(List header) {
    
    this.header = header;
    return this;
  }

   /**
   * The id of the object.
   * @return header
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"version\":{\"block\":\"11\"},\"chainId\":\"bearmint-testnet\",\"height\":\"1\",\"time\":\"2022-10-09T02:12:21.361Z\",\"lastBlockId\":{\"partSetHeader\":{\"hash\":\"gm4XrAp6aJ/+oKAcnCoJwafhNJ0HD20DWg1epsEG6+o=\",\"partSetHeader\":{\"total\":1,\"hash\":\"FASNnBqJ2g7aBGvQFoPdLRXhO6C/lbl+VNqYM0GTgps=\"}}},\"lastCommitHash\":\"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\"dataHash\":\"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\"validatorsHash\":\"ayn8KqIdjdg0za9pl/QPzJbOaSAkVIJWCXrctRWaR7s=\",\"nextValidatorsHash\":\"ayn8KqIdjdg0za9pl/QPzJbOaSAkVIJWCXrctRWaR7s=\",\"consensusHash\":\"BICRvH3cKD93v7+R1zxE2ljD34qcvIZ0Bdi389qtoi8=\",\"appHash\":\"mhfocNgApsnLxYU1Wv8EwT3idwzBW8iP76GDbRAJLU8=\",\"lastResultsHash\":\"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\"evidenceHash\":\"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\",\"proposerAddress\":\"XGuFiLDMzeAcQyhrHmmFGd0nzu4=\"}", value = "The id of the object.")

  public List getHeader() {
    return header;
  }


  public void setHeader(List header) {
    this.header = header;
  }


  public Block byzantineValidators(List byzantineValidators) {
    
    this.byzantineValidators = byzantineValidators;
    return this;
  }

   /**
   * The id of the object.
   * @return byzantineValidators
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[]", value = "The id of the object.")

  public List getByzantineValidators() {
    return byzantineValidators;
  }


  public void setByzantineValidators(List byzantineValidators) {
    this.byzantineValidators = byzantineValidators;
  }


  public Block lastCommitInfo(List lastCommitInfo) {
    
    this.lastCommitInfo = lastCommitInfo;
    return this;
  }

   /**
   * The id of the object.
   * @return lastCommitInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"votes\":[{\"validator\":{\"address\":\"XGuFiLDMzeAcQyhrHmmFGd0nzu4=\",\"power\":\"1\"},\"signedLastBlock\":true}]}", value = "The id of the object.")

  public List getLastCommitInfo() {
    return lastCommitInfo;
  }


  public void setLastCommitInfo(List lastCommitInfo) {
    this.lastCommitInfo = lastCommitInfo;
  }


  public Block createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The creation date of the object.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-10-09T02:12:24Z", value = "The creation date of the object.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Block updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The updating date of the object.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-10-09T02:12:24Z", value = "The updating date of the object.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Block block = (Block) o;
    return Objects.equals(this.id, block.id) &&
        Objects.equals(this.hash, block.hash) &&
        Objects.equals(this.height, block.height) &&
        Objects.equals(this.header, block.header) &&
        Objects.equals(this.byzantineValidators, block.byzantineValidators) &&
        Objects.equals(this.lastCommitInfo, block.lastCommitInfo) &&
        Objects.equals(this.createdAt, block.createdAt) &&
        Objects.equals(this.updatedAt, block.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hash, height, header, byzantineValidators, lastCommitInfo, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Block {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    byzantineValidators: ").append(toIndentedString(byzantineValidators)).append("\n");
    sb.append("    lastCommitInfo: ").append(toIndentedString(lastCommitInfo)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("hash");
    openapiFields.add("height");
    openapiFields.add("header");
    openapiFields.add("byzantine_validators");
    openapiFields.add("last_commit_info");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Block
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Block.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Block is not found in the empty JSON string", Block.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Block.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Block` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("hash") != null && !jsonObj.get("hash").isJsonNull()) && !jsonObj.get("hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hash").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Block.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Block' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Block> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Block.class));

       return (TypeAdapter<T>) new TypeAdapter<Block>() {
           @Override
           public void write(JsonWriter out, Block value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Block read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Block given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Block
  * @throws IOException if the JSON string is invalid with respect to Block
  */
  public static Block fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Block.class);
  }

 /**
  * Convert an instance of Block to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


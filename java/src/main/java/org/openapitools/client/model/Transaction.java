/*
 * Railway
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Transaction
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-24T10:47:59.076628+03:00[Europe/Helsinki]")
public class Transaction {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_BLOCK_ID = "block_id";
  @SerializedName(SERIALIZED_NAME_BLOCK_ID)
  private Integer blockId;

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private String hash;

  public static final String SERIALIZED_NAME_SENDER = "sender";
  @SerializedName(SERIALIZED_NAME_SENDER)
  private String sender;

  public static final String SERIALIZED_NAME_RECIPIENT = "recipient";
  @SerializedName(SERIALIZED_NAME_RECIPIENT)
  private String recipient;

  public static final String SERIALIZED_NAME_GAS = "gas";
  @SerializedName(SERIALIZED_NAME_GAS)
  private Integer gas;

  public static final String SERIALIZED_NAME_NONCE = "nonce";
  @SerializedName(SERIALIZED_NAME_NONCE)
  private Integer nonce;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  private String signature;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private List message = null;

  public static final String SERIALIZED_NAME_MESSAGE_DESERIALIZED = "message_deserialized";
  @SerializedName(SERIALIZED_NAME_MESSAGE_DESERIALIZED)
  private List messageDeserialized = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public Transaction() {
  }

  public Transaction id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * The internal id of the object.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The internal id of the object.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public Transaction blockId(Integer blockId) {
    
    this.blockId = blockId;
    return this;
  }

   /**
   * The id of the block associated with the object.
   * @return blockId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "The id of the block associated with the object.")

  public Integer getBlockId() {
    return blockId;
  }


  public void setBlockId(Integer blockId) {
    this.blockId = blockId;
  }


  public Transaction hash(String hash) {
    
    this.hash = hash;
    return this;
  }

   /**
   * The unique hash of the object.
   * @return hash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3a84b182c61b7cb0554a4134416998e86b9440e943ad085e2c21fccdc472d079", value = "The unique hash of the object.")

  public String getHash() {
    return hash;
  }


  public void setHash(String hash) {
    this.hash = hash;
  }


  public Transaction sender(String sender) {
    
    this.sender = sender;
    return this;
  }

   /**
   * The public key of the recipient associated with the object.
   * @return sender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "90d9012e313e004e9d93aa012289bc216d81e96aaacb1cb815ec2c13ab6944fc8ce6d99b5a4403bf05bd1c94eb96875e", value = "The public key of the recipient associated with the object.")

  public String getSender() {
    return sender;
  }


  public void setSender(String sender) {
    this.sender = sender;
  }


  public Transaction recipient(String recipient) {
    
    this.recipient = recipient;
    return this;
  }

   /**
   * The address of the recipient associated with the object.
   * @return recipient
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "bear1jrvszt338cqya8vn4gqj9zduy9kcr6t24t93ewq4askp82mfgn7geekenddygqalqk73e98tj6r4u9mwejl", value = "The address of the recipient associated with the object.")

  public String getRecipient() {
    return recipient;
  }


  public void setRecipient(String recipient) {
    this.recipient = recipient;
  }


  public Transaction gas(Integer gas) {
    
    this.gas = gas;
    return this;
  }

   /**
   * The amount of gas of the object.
   * @return gas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100000000", value = "The amount of gas of the object.")

  public Integer getGas() {
    return gas;
  }


  public void setGas(Integer gas) {
    this.gas = gas;
  }


  public Transaction nonce(Integer nonce) {
    
    this.nonce = nonce;
    return this;
  }

   /**
   * The nonce of the account associated with the object.
   * @return nonce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The nonce of the account associated with the object.")

  public Integer getNonce() {
    return nonce;
  }


  public void setNonce(Integer nonce) {
    this.nonce = nonce;
  }


  public Transaction signature(String signature) {
    
    this.signature = signature;
    return this;
  }

   /**
   * The signature of the object.
   * @return signature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10c41c357456a96375f60dad79cbfbe834b5357c2c17653145e6a156fc6ce7391f77b9c4e17f26374cbfc1a1777d714a0fe415c2e79c8ed33768134ea3405bbe958563dfa3dfa87fc07e75f036d2debd32710718d4a7ff497db2b41e31b0bee2131367d58d8fc8d7e6503b9fb9ffd592ea4198fab4aa5d252b89dfafa5ee9cb606825b66a98b5077a9e904141d5924ea087a230884a6810c2c9f4e5ee4a7e49bf5cc43476f71bc9620fd9a3364779bacd05706838750b552c59286352a91224a", value = "The signature of the object.")

  public String getSignature() {
    return signature;
  }


  public void setSignature(String signature) {
    this.signature = signature;
  }


  public Transaction version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * The version of the object.
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.0.0", value = "The version of the object.")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public Transaction message(List message) {
    
    this.message = message;
    return this;
  }

   /**
   * The message of the object.
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"handler\":\"@bearmint/bep-126\",\"version\":\"0.0.0\",\"network\":\"9a17e870d800a6c9cbc585355aff04c13de2770cc15bc88fefa1836d10092d4f\",\"content\":\"0aab010a233431383438623433313462322d343362662d383139642d34316165323161346237363312236436623936623862393637372d343636392d613061612d3862373462353435643631311a1568747470733a2f2f626561726d696e742e636f6d2f22052e6a736f6e2a13121140626561726d696e742f6265702d3134352a150801121140626561726d696e742f6265702d3134352a150802121140626561726d696e742f6265702d313435\"}", value = "The message of the object.")

  public List getMessage() {
    return message;
  }


  public void setMessage(List message) {
    this.message = message;
  }


  public Transaction messageDeserialized(List messageDeserialized) {
    
    this.messageDeserialized = messageDeserialized;
    return this;
  }

   /**
   * The deserialized message of the object.
   * @return messageDeserialized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"ops\":[{\"name\":\"41848b4314b2-43bf-819d-41ae21a4b763\",\"symbol\":\"d6b96b8b9677-4669-a0aa-8b74b545d611\",\"uriPrefix\":\"https://bearmint.com/\",\"uriSuffix\":\".json\",\"policies\":[{\"type\":0,\"name\":\"@bearmint/bep-145\"},{\"type\":1,\"name\":\"@bearmint/bep-145\"},{\"type\":2,\"name\":\"@bearmint/bep-145\"}]}]}", value = "The deserialized message of the object.")

  public List getMessageDeserialized() {
    return messageDeserialized;
  }


  public void setMessageDeserialized(List messageDeserialized) {
    this.messageDeserialized = messageDeserialized;
  }


  public Transaction createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The creation date of the object.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-10-09T02:12:24Z", value = "The creation date of the object.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Transaction updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The updating date of the object.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-10-09T02:12:24Z", value = "The updating date of the object.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.id, transaction.id) &&
        Objects.equals(this.blockId, transaction.blockId) &&
        Objects.equals(this.hash, transaction.hash) &&
        Objects.equals(this.sender, transaction.sender) &&
        Objects.equals(this.recipient, transaction.recipient) &&
        Objects.equals(this.gas, transaction.gas) &&
        Objects.equals(this.nonce, transaction.nonce) &&
        Objects.equals(this.signature, transaction.signature) &&
        Objects.equals(this.version, transaction.version) &&
        Objects.equals(this.message, transaction.message) &&
        Objects.equals(this.messageDeserialized, transaction.messageDeserialized) &&
        Objects.equals(this.createdAt, transaction.createdAt) &&
        Objects.equals(this.updatedAt, transaction.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, blockId, hash, sender, recipient, gas, nonce, signature, version, message, messageDeserialized, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    gas: ").append(toIndentedString(gas)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messageDeserialized: ").append(toIndentedString(messageDeserialized)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("block_id");
    openapiFields.add("hash");
    openapiFields.add("sender");
    openapiFields.add("recipient");
    openapiFields.add("gas");
    openapiFields.add("nonce");
    openapiFields.add("signature");
    openapiFields.add("version");
    openapiFields.add("message");
    openapiFields.add("message_deserialized");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Transaction
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Transaction.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Transaction is not found in the empty JSON string", Transaction.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Transaction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Transaction` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("hash") != null && !jsonObj.get("hash").isJsonNull()) && !jsonObj.get("hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hash").toString()));
      }
      if ((jsonObj.get("sender") != null && !jsonObj.get("sender").isJsonNull()) && !jsonObj.get("sender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sender").toString()));
      }
      if ((jsonObj.get("recipient") != null && !jsonObj.get("recipient").isJsonNull()) && !jsonObj.get("recipient").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient").toString()));
      }
      if ((jsonObj.get("signature") != null && !jsonObj.get("signature").isJsonNull()) && !jsonObj.get("signature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signature").toString()));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Transaction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Transaction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Transaction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Transaction.class));

       return (TypeAdapter<T>) new TypeAdapter<Transaction>() {
           @Override
           public void write(JsonWriter out, Transaction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Transaction read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Transaction given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Transaction
  * @throws IOException if the JSON string is invalid with respect to Transaction
  */
  public static Transaction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Transaction.class);
  }

 /**
  * Convert an instance of Transaction to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


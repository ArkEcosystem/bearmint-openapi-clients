/*
 * Railway
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AnyOfstring;
import org.openapitools.client.model.AnyOfstringstring;
import org.openapitools.client.model.AnyOfstringstringstring;
import org.openapitools.client.model.AnyOfstringstringstringstring;
import org.openapitools.client.model.AnyOfstringstringstringstringstring;
import org.openapitools.client.model.AnyOfstringstringstringstringstringstring;
import org.openapitools.client.model.AnyOfstringstringstringstringstringstringstringstring;
import org.openapitools.client.model.AnyOfstringstringstringstringstringstringstringstringstring;
import org.openapitools.client.model.AnyOfstringstringstringstringstringstringstringstringstringstring;
import org.openapitools.client.model.ApiAccountsGet200Response;
import org.openapitools.client.model.ApiAccountsMetadataGet200Response;
import org.openapitools.client.model.ApiBlocksGet200Response;
import org.openapitools.client.model.ApiEntitiesGet200Response;
import org.openapitools.client.model.ApiTransactionsGet200Response;
import org.openapitools.client.model.ApiTransactionsMetadataGet200Response;
import org.openapitools.client.model.ApiTransactionsReceiptsGet200Response;
import org.openapitools.client.model.ApiValidatorsUpdatesGet200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for apiAccountsGet
     * @param fieldsAccounts Include the given fields in the response. (optional)
     * @param filterAddress Filter the results where the [address] field is equal to the given value. (optional)
     * @param filterAddressNeq Filter the results where the [address] field is not equal to the given value. (optional)
     * @param filterAddressLike Filter the results where the [address] field is similar to the given case sensitive value. (optional)
     * @param filterAddressIlike Filter the results where the [address] field is similar to the given case insensitive value. (optional)
     * @param filterPublicKey Filter the results where the [public_key] field is equal to the given value. (optional)
     * @param filterPublicKeyNeq Filter the results where the [public_key] field is not equal to the given value. (optional)
     * @param filterPublicKeyLike Filter the results where the [public_key] field is similar to the given case sensitive value. (optional)
     * @param filterPublicKeyIlike Filter the results where the [public_key] field is similar to the given case insensitive value. (optional)
     * @param filterName Filter the results where the [name] field is equal to the given value. (optional)
     * @param filterNameNeq Filter the results where the [name] field is not equal to the given value. (optional)
     * @param filterNameLike Filter the results where the [name] field is similar to the given case sensitive value. (optional)
     * @param filterNameIlike Filter the results where the [name] field is similar to the given case insensitive value. (optional)
     * @param filterNonce Filter the results where the [nonce] field is equal to the given value. (optional)
     * @param filterValidatorAddress Filter the results where the [validator.address] field is equal to the given value. (optional)
     * @param filterValidatorAddressNeq Filter the results where the [validator.address] field is not equal to the given value. (optional)
     * @param filterValidatorAddressLike Filter the results where the [validator.address] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorAddressIlike Filter the results where the [validator.address] field is similar to the given case insensitive value. (optional)
     * @param filterValidatorPublicKey Filter the results where the [validator.publicKey] field is equal to the given value. (optional)
     * @param filterValidatorPublicKeyNeq Filter the results where the [validator.publicKey] field is not equal to the given value. (optional)
     * @param filterValidatorPublicKeyLike Filter the results where the [validator.publicKey] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorPublicKeyIlike Filter the results where the [validator.publicKey] field is similar to the given case insensitive value. (optional)
     * @param filterValidatorPower Filter the results where the [validator.power] field is equal to the given value. (optional)
     * @param filterValidatorPowerNeq Filter the results where the [validator.power] field is not equal to the given value. (optional)
     * @param filterValidatorPowerLike Filter the results where the [validator.power] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorPowerIlike Filter the results where the [validator.power] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiAccountsGetCall(ApiAccountsGetFieldsAccountsParameter fieldsAccounts, String filterAddress, String filterAddressNeq, String filterAddressLike, String filterAddressIlike, String filterPublicKey, String filterPublicKeyNeq, String filterPublicKeyLike, String filterPublicKeyIlike, String filterName, String filterNameNeq, String filterNameLike, String filterNameIlike, Integer filterNonce, String filterValidatorAddress, String filterValidatorAddressNeq, String filterValidatorAddressLike, String filterValidatorAddressIlike, String filterValidatorPublicKey, String filterValidatorPublicKeyNeq, String filterValidatorPublicKeyLike, String filterValidatorPublicKeyIlike, String filterValidatorPower, String filterValidatorPowerNeq, String filterValidatorPowerLike, String filterValidatorPowerIlike, ApiAccountsGetIncludeParameter include, ApiAccountsGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/accounts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldsAccounts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields[accounts]", fieldsAccounts));
        }

        if (filterAddress != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[address]", filterAddress));
        }

        if (filterAddressNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[address.neq]", filterAddressNeq));
        }

        if (filterAddressLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[address.like]", filterAddressLike));
        }

        if (filterAddressIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[address.ilike]", filterAddressIlike));
        }

        if (filterPublicKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[public_key]", filterPublicKey));
        }

        if (filterPublicKeyNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[public_key.neq]", filterPublicKeyNeq));
        }

        if (filterPublicKeyLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[public_key.like]", filterPublicKeyLike));
        }

        if (filterPublicKeyIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[public_key.ilike]", filterPublicKeyIlike));
        }

        if (filterName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[name]", filterName));
        }

        if (filterNameNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[name.neq]", filterNameNeq));
        }

        if (filterNameLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[name.like]", filterNameLike));
        }

        if (filterNameIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[name.ilike]", filterNameIlike));
        }

        if (filterNonce != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[nonce]", filterNonce));
        }

        if (filterValidatorAddress != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.address]", filterValidatorAddress));
        }

        if (filterValidatorAddressNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.address.neq]", filterValidatorAddressNeq));
        }

        if (filterValidatorAddressLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.address.like]", filterValidatorAddressLike));
        }

        if (filterValidatorAddressIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.address.ilike]", filterValidatorAddressIlike));
        }

        if (filterValidatorPublicKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.publicKey]", filterValidatorPublicKey));
        }

        if (filterValidatorPublicKeyNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.publicKey.neq]", filterValidatorPublicKeyNeq));
        }

        if (filterValidatorPublicKeyLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.publicKey.like]", filterValidatorPublicKeyLike));
        }

        if (filterValidatorPublicKeyIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.publicKey.ilike]", filterValidatorPublicKeyIlike));
        }

        if (filterValidatorPower != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.power]", filterValidatorPower));
        }

        if (filterValidatorPowerNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.power.neq]", filterValidatorPowerNeq));
        }

        if (filterValidatorPowerLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.power.like]", filterValidatorPowerLike));
        }

        if (filterValidatorPowerIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[validator.power.ilike]", filterValidatorPowerIlike));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiAccountsGetValidateBeforeCall(ApiAccountsGetFieldsAccountsParameter fieldsAccounts, String filterAddress, String filterAddressNeq, String filterAddressLike, String filterAddressIlike, String filterPublicKey, String filterPublicKeyNeq, String filterPublicKeyLike, String filterPublicKeyIlike, String filterName, String filterNameNeq, String filterNameLike, String filterNameIlike, Integer filterNonce, String filterValidatorAddress, String filterValidatorAddressNeq, String filterValidatorAddressLike, String filterValidatorAddressIlike, String filterValidatorPublicKey, String filterValidatorPublicKeyNeq, String filterValidatorPublicKeyLike, String filterValidatorPublicKeyIlike, String filterValidatorPower, String filterValidatorPowerNeq, String filterValidatorPowerLike, String filterValidatorPowerIlike, ApiAccountsGetIncludeParameter include, ApiAccountsGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = apiAccountsGetCall(fieldsAccounts, filterAddress, filterAddressNeq, filterAddressLike, filterAddressIlike, filterPublicKey, filterPublicKeyNeq, filterPublicKeyLike, filterPublicKeyIlike, filterName, filterNameNeq, filterNameLike, filterNameIlike, filterNonce, filterValidatorAddress, filterValidatorAddressNeq, filterValidatorAddressLike, filterValidatorAddressIlike, filterValidatorPublicKey, filterValidatorPublicKeyNeq, filterValidatorPublicKeyLike, filterValidatorPublicKeyIlike, filterValidatorPower, filterValidatorPowerNeq, filterValidatorPowerLike, filterValidatorPowerIlike, include, sort, _callback);
        return localVarCall;

    }

    /**
     * List accounts
     * 
     * @param fieldsAccounts Include the given fields in the response. (optional)
     * @param filterAddress Filter the results where the [address] field is equal to the given value. (optional)
     * @param filterAddressNeq Filter the results where the [address] field is not equal to the given value. (optional)
     * @param filterAddressLike Filter the results where the [address] field is similar to the given case sensitive value. (optional)
     * @param filterAddressIlike Filter the results where the [address] field is similar to the given case insensitive value. (optional)
     * @param filterPublicKey Filter the results where the [public_key] field is equal to the given value. (optional)
     * @param filterPublicKeyNeq Filter the results where the [public_key] field is not equal to the given value. (optional)
     * @param filterPublicKeyLike Filter the results where the [public_key] field is similar to the given case sensitive value. (optional)
     * @param filterPublicKeyIlike Filter the results where the [public_key] field is similar to the given case insensitive value. (optional)
     * @param filterName Filter the results where the [name] field is equal to the given value. (optional)
     * @param filterNameNeq Filter the results where the [name] field is not equal to the given value. (optional)
     * @param filterNameLike Filter the results where the [name] field is similar to the given case sensitive value. (optional)
     * @param filterNameIlike Filter the results where the [name] field is similar to the given case insensitive value. (optional)
     * @param filterNonce Filter the results where the [nonce] field is equal to the given value. (optional)
     * @param filterValidatorAddress Filter the results where the [validator.address] field is equal to the given value. (optional)
     * @param filterValidatorAddressNeq Filter the results where the [validator.address] field is not equal to the given value. (optional)
     * @param filterValidatorAddressLike Filter the results where the [validator.address] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorAddressIlike Filter the results where the [validator.address] field is similar to the given case insensitive value. (optional)
     * @param filterValidatorPublicKey Filter the results where the [validator.publicKey] field is equal to the given value. (optional)
     * @param filterValidatorPublicKeyNeq Filter the results where the [validator.publicKey] field is not equal to the given value. (optional)
     * @param filterValidatorPublicKeyLike Filter the results where the [validator.publicKey] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorPublicKeyIlike Filter the results where the [validator.publicKey] field is similar to the given case insensitive value. (optional)
     * @param filterValidatorPower Filter the results where the [validator.power] field is equal to the given value. (optional)
     * @param filterValidatorPowerNeq Filter the results where the [validator.power] field is not equal to the given value. (optional)
     * @param filterValidatorPowerLike Filter the results where the [validator.power] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorPowerIlike Filter the results where the [validator.power] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiAccountsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiAccountsGet200Response apiAccountsGet(ApiAccountsGetFieldsAccountsParameter fieldsAccounts, String filterAddress, String filterAddressNeq, String filterAddressLike, String filterAddressIlike, String filterPublicKey, String filterPublicKeyNeq, String filterPublicKeyLike, String filterPublicKeyIlike, String filterName, String filterNameNeq, String filterNameLike, String filterNameIlike, Integer filterNonce, String filterValidatorAddress, String filterValidatorAddressNeq, String filterValidatorAddressLike, String filterValidatorAddressIlike, String filterValidatorPublicKey, String filterValidatorPublicKeyNeq, String filterValidatorPublicKeyLike, String filterValidatorPublicKeyIlike, String filterValidatorPower, String filterValidatorPowerNeq, String filterValidatorPowerLike, String filterValidatorPowerIlike, ApiAccountsGetIncludeParameter include, ApiAccountsGetSortParameter sort) throws ApiException {
        ApiResponse<ApiAccountsGet200Response> localVarResp = apiAccountsGetWithHttpInfo(fieldsAccounts, filterAddress, filterAddressNeq, filterAddressLike, filterAddressIlike, filterPublicKey, filterPublicKeyNeq, filterPublicKeyLike, filterPublicKeyIlike, filterName, filterNameNeq, filterNameLike, filterNameIlike, filterNonce, filterValidatorAddress, filterValidatorAddressNeq, filterValidatorAddressLike, filterValidatorAddressIlike, filterValidatorPublicKey, filterValidatorPublicKeyNeq, filterValidatorPublicKeyLike, filterValidatorPublicKeyIlike, filterValidatorPower, filterValidatorPowerNeq, filterValidatorPowerLike, filterValidatorPowerIlike, include, sort);
        return localVarResp.getData();
    }

    /**
     * List accounts
     * 
     * @param fieldsAccounts Include the given fields in the response. (optional)
     * @param filterAddress Filter the results where the [address] field is equal to the given value. (optional)
     * @param filterAddressNeq Filter the results where the [address] field is not equal to the given value. (optional)
     * @param filterAddressLike Filter the results where the [address] field is similar to the given case sensitive value. (optional)
     * @param filterAddressIlike Filter the results where the [address] field is similar to the given case insensitive value. (optional)
     * @param filterPublicKey Filter the results where the [public_key] field is equal to the given value. (optional)
     * @param filterPublicKeyNeq Filter the results where the [public_key] field is not equal to the given value. (optional)
     * @param filterPublicKeyLike Filter the results where the [public_key] field is similar to the given case sensitive value. (optional)
     * @param filterPublicKeyIlike Filter the results where the [public_key] field is similar to the given case insensitive value. (optional)
     * @param filterName Filter the results where the [name] field is equal to the given value. (optional)
     * @param filterNameNeq Filter the results where the [name] field is not equal to the given value. (optional)
     * @param filterNameLike Filter the results where the [name] field is similar to the given case sensitive value. (optional)
     * @param filterNameIlike Filter the results where the [name] field is similar to the given case insensitive value. (optional)
     * @param filterNonce Filter the results where the [nonce] field is equal to the given value. (optional)
     * @param filterValidatorAddress Filter the results where the [validator.address] field is equal to the given value. (optional)
     * @param filterValidatorAddressNeq Filter the results where the [validator.address] field is not equal to the given value. (optional)
     * @param filterValidatorAddressLike Filter the results where the [validator.address] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorAddressIlike Filter the results where the [validator.address] field is similar to the given case insensitive value. (optional)
     * @param filterValidatorPublicKey Filter the results where the [validator.publicKey] field is equal to the given value. (optional)
     * @param filterValidatorPublicKeyNeq Filter the results where the [validator.publicKey] field is not equal to the given value. (optional)
     * @param filterValidatorPublicKeyLike Filter the results where the [validator.publicKey] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorPublicKeyIlike Filter the results where the [validator.publicKey] field is similar to the given case insensitive value. (optional)
     * @param filterValidatorPower Filter the results where the [validator.power] field is equal to the given value. (optional)
     * @param filterValidatorPowerNeq Filter the results where the [validator.power] field is not equal to the given value. (optional)
     * @param filterValidatorPowerLike Filter the results where the [validator.power] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorPowerIlike Filter the results where the [validator.power] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiResponse&lt;ApiAccountsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiAccountsGet200Response> apiAccountsGetWithHttpInfo(ApiAccountsGetFieldsAccountsParameter fieldsAccounts, String filterAddress, String filterAddressNeq, String filterAddressLike, String filterAddressIlike, String filterPublicKey, String filterPublicKeyNeq, String filterPublicKeyLike, String filterPublicKeyIlike, String filterName, String filterNameNeq, String filterNameLike, String filterNameIlike, Integer filterNonce, String filterValidatorAddress, String filterValidatorAddressNeq, String filterValidatorAddressLike, String filterValidatorAddressIlike, String filterValidatorPublicKey, String filterValidatorPublicKeyNeq, String filterValidatorPublicKeyLike, String filterValidatorPublicKeyIlike, String filterValidatorPower, String filterValidatorPowerNeq, String filterValidatorPowerLike, String filterValidatorPowerIlike, ApiAccountsGetIncludeParameter include, ApiAccountsGetSortParameter sort) throws ApiException {
        okhttp3.Call localVarCall = apiAccountsGetValidateBeforeCall(fieldsAccounts, filterAddress, filterAddressNeq, filterAddressLike, filterAddressIlike, filterPublicKey, filterPublicKeyNeq, filterPublicKeyLike, filterPublicKeyIlike, filterName, filterNameNeq, filterNameLike, filterNameIlike, filterNonce, filterValidatorAddress, filterValidatorAddressNeq, filterValidatorAddressLike, filterValidatorAddressIlike, filterValidatorPublicKey, filterValidatorPublicKeyNeq, filterValidatorPublicKeyLike, filterValidatorPublicKeyIlike, filterValidatorPower, filterValidatorPowerNeq, filterValidatorPowerLike, filterValidatorPowerIlike, include, sort, null);
        Type localVarReturnType = new TypeToken<ApiAccountsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List accounts (asynchronously)
     * 
     * @param fieldsAccounts Include the given fields in the response. (optional)
     * @param filterAddress Filter the results where the [address] field is equal to the given value. (optional)
     * @param filterAddressNeq Filter the results where the [address] field is not equal to the given value. (optional)
     * @param filterAddressLike Filter the results where the [address] field is similar to the given case sensitive value. (optional)
     * @param filterAddressIlike Filter the results where the [address] field is similar to the given case insensitive value. (optional)
     * @param filterPublicKey Filter the results where the [public_key] field is equal to the given value. (optional)
     * @param filterPublicKeyNeq Filter the results where the [public_key] field is not equal to the given value. (optional)
     * @param filterPublicKeyLike Filter the results where the [public_key] field is similar to the given case sensitive value. (optional)
     * @param filterPublicKeyIlike Filter the results where the [public_key] field is similar to the given case insensitive value. (optional)
     * @param filterName Filter the results where the [name] field is equal to the given value. (optional)
     * @param filterNameNeq Filter the results where the [name] field is not equal to the given value. (optional)
     * @param filterNameLike Filter the results where the [name] field is similar to the given case sensitive value. (optional)
     * @param filterNameIlike Filter the results where the [name] field is similar to the given case insensitive value. (optional)
     * @param filterNonce Filter the results where the [nonce] field is equal to the given value. (optional)
     * @param filterValidatorAddress Filter the results where the [validator.address] field is equal to the given value. (optional)
     * @param filterValidatorAddressNeq Filter the results where the [validator.address] field is not equal to the given value. (optional)
     * @param filterValidatorAddressLike Filter the results where the [validator.address] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorAddressIlike Filter the results where the [validator.address] field is similar to the given case insensitive value. (optional)
     * @param filterValidatorPublicKey Filter the results where the [validator.publicKey] field is equal to the given value. (optional)
     * @param filterValidatorPublicKeyNeq Filter the results where the [validator.publicKey] field is not equal to the given value. (optional)
     * @param filterValidatorPublicKeyLike Filter the results where the [validator.publicKey] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorPublicKeyIlike Filter the results where the [validator.publicKey] field is similar to the given case insensitive value. (optional)
     * @param filterValidatorPower Filter the results where the [validator.power] field is equal to the given value. (optional)
     * @param filterValidatorPowerNeq Filter the results where the [validator.power] field is not equal to the given value. (optional)
     * @param filterValidatorPowerLike Filter the results where the [validator.power] field is similar to the given case sensitive value. (optional)
     * @param filterValidatorPowerIlike Filter the results where the [validator.power] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiAccountsGetAsync(ApiAccountsGetFieldsAccountsParameter fieldsAccounts, String filterAddress, String filterAddressNeq, String filterAddressLike, String filterAddressIlike, String filterPublicKey, String filterPublicKeyNeq, String filterPublicKeyLike, String filterPublicKeyIlike, String filterName, String filterNameNeq, String filterNameLike, String filterNameIlike, Integer filterNonce, String filterValidatorAddress, String filterValidatorAddressNeq, String filterValidatorAddressLike, String filterValidatorAddressIlike, String filterValidatorPublicKey, String filterValidatorPublicKeyNeq, String filterValidatorPublicKeyLike, String filterValidatorPublicKeyIlike, String filterValidatorPower, String filterValidatorPowerNeq, String filterValidatorPowerLike, String filterValidatorPowerIlike, ApiAccountsGetIncludeParameter include, ApiAccountsGetSortParameter sort, final ApiCallback<ApiAccountsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiAccountsGetValidateBeforeCall(fieldsAccounts, filterAddress, filterAddressNeq, filterAddressLike, filterAddressIlike, filterPublicKey, filterPublicKeyNeq, filterPublicKeyLike, filterPublicKeyIlike, filterName, filterNameNeq, filterNameLike, filterNameIlike, filterNonce, filterValidatorAddress, filterValidatorAddressNeq, filterValidatorAddressLike, filterValidatorAddressIlike, filterValidatorPublicKey, filterValidatorPublicKeyNeq, filterValidatorPublicKeyLike, filterValidatorPublicKeyIlike, filterValidatorPower, filterValidatorPowerNeq, filterValidatorPowerLike, filterValidatorPowerIlike, include, sort, _callback);
        Type localVarReturnType = new TypeToken<ApiAccountsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiAccountsMetadataGet
     * @param fieldsAccountsMetadata Include the given fields in the response. (optional)
     * @param filterAccountId Filter the results where the [account_id] field is equal to the given value. (optional)
     * @param filterModule Filter the results where the [module] field is equal to the given value. (optional)
     * @param filterModuleNeq Filter the results where the [module] field is not equal to the given value. (optional)
     * @param filterModuleLike Filter the results where the [module] field is similar to the given case sensitive value. (optional)
     * @param filterModuleIlike Filter the results where the [module] field is similar to the given case insensitive value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiAccountsMetadataGetCall(ApiAccountsMetadataGetFieldsAccountsMetadataParameter fieldsAccountsMetadata, Integer filterAccountId, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiAccountsMetadataGetIncludeParameter include, ApiAccountsMetadataGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/accounts/metadata";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldsAccountsMetadata != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields[accounts_metadata]", fieldsAccountsMetadata));
        }

        if (filterAccountId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[account_id]", filterAccountId));
        }

        if (filterModule != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[module]", filterModule));
        }

        if (filterModuleNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[module.neq]", filterModuleNeq));
        }

        if (filterModuleLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[module.like]", filterModuleLike));
        }

        if (filterModuleIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[module.ilike]", filterModuleIlike));
        }

        if (filterKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key]", filterKey));
        }

        if (filterKeyNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.neq]", filterKeyNeq));
        }

        if (filterKeyLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.like]", filterKeyLike));
        }

        if (filterKeyIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.ilike]", filterKeyIlike));
        }

        if (filterValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value]", filterValue));
        }

        if (filterValueNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.neq]", filterValueNeq));
        }

        if (filterValueLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.like]", filterValueLike));
        }

        if (filterValueIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.ilike]", filterValueIlike));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiAccountsMetadataGetValidateBeforeCall(ApiAccountsMetadataGetFieldsAccountsMetadataParameter fieldsAccountsMetadata, Integer filterAccountId, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiAccountsMetadataGetIncludeParameter include, ApiAccountsMetadataGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = apiAccountsMetadataGetCall(fieldsAccountsMetadata, filterAccountId, filterModule, filterModuleNeq, filterModuleLike, filterModuleIlike, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, include, sort, _callback);
        return localVarCall;

    }

    /**
     * List account metadata
     * 
     * @param fieldsAccountsMetadata Include the given fields in the response. (optional)
     * @param filterAccountId Filter the results where the [account_id] field is equal to the given value. (optional)
     * @param filterModule Filter the results where the [module] field is equal to the given value. (optional)
     * @param filterModuleNeq Filter the results where the [module] field is not equal to the given value. (optional)
     * @param filterModuleLike Filter the results where the [module] field is similar to the given case sensitive value. (optional)
     * @param filterModuleIlike Filter the results where the [module] field is similar to the given case insensitive value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiAccountsMetadataGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiAccountsMetadataGet200Response apiAccountsMetadataGet(ApiAccountsMetadataGetFieldsAccountsMetadataParameter fieldsAccountsMetadata, Integer filterAccountId, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiAccountsMetadataGetIncludeParameter include, ApiAccountsMetadataGetSortParameter sort) throws ApiException {
        ApiResponse<ApiAccountsMetadataGet200Response> localVarResp = apiAccountsMetadataGetWithHttpInfo(fieldsAccountsMetadata, filterAccountId, filterModule, filterModuleNeq, filterModuleLike, filterModuleIlike, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, include, sort);
        return localVarResp.getData();
    }

    /**
     * List account metadata
     * 
     * @param fieldsAccountsMetadata Include the given fields in the response. (optional)
     * @param filterAccountId Filter the results where the [account_id] field is equal to the given value. (optional)
     * @param filterModule Filter the results where the [module] field is equal to the given value. (optional)
     * @param filterModuleNeq Filter the results where the [module] field is not equal to the given value. (optional)
     * @param filterModuleLike Filter the results where the [module] field is similar to the given case sensitive value. (optional)
     * @param filterModuleIlike Filter the results where the [module] field is similar to the given case insensitive value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiResponse&lt;ApiAccountsMetadataGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiAccountsMetadataGet200Response> apiAccountsMetadataGetWithHttpInfo(ApiAccountsMetadataGetFieldsAccountsMetadataParameter fieldsAccountsMetadata, Integer filterAccountId, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiAccountsMetadataGetIncludeParameter include, ApiAccountsMetadataGetSortParameter sort) throws ApiException {
        okhttp3.Call localVarCall = apiAccountsMetadataGetValidateBeforeCall(fieldsAccountsMetadata, filterAccountId, filterModule, filterModuleNeq, filterModuleLike, filterModuleIlike, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, include, sort, null);
        Type localVarReturnType = new TypeToken<ApiAccountsMetadataGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List account metadata (asynchronously)
     * 
     * @param fieldsAccountsMetadata Include the given fields in the response. (optional)
     * @param filterAccountId Filter the results where the [account_id] field is equal to the given value. (optional)
     * @param filterModule Filter the results where the [module] field is equal to the given value. (optional)
     * @param filterModuleNeq Filter the results where the [module] field is not equal to the given value. (optional)
     * @param filterModuleLike Filter the results where the [module] field is similar to the given case sensitive value. (optional)
     * @param filterModuleIlike Filter the results where the [module] field is similar to the given case insensitive value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiAccountsMetadataGetAsync(ApiAccountsMetadataGetFieldsAccountsMetadataParameter fieldsAccountsMetadata, Integer filterAccountId, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiAccountsMetadataGetIncludeParameter include, ApiAccountsMetadataGetSortParameter sort, final ApiCallback<ApiAccountsMetadataGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiAccountsMetadataGetValidateBeforeCall(fieldsAccountsMetadata, filterAccountId, filterModule, filterModuleNeq, filterModuleLike, filterModuleIlike, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, include, sort, _callback);
        Type localVarReturnType = new TypeToken<ApiAccountsMetadataGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiBlocksGet
     * @param fieldsBlocks Include the given fields in the response. (optional)
     * @param filterHash Filter the results where the [hash] field is equal to the given value. (optional)
     * @param filterHashNeq Filter the results where the [hash] field is not equal to the given value. (optional)
     * @param filterHashLike Filter the results where the [hash] field is similar to the given case sensitive value. (optional)
     * @param filterHashIlike Filter the results where the [hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeight Filter the results where the [height] field is equal to the given value. (optional)
     * @param filterHeaderVersionBlock Filter the results where the [header.version.block] field is equal to the given value. (optional)
     * @param filterHeaderChainId Filter the results where the [header.chainId] field is equal to the given value. (optional)
     * @param filterHeaderChainIdNeq Filter the results where the [header.chainId] field is not equal to the given value. (optional)
     * @param filterHeaderChainIdLike Filter the results where the [header.chainId] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderChainIdIlike Filter the results where the [header.chainId] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderHeight Filter the results where the [header.height] field is equal to the given value. (optional)
     * @param filterHeaderTime Filter the results where the [header.time] field is equal to the given value. (optional)
     * @param filterHeaderTimeNeq Filter the results where the [header.time] field is not equal to the given value. (optional)
     * @param filterHeaderTimeLike Filter the results where the [header.time] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderTimeIlike Filter the results where the [header.time] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastBlockIdHash Filter the results where the [header.lastBlockId.hash] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdHashNeq Filter the results where the [header.lastBlockId.hash] field is not equal to the given value. (optional)
     * @param filterHeaderLastBlockIdHashLike Filter the results where the [header.lastBlockId.hash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastBlockIdHashIlike Filter the results where the [header.lastBlockId.hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderTotal Filter the results where the [header.lastBlockId.partSetHeader.total] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHash Filter the results where the [header.lastBlockId.partSetHeader.hash] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashNeq Filter the results where the [header.lastBlockId.partSetHeader.hash] field is not equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashLike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashIlike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastCommitHash Filter the results where the [header.lastCommitHash] field is equal to the given value. (optional)
     * @param filterHeaderLastCommitHashNeq Filter the results where the [header.lastCommitHash] field is not equal to the given value. (optional)
     * @param filterHeaderLastCommitHashLike Filter the results where the [header.lastCommitHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastCommitHashIlike Filter the results where the [header.lastCommitHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderDataHash Filter the results where the [header.dataHash] field is equal to the given value. (optional)
     * @param filterHeaderDataHashNeq Filter the results where the [header.dataHash] field is not equal to the given value. (optional)
     * @param filterHeaderDataHashLike Filter the results where the [header.dataHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderDataHashIlike Filter the results where the [header.dataHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderValidatorsHash Filter the results where the [header.validatorsHash] field is equal to the given value. (optional)
     * @param filterHeaderValidatorsHashNeq Filter the results where the [header.validatorsHash] field is not equal to the given value. (optional)
     * @param filterHeaderValidatorsHashLike Filter the results where the [header.validatorsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderValidatorsHashIlike Filter the results where the [header.validatorsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderNextValidatorsHash Filter the results where the [header.nextValidatorsHash] field is equal to the given value. (optional)
     * @param filterHeaderNextValidatorsHashNeq Filter the results where the [header.nextValidatorsHash] field is not equal to the given value. (optional)
     * @param filterHeaderNextValidatorsHashLike Filter the results where the [header.nextValidatorsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderNextValidatorsHashIlike Filter the results where the [header.nextValidatorsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderConsensusHash Filter the results where the [header.consensusHash] field is equal to the given value. (optional)
     * @param filterHeaderConsensusHashNeq Filter the results where the [header.consensusHash] field is not equal to the given value. (optional)
     * @param filterHeaderConsensusHashLike Filter the results where the [header.consensusHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderConsensusHashIlike Filter the results where the [header.consensusHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderAppHash Filter the results where the [header.appHash] field is equal to the given value. (optional)
     * @param filterHeaderAppHashNeq Filter the results where the [header.appHash] field is not equal to the given value. (optional)
     * @param filterHeaderAppHashLike Filter the results where the [header.appHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderAppHashIlike Filter the results where the [header.appHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastResultsHash Filter the results where the [header.lastResultsHash] field is equal to the given value. (optional)
     * @param filterHeaderLastResultsHashNeq Filter the results where the [header.lastResultsHash] field is not equal to the given value. (optional)
     * @param filterHeaderLastResultsHashLike Filter the results where the [header.lastResultsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastResultsHashIlike Filter the results where the [header.lastResultsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderEvidenceHash Filter the results where the [header.evidenceHash] field is equal to the given value. (optional)
     * @param filterHeaderEvidenceHashNeq Filter the results where the [header.evidenceHash] field is not equal to the given value. (optional)
     * @param filterHeaderEvidenceHashLike Filter the results where the [header.evidenceHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderEvidenceHashIlike Filter the results where the [header.evidenceHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderProposerAddress Filter the results where the [header.proposerAddress] field is equal to the given value. (optional)
     * @param filterHeaderProposerAddressNeq Filter the results where the [header.proposerAddress] field is not equal to the given value. (optional)
     * @param filterHeaderProposerAddressLike Filter the results where the [header.proposerAddress] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderProposerAddressIlike Filter the results where the [header.proposerAddress] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiBlocksGetCall(ApiBlocksGetFieldsBlocksParameter fieldsBlocks, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, Integer filterHeight, Integer filterHeaderVersionBlock, String filterHeaderChainId, String filterHeaderChainIdNeq, String filterHeaderChainIdLike, String filterHeaderChainIdIlike, Integer filterHeaderHeight, String filterHeaderTime, String filterHeaderTimeNeq, String filterHeaderTimeLike, String filterHeaderTimeIlike, String filterHeaderLastBlockIdHash, String filterHeaderLastBlockIdHashNeq, String filterHeaderLastBlockIdHashLike, String filterHeaderLastBlockIdHashIlike, Integer filterHeaderLastBlockIdPartSetHeaderTotal, String filterHeaderLastBlockIdPartSetHeaderHash, String filterHeaderLastBlockIdPartSetHeaderHashNeq, String filterHeaderLastBlockIdPartSetHeaderHashLike, String filterHeaderLastBlockIdPartSetHeaderHashIlike, String filterHeaderLastCommitHash, String filterHeaderLastCommitHashNeq, String filterHeaderLastCommitHashLike, String filterHeaderLastCommitHashIlike, String filterHeaderDataHash, String filterHeaderDataHashNeq, String filterHeaderDataHashLike, String filterHeaderDataHashIlike, String filterHeaderValidatorsHash, String filterHeaderValidatorsHashNeq, String filterHeaderValidatorsHashLike, String filterHeaderValidatorsHashIlike, String filterHeaderNextValidatorsHash, String filterHeaderNextValidatorsHashNeq, String filterHeaderNextValidatorsHashLike, String filterHeaderNextValidatorsHashIlike, String filterHeaderConsensusHash, String filterHeaderConsensusHashNeq, String filterHeaderConsensusHashLike, String filterHeaderConsensusHashIlike, String filterHeaderAppHash, String filterHeaderAppHashNeq, String filterHeaderAppHashLike, String filterHeaderAppHashIlike, String filterHeaderLastResultsHash, String filterHeaderLastResultsHashNeq, String filterHeaderLastResultsHashLike, String filterHeaderLastResultsHashIlike, String filterHeaderEvidenceHash, String filterHeaderEvidenceHashNeq, String filterHeaderEvidenceHashLike, String filterHeaderEvidenceHashIlike, String filterHeaderProposerAddress, String filterHeaderProposerAddressNeq, String filterHeaderProposerAddressLike, String filterHeaderProposerAddressIlike, ApiBlocksGetIncludeParameter include, ApiBlocksGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/blocks";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldsBlocks != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields[blocks]", fieldsBlocks));
        }

        if (filterHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[hash]", filterHash));
        }

        if (filterHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[hash.neq]", filterHashNeq));
        }

        if (filterHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[hash.like]", filterHashLike));
        }

        if (filterHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[hash.ilike]", filterHashIlike));
        }

        if (filterHeight != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[height]", filterHeight));
        }

        if (filterHeaderVersionBlock != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.version.block]", filterHeaderVersionBlock));
        }

        if (filterHeaderChainId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.chainId]", filterHeaderChainId));
        }

        if (filterHeaderChainIdNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.chainId.neq]", filterHeaderChainIdNeq));
        }

        if (filterHeaderChainIdLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.chainId.like]", filterHeaderChainIdLike));
        }

        if (filterHeaderChainIdIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.chainId.ilike]", filterHeaderChainIdIlike));
        }

        if (filterHeaderHeight != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.height]", filterHeaderHeight));
        }

        if (filterHeaderTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.time]", filterHeaderTime));
        }

        if (filterHeaderTimeNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.time.neq]", filterHeaderTimeNeq));
        }

        if (filterHeaderTimeLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.time.like]", filterHeaderTimeLike));
        }

        if (filterHeaderTimeIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.time.ilike]", filterHeaderTimeIlike));
        }

        if (filterHeaderLastBlockIdHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.hash]", filterHeaderLastBlockIdHash));
        }

        if (filterHeaderLastBlockIdHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.hash.neq]", filterHeaderLastBlockIdHashNeq));
        }

        if (filterHeaderLastBlockIdHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.hash.like]", filterHeaderLastBlockIdHashLike));
        }

        if (filterHeaderLastBlockIdHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.hash.ilike]", filterHeaderLastBlockIdHashIlike));
        }

        if (filterHeaderLastBlockIdPartSetHeaderTotal != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.partSetHeader.total]", filterHeaderLastBlockIdPartSetHeaderTotal));
        }

        if (filterHeaderLastBlockIdPartSetHeaderHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.partSetHeader.hash]", filterHeaderLastBlockIdPartSetHeaderHash));
        }

        if (filterHeaderLastBlockIdPartSetHeaderHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.partSetHeader.hash.neq]", filterHeaderLastBlockIdPartSetHeaderHashNeq));
        }

        if (filterHeaderLastBlockIdPartSetHeaderHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.partSetHeader.hash.like]", filterHeaderLastBlockIdPartSetHeaderHashLike));
        }

        if (filterHeaderLastBlockIdPartSetHeaderHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastBlockId.partSetHeader.hash.ilike]", filterHeaderLastBlockIdPartSetHeaderHashIlike));
        }

        if (filterHeaderLastCommitHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastCommitHash]", filterHeaderLastCommitHash));
        }

        if (filterHeaderLastCommitHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastCommitHash.neq]", filterHeaderLastCommitHashNeq));
        }

        if (filterHeaderLastCommitHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastCommitHash.like]", filterHeaderLastCommitHashLike));
        }

        if (filterHeaderLastCommitHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastCommitHash.ilike]", filterHeaderLastCommitHashIlike));
        }

        if (filterHeaderDataHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.dataHash]", filterHeaderDataHash));
        }

        if (filterHeaderDataHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.dataHash.neq]", filterHeaderDataHashNeq));
        }

        if (filterHeaderDataHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.dataHash.like]", filterHeaderDataHashLike));
        }

        if (filterHeaderDataHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.dataHash.ilike]", filterHeaderDataHashIlike));
        }

        if (filterHeaderValidatorsHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.validatorsHash]", filterHeaderValidatorsHash));
        }

        if (filterHeaderValidatorsHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.validatorsHash.neq]", filterHeaderValidatorsHashNeq));
        }

        if (filterHeaderValidatorsHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.validatorsHash.like]", filterHeaderValidatorsHashLike));
        }

        if (filterHeaderValidatorsHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.validatorsHash.ilike]", filterHeaderValidatorsHashIlike));
        }

        if (filterHeaderNextValidatorsHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.nextValidatorsHash]", filterHeaderNextValidatorsHash));
        }

        if (filterHeaderNextValidatorsHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.nextValidatorsHash.neq]", filterHeaderNextValidatorsHashNeq));
        }

        if (filterHeaderNextValidatorsHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.nextValidatorsHash.like]", filterHeaderNextValidatorsHashLike));
        }

        if (filterHeaderNextValidatorsHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.nextValidatorsHash.ilike]", filterHeaderNextValidatorsHashIlike));
        }

        if (filterHeaderConsensusHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.consensusHash]", filterHeaderConsensusHash));
        }

        if (filterHeaderConsensusHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.consensusHash.neq]", filterHeaderConsensusHashNeq));
        }

        if (filterHeaderConsensusHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.consensusHash.like]", filterHeaderConsensusHashLike));
        }

        if (filterHeaderConsensusHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.consensusHash.ilike]", filterHeaderConsensusHashIlike));
        }

        if (filterHeaderAppHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.appHash]", filterHeaderAppHash));
        }

        if (filterHeaderAppHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.appHash.neq]", filterHeaderAppHashNeq));
        }

        if (filterHeaderAppHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.appHash.like]", filterHeaderAppHashLike));
        }

        if (filterHeaderAppHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.appHash.ilike]", filterHeaderAppHashIlike));
        }

        if (filterHeaderLastResultsHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastResultsHash]", filterHeaderLastResultsHash));
        }

        if (filterHeaderLastResultsHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastResultsHash.neq]", filterHeaderLastResultsHashNeq));
        }

        if (filterHeaderLastResultsHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastResultsHash.like]", filterHeaderLastResultsHashLike));
        }

        if (filterHeaderLastResultsHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.lastResultsHash.ilike]", filterHeaderLastResultsHashIlike));
        }

        if (filterHeaderEvidenceHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.evidenceHash]", filterHeaderEvidenceHash));
        }

        if (filterHeaderEvidenceHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.evidenceHash.neq]", filterHeaderEvidenceHashNeq));
        }

        if (filterHeaderEvidenceHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.evidenceHash.like]", filterHeaderEvidenceHashLike));
        }

        if (filterHeaderEvidenceHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.evidenceHash.ilike]", filterHeaderEvidenceHashIlike));
        }

        if (filterHeaderProposerAddress != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.proposerAddress]", filterHeaderProposerAddress));
        }

        if (filterHeaderProposerAddressNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.proposerAddress.neq]", filterHeaderProposerAddressNeq));
        }

        if (filterHeaderProposerAddressLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.proposerAddress.like]", filterHeaderProposerAddressLike));
        }

        if (filterHeaderProposerAddressIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[header.proposerAddress.ilike]", filterHeaderProposerAddressIlike));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiBlocksGetValidateBeforeCall(ApiBlocksGetFieldsBlocksParameter fieldsBlocks, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, Integer filterHeight, Integer filterHeaderVersionBlock, String filterHeaderChainId, String filterHeaderChainIdNeq, String filterHeaderChainIdLike, String filterHeaderChainIdIlike, Integer filterHeaderHeight, String filterHeaderTime, String filterHeaderTimeNeq, String filterHeaderTimeLike, String filterHeaderTimeIlike, String filterHeaderLastBlockIdHash, String filterHeaderLastBlockIdHashNeq, String filterHeaderLastBlockIdHashLike, String filterHeaderLastBlockIdHashIlike, Integer filterHeaderLastBlockIdPartSetHeaderTotal, String filterHeaderLastBlockIdPartSetHeaderHash, String filterHeaderLastBlockIdPartSetHeaderHashNeq, String filterHeaderLastBlockIdPartSetHeaderHashLike, String filterHeaderLastBlockIdPartSetHeaderHashIlike, String filterHeaderLastCommitHash, String filterHeaderLastCommitHashNeq, String filterHeaderLastCommitHashLike, String filterHeaderLastCommitHashIlike, String filterHeaderDataHash, String filterHeaderDataHashNeq, String filterHeaderDataHashLike, String filterHeaderDataHashIlike, String filterHeaderValidatorsHash, String filterHeaderValidatorsHashNeq, String filterHeaderValidatorsHashLike, String filterHeaderValidatorsHashIlike, String filterHeaderNextValidatorsHash, String filterHeaderNextValidatorsHashNeq, String filterHeaderNextValidatorsHashLike, String filterHeaderNextValidatorsHashIlike, String filterHeaderConsensusHash, String filterHeaderConsensusHashNeq, String filterHeaderConsensusHashLike, String filterHeaderConsensusHashIlike, String filterHeaderAppHash, String filterHeaderAppHashNeq, String filterHeaderAppHashLike, String filterHeaderAppHashIlike, String filterHeaderLastResultsHash, String filterHeaderLastResultsHashNeq, String filterHeaderLastResultsHashLike, String filterHeaderLastResultsHashIlike, String filterHeaderEvidenceHash, String filterHeaderEvidenceHashNeq, String filterHeaderEvidenceHashLike, String filterHeaderEvidenceHashIlike, String filterHeaderProposerAddress, String filterHeaderProposerAddressNeq, String filterHeaderProposerAddressLike, String filterHeaderProposerAddressIlike, ApiBlocksGetIncludeParameter include, ApiBlocksGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = apiBlocksGetCall(fieldsBlocks, filterHash, filterHashNeq, filterHashLike, filterHashIlike, filterHeight, filterHeaderVersionBlock, filterHeaderChainId, filterHeaderChainIdNeq, filterHeaderChainIdLike, filterHeaderChainIdIlike, filterHeaderHeight, filterHeaderTime, filterHeaderTimeNeq, filterHeaderTimeLike, filterHeaderTimeIlike, filterHeaderLastBlockIdHash, filterHeaderLastBlockIdHashNeq, filterHeaderLastBlockIdHashLike, filterHeaderLastBlockIdHashIlike, filterHeaderLastBlockIdPartSetHeaderTotal, filterHeaderLastBlockIdPartSetHeaderHash, filterHeaderLastBlockIdPartSetHeaderHashNeq, filterHeaderLastBlockIdPartSetHeaderHashLike, filterHeaderLastBlockIdPartSetHeaderHashIlike, filterHeaderLastCommitHash, filterHeaderLastCommitHashNeq, filterHeaderLastCommitHashLike, filterHeaderLastCommitHashIlike, filterHeaderDataHash, filterHeaderDataHashNeq, filterHeaderDataHashLike, filterHeaderDataHashIlike, filterHeaderValidatorsHash, filterHeaderValidatorsHashNeq, filterHeaderValidatorsHashLike, filterHeaderValidatorsHashIlike, filterHeaderNextValidatorsHash, filterHeaderNextValidatorsHashNeq, filterHeaderNextValidatorsHashLike, filterHeaderNextValidatorsHashIlike, filterHeaderConsensusHash, filterHeaderConsensusHashNeq, filterHeaderConsensusHashLike, filterHeaderConsensusHashIlike, filterHeaderAppHash, filterHeaderAppHashNeq, filterHeaderAppHashLike, filterHeaderAppHashIlike, filterHeaderLastResultsHash, filterHeaderLastResultsHashNeq, filterHeaderLastResultsHashLike, filterHeaderLastResultsHashIlike, filterHeaderEvidenceHash, filterHeaderEvidenceHashNeq, filterHeaderEvidenceHashLike, filterHeaderEvidenceHashIlike, filterHeaderProposerAddress, filterHeaderProposerAddressNeq, filterHeaderProposerAddressLike, filterHeaderProposerAddressIlike, include, sort, _callback);
        return localVarCall;

    }

    /**
     * List blocks
     * 
     * @param fieldsBlocks Include the given fields in the response. (optional)
     * @param filterHash Filter the results where the [hash] field is equal to the given value. (optional)
     * @param filterHashNeq Filter the results where the [hash] field is not equal to the given value. (optional)
     * @param filterHashLike Filter the results where the [hash] field is similar to the given case sensitive value. (optional)
     * @param filterHashIlike Filter the results where the [hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeight Filter the results where the [height] field is equal to the given value. (optional)
     * @param filterHeaderVersionBlock Filter the results where the [header.version.block] field is equal to the given value. (optional)
     * @param filterHeaderChainId Filter the results where the [header.chainId] field is equal to the given value. (optional)
     * @param filterHeaderChainIdNeq Filter the results where the [header.chainId] field is not equal to the given value. (optional)
     * @param filterHeaderChainIdLike Filter the results where the [header.chainId] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderChainIdIlike Filter the results where the [header.chainId] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderHeight Filter the results where the [header.height] field is equal to the given value. (optional)
     * @param filterHeaderTime Filter the results where the [header.time] field is equal to the given value. (optional)
     * @param filterHeaderTimeNeq Filter the results where the [header.time] field is not equal to the given value. (optional)
     * @param filterHeaderTimeLike Filter the results where the [header.time] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderTimeIlike Filter the results where the [header.time] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastBlockIdHash Filter the results where the [header.lastBlockId.hash] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdHashNeq Filter the results where the [header.lastBlockId.hash] field is not equal to the given value. (optional)
     * @param filterHeaderLastBlockIdHashLike Filter the results where the [header.lastBlockId.hash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastBlockIdHashIlike Filter the results where the [header.lastBlockId.hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderTotal Filter the results where the [header.lastBlockId.partSetHeader.total] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHash Filter the results where the [header.lastBlockId.partSetHeader.hash] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashNeq Filter the results where the [header.lastBlockId.partSetHeader.hash] field is not equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashLike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashIlike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastCommitHash Filter the results where the [header.lastCommitHash] field is equal to the given value. (optional)
     * @param filterHeaderLastCommitHashNeq Filter the results where the [header.lastCommitHash] field is not equal to the given value. (optional)
     * @param filterHeaderLastCommitHashLike Filter the results where the [header.lastCommitHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastCommitHashIlike Filter the results where the [header.lastCommitHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderDataHash Filter the results where the [header.dataHash] field is equal to the given value. (optional)
     * @param filterHeaderDataHashNeq Filter the results where the [header.dataHash] field is not equal to the given value. (optional)
     * @param filterHeaderDataHashLike Filter the results where the [header.dataHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderDataHashIlike Filter the results where the [header.dataHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderValidatorsHash Filter the results where the [header.validatorsHash] field is equal to the given value. (optional)
     * @param filterHeaderValidatorsHashNeq Filter the results where the [header.validatorsHash] field is not equal to the given value. (optional)
     * @param filterHeaderValidatorsHashLike Filter the results where the [header.validatorsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderValidatorsHashIlike Filter the results where the [header.validatorsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderNextValidatorsHash Filter the results where the [header.nextValidatorsHash] field is equal to the given value. (optional)
     * @param filterHeaderNextValidatorsHashNeq Filter the results where the [header.nextValidatorsHash] field is not equal to the given value. (optional)
     * @param filterHeaderNextValidatorsHashLike Filter the results where the [header.nextValidatorsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderNextValidatorsHashIlike Filter the results where the [header.nextValidatorsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderConsensusHash Filter the results where the [header.consensusHash] field is equal to the given value. (optional)
     * @param filterHeaderConsensusHashNeq Filter the results where the [header.consensusHash] field is not equal to the given value. (optional)
     * @param filterHeaderConsensusHashLike Filter the results where the [header.consensusHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderConsensusHashIlike Filter the results where the [header.consensusHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderAppHash Filter the results where the [header.appHash] field is equal to the given value. (optional)
     * @param filterHeaderAppHashNeq Filter the results where the [header.appHash] field is not equal to the given value. (optional)
     * @param filterHeaderAppHashLike Filter the results where the [header.appHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderAppHashIlike Filter the results where the [header.appHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastResultsHash Filter the results where the [header.lastResultsHash] field is equal to the given value. (optional)
     * @param filterHeaderLastResultsHashNeq Filter the results where the [header.lastResultsHash] field is not equal to the given value. (optional)
     * @param filterHeaderLastResultsHashLike Filter the results where the [header.lastResultsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastResultsHashIlike Filter the results where the [header.lastResultsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderEvidenceHash Filter the results where the [header.evidenceHash] field is equal to the given value. (optional)
     * @param filterHeaderEvidenceHashNeq Filter the results where the [header.evidenceHash] field is not equal to the given value. (optional)
     * @param filterHeaderEvidenceHashLike Filter the results where the [header.evidenceHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderEvidenceHashIlike Filter the results where the [header.evidenceHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderProposerAddress Filter the results where the [header.proposerAddress] field is equal to the given value. (optional)
     * @param filterHeaderProposerAddressNeq Filter the results where the [header.proposerAddress] field is not equal to the given value. (optional)
     * @param filterHeaderProposerAddressLike Filter the results where the [header.proposerAddress] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderProposerAddressIlike Filter the results where the [header.proposerAddress] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiBlocksGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiBlocksGet200Response apiBlocksGet(ApiBlocksGetFieldsBlocksParameter fieldsBlocks, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, Integer filterHeight, Integer filterHeaderVersionBlock, String filterHeaderChainId, String filterHeaderChainIdNeq, String filterHeaderChainIdLike, String filterHeaderChainIdIlike, Integer filterHeaderHeight, String filterHeaderTime, String filterHeaderTimeNeq, String filterHeaderTimeLike, String filterHeaderTimeIlike, String filterHeaderLastBlockIdHash, String filterHeaderLastBlockIdHashNeq, String filterHeaderLastBlockIdHashLike, String filterHeaderLastBlockIdHashIlike, Integer filterHeaderLastBlockIdPartSetHeaderTotal, String filterHeaderLastBlockIdPartSetHeaderHash, String filterHeaderLastBlockIdPartSetHeaderHashNeq, String filterHeaderLastBlockIdPartSetHeaderHashLike, String filterHeaderLastBlockIdPartSetHeaderHashIlike, String filterHeaderLastCommitHash, String filterHeaderLastCommitHashNeq, String filterHeaderLastCommitHashLike, String filterHeaderLastCommitHashIlike, String filterHeaderDataHash, String filterHeaderDataHashNeq, String filterHeaderDataHashLike, String filterHeaderDataHashIlike, String filterHeaderValidatorsHash, String filterHeaderValidatorsHashNeq, String filterHeaderValidatorsHashLike, String filterHeaderValidatorsHashIlike, String filterHeaderNextValidatorsHash, String filterHeaderNextValidatorsHashNeq, String filterHeaderNextValidatorsHashLike, String filterHeaderNextValidatorsHashIlike, String filterHeaderConsensusHash, String filterHeaderConsensusHashNeq, String filterHeaderConsensusHashLike, String filterHeaderConsensusHashIlike, String filterHeaderAppHash, String filterHeaderAppHashNeq, String filterHeaderAppHashLike, String filterHeaderAppHashIlike, String filterHeaderLastResultsHash, String filterHeaderLastResultsHashNeq, String filterHeaderLastResultsHashLike, String filterHeaderLastResultsHashIlike, String filterHeaderEvidenceHash, String filterHeaderEvidenceHashNeq, String filterHeaderEvidenceHashLike, String filterHeaderEvidenceHashIlike, String filterHeaderProposerAddress, String filterHeaderProposerAddressNeq, String filterHeaderProposerAddressLike, String filterHeaderProposerAddressIlike, ApiBlocksGetIncludeParameter include, ApiBlocksGetSortParameter sort) throws ApiException {
        ApiResponse<ApiBlocksGet200Response> localVarResp = apiBlocksGetWithHttpInfo(fieldsBlocks, filterHash, filterHashNeq, filterHashLike, filterHashIlike, filterHeight, filterHeaderVersionBlock, filterHeaderChainId, filterHeaderChainIdNeq, filterHeaderChainIdLike, filterHeaderChainIdIlike, filterHeaderHeight, filterHeaderTime, filterHeaderTimeNeq, filterHeaderTimeLike, filterHeaderTimeIlike, filterHeaderLastBlockIdHash, filterHeaderLastBlockIdHashNeq, filterHeaderLastBlockIdHashLike, filterHeaderLastBlockIdHashIlike, filterHeaderLastBlockIdPartSetHeaderTotal, filterHeaderLastBlockIdPartSetHeaderHash, filterHeaderLastBlockIdPartSetHeaderHashNeq, filterHeaderLastBlockIdPartSetHeaderHashLike, filterHeaderLastBlockIdPartSetHeaderHashIlike, filterHeaderLastCommitHash, filterHeaderLastCommitHashNeq, filterHeaderLastCommitHashLike, filterHeaderLastCommitHashIlike, filterHeaderDataHash, filterHeaderDataHashNeq, filterHeaderDataHashLike, filterHeaderDataHashIlike, filterHeaderValidatorsHash, filterHeaderValidatorsHashNeq, filterHeaderValidatorsHashLike, filterHeaderValidatorsHashIlike, filterHeaderNextValidatorsHash, filterHeaderNextValidatorsHashNeq, filterHeaderNextValidatorsHashLike, filterHeaderNextValidatorsHashIlike, filterHeaderConsensusHash, filterHeaderConsensusHashNeq, filterHeaderConsensusHashLike, filterHeaderConsensusHashIlike, filterHeaderAppHash, filterHeaderAppHashNeq, filterHeaderAppHashLike, filterHeaderAppHashIlike, filterHeaderLastResultsHash, filterHeaderLastResultsHashNeq, filterHeaderLastResultsHashLike, filterHeaderLastResultsHashIlike, filterHeaderEvidenceHash, filterHeaderEvidenceHashNeq, filterHeaderEvidenceHashLike, filterHeaderEvidenceHashIlike, filterHeaderProposerAddress, filterHeaderProposerAddressNeq, filterHeaderProposerAddressLike, filterHeaderProposerAddressIlike, include, sort);
        return localVarResp.getData();
    }

    /**
     * List blocks
     * 
     * @param fieldsBlocks Include the given fields in the response. (optional)
     * @param filterHash Filter the results where the [hash] field is equal to the given value. (optional)
     * @param filterHashNeq Filter the results where the [hash] field is not equal to the given value. (optional)
     * @param filterHashLike Filter the results where the [hash] field is similar to the given case sensitive value. (optional)
     * @param filterHashIlike Filter the results where the [hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeight Filter the results where the [height] field is equal to the given value. (optional)
     * @param filterHeaderVersionBlock Filter the results where the [header.version.block] field is equal to the given value. (optional)
     * @param filterHeaderChainId Filter the results where the [header.chainId] field is equal to the given value. (optional)
     * @param filterHeaderChainIdNeq Filter the results where the [header.chainId] field is not equal to the given value. (optional)
     * @param filterHeaderChainIdLike Filter the results where the [header.chainId] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderChainIdIlike Filter the results where the [header.chainId] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderHeight Filter the results where the [header.height] field is equal to the given value. (optional)
     * @param filterHeaderTime Filter the results where the [header.time] field is equal to the given value. (optional)
     * @param filterHeaderTimeNeq Filter the results where the [header.time] field is not equal to the given value. (optional)
     * @param filterHeaderTimeLike Filter the results where the [header.time] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderTimeIlike Filter the results where the [header.time] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastBlockIdHash Filter the results where the [header.lastBlockId.hash] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdHashNeq Filter the results where the [header.lastBlockId.hash] field is not equal to the given value. (optional)
     * @param filterHeaderLastBlockIdHashLike Filter the results where the [header.lastBlockId.hash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastBlockIdHashIlike Filter the results where the [header.lastBlockId.hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderTotal Filter the results where the [header.lastBlockId.partSetHeader.total] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHash Filter the results where the [header.lastBlockId.partSetHeader.hash] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashNeq Filter the results where the [header.lastBlockId.partSetHeader.hash] field is not equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashLike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashIlike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastCommitHash Filter the results where the [header.lastCommitHash] field is equal to the given value. (optional)
     * @param filterHeaderLastCommitHashNeq Filter the results where the [header.lastCommitHash] field is not equal to the given value. (optional)
     * @param filterHeaderLastCommitHashLike Filter the results where the [header.lastCommitHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastCommitHashIlike Filter the results where the [header.lastCommitHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderDataHash Filter the results where the [header.dataHash] field is equal to the given value. (optional)
     * @param filterHeaderDataHashNeq Filter the results where the [header.dataHash] field is not equal to the given value. (optional)
     * @param filterHeaderDataHashLike Filter the results where the [header.dataHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderDataHashIlike Filter the results where the [header.dataHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderValidatorsHash Filter the results where the [header.validatorsHash] field is equal to the given value. (optional)
     * @param filterHeaderValidatorsHashNeq Filter the results where the [header.validatorsHash] field is not equal to the given value. (optional)
     * @param filterHeaderValidatorsHashLike Filter the results where the [header.validatorsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderValidatorsHashIlike Filter the results where the [header.validatorsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderNextValidatorsHash Filter the results where the [header.nextValidatorsHash] field is equal to the given value. (optional)
     * @param filterHeaderNextValidatorsHashNeq Filter the results where the [header.nextValidatorsHash] field is not equal to the given value. (optional)
     * @param filterHeaderNextValidatorsHashLike Filter the results where the [header.nextValidatorsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderNextValidatorsHashIlike Filter the results where the [header.nextValidatorsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderConsensusHash Filter the results where the [header.consensusHash] field is equal to the given value. (optional)
     * @param filterHeaderConsensusHashNeq Filter the results where the [header.consensusHash] field is not equal to the given value. (optional)
     * @param filterHeaderConsensusHashLike Filter the results where the [header.consensusHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderConsensusHashIlike Filter the results where the [header.consensusHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderAppHash Filter the results where the [header.appHash] field is equal to the given value. (optional)
     * @param filterHeaderAppHashNeq Filter the results where the [header.appHash] field is not equal to the given value. (optional)
     * @param filterHeaderAppHashLike Filter the results where the [header.appHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderAppHashIlike Filter the results where the [header.appHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastResultsHash Filter the results where the [header.lastResultsHash] field is equal to the given value. (optional)
     * @param filterHeaderLastResultsHashNeq Filter the results where the [header.lastResultsHash] field is not equal to the given value. (optional)
     * @param filterHeaderLastResultsHashLike Filter the results where the [header.lastResultsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastResultsHashIlike Filter the results where the [header.lastResultsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderEvidenceHash Filter the results where the [header.evidenceHash] field is equal to the given value. (optional)
     * @param filterHeaderEvidenceHashNeq Filter the results where the [header.evidenceHash] field is not equal to the given value. (optional)
     * @param filterHeaderEvidenceHashLike Filter the results where the [header.evidenceHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderEvidenceHashIlike Filter the results where the [header.evidenceHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderProposerAddress Filter the results where the [header.proposerAddress] field is equal to the given value. (optional)
     * @param filterHeaderProposerAddressNeq Filter the results where the [header.proposerAddress] field is not equal to the given value. (optional)
     * @param filterHeaderProposerAddressLike Filter the results where the [header.proposerAddress] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderProposerAddressIlike Filter the results where the [header.proposerAddress] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiResponse&lt;ApiBlocksGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiBlocksGet200Response> apiBlocksGetWithHttpInfo(ApiBlocksGetFieldsBlocksParameter fieldsBlocks, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, Integer filterHeight, Integer filterHeaderVersionBlock, String filterHeaderChainId, String filterHeaderChainIdNeq, String filterHeaderChainIdLike, String filterHeaderChainIdIlike, Integer filterHeaderHeight, String filterHeaderTime, String filterHeaderTimeNeq, String filterHeaderTimeLike, String filterHeaderTimeIlike, String filterHeaderLastBlockIdHash, String filterHeaderLastBlockIdHashNeq, String filterHeaderLastBlockIdHashLike, String filterHeaderLastBlockIdHashIlike, Integer filterHeaderLastBlockIdPartSetHeaderTotal, String filterHeaderLastBlockIdPartSetHeaderHash, String filterHeaderLastBlockIdPartSetHeaderHashNeq, String filterHeaderLastBlockIdPartSetHeaderHashLike, String filterHeaderLastBlockIdPartSetHeaderHashIlike, String filterHeaderLastCommitHash, String filterHeaderLastCommitHashNeq, String filterHeaderLastCommitHashLike, String filterHeaderLastCommitHashIlike, String filterHeaderDataHash, String filterHeaderDataHashNeq, String filterHeaderDataHashLike, String filterHeaderDataHashIlike, String filterHeaderValidatorsHash, String filterHeaderValidatorsHashNeq, String filterHeaderValidatorsHashLike, String filterHeaderValidatorsHashIlike, String filterHeaderNextValidatorsHash, String filterHeaderNextValidatorsHashNeq, String filterHeaderNextValidatorsHashLike, String filterHeaderNextValidatorsHashIlike, String filterHeaderConsensusHash, String filterHeaderConsensusHashNeq, String filterHeaderConsensusHashLike, String filterHeaderConsensusHashIlike, String filterHeaderAppHash, String filterHeaderAppHashNeq, String filterHeaderAppHashLike, String filterHeaderAppHashIlike, String filterHeaderLastResultsHash, String filterHeaderLastResultsHashNeq, String filterHeaderLastResultsHashLike, String filterHeaderLastResultsHashIlike, String filterHeaderEvidenceHash, String filterHeaderEvidenceHashNeq, String filterHeaderEvidenceHashLike, String filterHeaderEvidenceHashIlike, String filterHeaderProposerAddress, String filterHeaderProposerAddressNeq, String filterHeaderProposerAddressLike, String filterHeaderProposerAddressIlike, ApiBlocksGetIncludeParameter include, ApiBlocksGetSortParameter sort) throws ApiException {
        okhttp3.Call localVarCall = apiBlocksGetValidateBeforeCall(fieldsBlocks, filterHash, filterHashNeq, filterHashLike, filterHashIlike, filterHeight, filterHeaderVersionBlock, filterHeaderChainId, filterHeaderChainIdNeq, filterHeaderChainIdLike, filterHeaderChainIdIlike, filterHeaderHeight, filterHeaderTime, filterHeaderTimeNeq, filterHeaderTimeLike, filterHeaderTimeIlike, filterHeaderLastBlockIdHash, filterHeaderLastBlockIdHashNeq, filterHeaderLastBlockIdHashLike, filterHeaderLastBlockIdHashIlike, filterHeaderLastBlockIdPartSetHeaderTotal, filterHeaderLastBlockIdPartSetHeaderHash, filterHeaderLastBlockIdPartSetHeaderHashNeq, filterHeaderLastBlockIdPartSetHeaderHashLike, filterHeaderLastBlockIdPartSetHeaderHashIlike, filterHeaderLastCommitHash, filterHeaderLastCommitHashNeq, filterHeaderLastCommitHashLike, filterHeaderLastCommitHashIlike, filterHeaderDataHash, filterHeaderDataHashNeq, filterHeaderDataHashLike, filterHeaderDataHashIlike, filterHeaderValidatorsHash, filterHeaderValidatorsHashNeq, filterHeaderValidatorsHashLike, filterHeaderValidatorsHashIlike, filterHeaderNextValidatorsHash, filterHeaderNextValidatorsHashNeq, filterHeaderNextValidatorsHashLike, filterHeaderNextValidatorsHashIlike, filterHeaderConsensusHash, filterHeaderConsensusHashNeq, filterHeaderConsensusHashLike, filterHeaderConsensusHashIlike, filterHeaderAppHash, filterHeaderAppHashNeq, filterHeaderAppHashLike, filterHeaderAppHashIlike, filterHeaderLastResultsHash, filterHeaderLastResultsHashNeq, filterHeaderLastResultsHashLike, filterHeaderLastResultsHashIlike, filterHeaderEvidenceHash, filterHeaderEvidenceHashNeq, filterHeaderEvidenceHashLike, filterHeaderEvidenceHashIlike, filterHeaderProposerAddress, filterHeaderProposerAddressNeq, filterHeaderProposerAddressLike, filterHeaderProposerAddressIlike, include, sort, null);
        Type localVarReturnType = new TypeToken<ApiBlocksGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List blocks (asynchronously)
     * 
     * @param fieldsBlocks Include the given fields in the response. (optional)
     * @param filterHash Filter the results where the [hash] field is equal to the given value. (optional)
     * @param filterHashNeq Filter the results where the [hash] field is not equal to the given value. (optional)
     * @param filterHashLike Filter the results where the [hash] field is similar to the given case sensitive value. (optional)
     * @param filterHashIlike Filter the results where the [hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeight Filter the results where the [height] field is equal to the given value. (optional)
     * @param filterHeaderVersionBlock Filter the results where the [header.version.block] field is equal to the given value. (optional)
     * @param filterHeaderChainId Filter the results where the [header.chainId] field is equal to the given value. (optional)
     * @param filterHeaderChainIdNeq Filter the results where the [header.chainId] field is not equal to the given value. (optional)
     * @param filterHeaderChainIdLike Filter the results where the [header.chainId] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderChainIdIlike Filter the results where the [header.chainId] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderHeight Filter the results where the [header.height] field is equal to the given value. (optional)
     * @param filterHeaderTime Filter the results where the [header.time] field is equal to the given value. (optional)
     * @param filterHeaderTimeNeq Filter the results where the [header.time] field is not equal to the given value. (optional)
     * @param filterHeaderTimeLike Filter the results where the [header.time] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderTimeIlike Filter the results where the [header.time] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastBlockIdHash Filter the results where the [header.lastBlockId.hash] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdHashNeq Filter the results where the [header.lastBlockId.hash] field is not equal to the given value. (optional)
     * @param filterHeaderLastBlockIdHashLike Filter the results where the [header.lastBlockId.hash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastBlockIdHashIlike Filter the results where the [header.lastBlockId.hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderTotal Filter the results where the [header.lastBlockId.partSetHeader.total] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHash Filter the results where the [header.lastBlockId.partSetHeader.hash] field is equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashNeq Filter the results where the [header.lastBlockId.partSetHeader.hash] field is not equal to the given value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashLike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastBlockIdPartSetHeaderHashIlike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastCommitHash Filter the results where the [header.lastCommitHash] field is equal to the given value. (optional)
     * @param filterHeaderLastCommitHashNeq Filter the results where the [header.lastCommitHash] field is not equal to the given value. (optional)
     * @param filterHeaderLastCommitHashLike Filter the results where the [header.lastCommitHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastCommitHashIlike Filter the results where the [header.lastCommitHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderDataHash Filter the results where the [header.dataHash] field is equal to the given value. (optional)
     * @param filterHeaderDataHashNeq Filter the results where the [header.dataHash] field is not equal to the given value. (optional)
     * @param filterHeaderDataHashLike Filter the results where the [header.dataHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderDataHashIlike Filter the results where the [header.dataHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderValidatorsHash Filter the results where the [header.validatorsHash] field is equal to the given value. (optional)
     * @param filterHeaderValidatorsHashNeq Filter the results where the [header.validatorsHash] field is not equal to the given value. (optional)
     * @param filterHeaderValidatorsHashLike Filter the results where the [header.validatorsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderValidatorsHashIlike Filter the results where the [header.validatorsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderNextValidatorsHash Filter the results where the [header.nextValidatorsHash] field is equal to the given value. (optional)
     * @param filterHeaderNextValidatorsHashNeq Filter the results where the [header.nextValidatorsHash] field is not equal to the given value. (optional)
     * @param filterHeaderNextValidatorsHashLike Filter the results where the [header.nextValidatorsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderNextValidatorsHashIlike Filter the results where the [header.nextValidatorsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderConsensusHash Filter the results where the [header.consensusHash] field is equal to the given value. (optional)
     * @param filterHeaderConsensusHashNeq Filter the results where the [header.consensusHash] field is not equal to the given value. (optional)
     * @param filterHeaderConsensusHashLike Filter the results where the [header.consensusHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderConsensusHashIlike Filter the results where the [header.consensusHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderAppHash Filter the results where the [header.appHash] field is equal to the given value. (optional)
     * @param filterHeaderAppHashNeq Filter the results where the [header.appHash] field is not equal to the given value. (optional)
     * @param filterHeaderAppHashLike Filter the results where the [header.appHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderAppHashIlike Filter the results where the [header.appHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderLastResultsHash Filter the results where the [header.lastResultsHash] field is equal to the given value. (optional)
     * @param filterHeaderLastResultsHashNeq Filter the results where the [header.lastResultsHash] field is not equal to the given value. (optional)
     * @param filterHeaderLastResultsHashLike Filter the results where the [header.lastResultsHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderLastResultsHashIlike Filter the results where the [header.lastResultsHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderEvidenceHash Filter the results where the [header.evidenceHash] field is equal to the given value. (optional)
     * @param filterHeaderEvidenceHashNeq Filter the results where the [header.evidenceHash] field is not equal to the given value. (optional)
     * @param filterHeaderEvidenceHashLike Filter the results where the [header.evidenceHash] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderEvidenceHashIlike Filter the results where the [header.evidenceHash] field is similar to the given case insensitive value. (optional)
     * @param filterHeaderProposerAddress Filter the results where the [header.proposerAddress] field is equal to the given value. (optional)
     * @param filterHeaderProposerAddressNeq Filter the results where the [header.proposerAddress] field is not equal to the given value. (optional)
     * @param filterHeaderProposerAddressLike Filter the results where the [header.proposerAddress] field is similar to the given case sensitive value. (optional)
     * @param filterHeaderProposerAddressIlike Filter the results where the [header.proposerAddress] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiBlocksGetAsync(ApiBlocksGetFieldsBlocksParameter fieldsBlocks, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, Integer filterHeight, Integer filterHeaderVersionBlock, String filterHeaderChainId, String filterHeaderChainIdNeq, String filterHeaderChainIdLike, String filterHeaderChainIdIlike, Integer filterHeaderHeight, String filterHeaderTime, String filterHeaderTimeNeq, String filterHeaderTimeLike, String filterHeaderTimeIlike, String filterHeaderLastBlockIdHash, String filterHeaderLastBlockIdHashNeq, String filterHeaderLastBlockIdHashLike, String filterHeaderLastBlockIdHashIlike, Integer filterHeaderLastBlockIdPartSetHeaderTotal, String filterHeaderLastBlockIdPartSetHeaderHash, String filterHeaderLastBlockIdPartSetHeaderHashNeq, String filterHeaderLastBlockIdPartSetHeaderHashLike, String filterHeaderLastBlockIdPartSetHeaderHashIlike, String filterHeaderLastCommitHash, String filterHeaderLastCommitHashNeq, String filterHeaderLastCommitHashLike, String filterHeaderLastCommitHashIlike, String filterHeaderDataHash, String filterHeaderDataHashNeq, String filterHeaderDataHashLike, String filterHeaderDataHashIlike, String filterHeaderValidatorsHash, String filterHeaderValidatorsHashNeq, String filterHeaderValidatorsHashLike, String filterHeaderValidatorsHashIlike, String filterHeaderNextValidatorsHash, String filterHeaderNextValidatorsHashNeq, String filterHeaderNextValidatorsHashLike, String filterHeaderNextValidatorsHashIlike, String filterHeaderConsensusHash, String filterHeaderConsensusHashNeq, String filterHeaderConsensusHashLike, String filterHeaderConsensusHashIlike, String filterHeaderAppHash, String filterHeaderAppHashNeq, String filterHeaderAppHashLike, String filterHeaderAppHashIlike, String filterHeaderLastResultsHash, String filterHeaderLastResultsHashNeq, String filterHeaderLastResultsHashLike, String filterHeaderLastResultsHashIlike, String filterHeaderEvidenceHash, String filterHeaderEvidenceHashNeq, String filterHeaderEvidenceHashLike, String filterHeaderEvidenceHashIlike, String filterHeaderProposerAddress, String filterHeaderProposerAddressNeq, String filterHeaderProposerAddressLike, String filterHeaderProposerAddressIlike, ApiBlocksGetIncludeParameter include, ApiBlocksGetSortParameter sort, final ApiCallback<ApiBlocksGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiBlocksGetValidateBeforeCall(fieldsBlocks, filterHash, filterHashNeq, filterHashLike, filterHashIlike, filterHeight, filterHeaderVersionBlock, filterHeaderChainId, filterHeaderChainIdNeq, filterHeaderChainIdLike, filterHeaderChainIdIlike, filterHeaderHeight, filterHeaderTime, filterHeaderTimeNeq, filterHeaderTimeLike, filterHeaderTimeIlike, filterHeaderLastBlockIdHash, filterHeaderLastBlockIdHashNeq, filterHeaderLastBlockIdHashLike, filterHeaderLastBlockIdHashIlike, filterHeaderLastBlockIdPartSetHeaderTotal, filterHeaderLastBlockIdPartSetHeaderHash, filterHeaderLastBlockIdPartSetHeaderHashNeq, filterHeaderLastBlockIdPartSetHeaderHashLike, filterHeaderLastBlockIdPartSetHeaderHashIlike, filterHeaderLastCommitHash, filterHeaderLastCommitHashNeq, filterHeaderLastCommitHashLike, filterHeaderLastCommitHashIlike, filterHeaderDataHash, filterHeaderDataHashNeq, filterHeaderDataHashLike, filterHeaderDataHashIlike, filterHeaderValidatorsHash, filterHeaderValidatorsHashNeq, filterHeaderValidatorsHashLike, filterHeaderValidatorsHashIlike, filterHeaderNextValidatorsHash, filterHeaderNextValidatorsHashNeq, filterHeaderNextValidatorsHashLike, filterHeaderNextValidatorsHashIlike, filterHeaderConsensusHash, filterHeaderConsensusHashNeq, filterHeaderConsensusHashLike, filterHeaderConsensusHashIlike, filterHeaderAppHash, filterHeaderAppHashNeq, filterHeaderAppHashLike, filterHeaderAppHashIlike, filterHeaderLastResultsHash, filterHeaderLastResultsHashNeq, filterHeaderLastResultsHashLike, filterHeaderLastResultsHashIlike, filterHeaderEvidenceHash, filterHeaderEvidenceHashNeq, filterHeaderEvidenceHashLike, filterHeaderEvidenceHashIlike, filterHeaderProposerAddress, filterHeaderProposerAddressNeq, filterHeaderProposerAddressLike, filterHeaderProposerAddressIlike, include, sort, _callback);
        Type localVarReturnType = new TypeToken<ApiBlocksGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiEntitiesGet
     * @param fieldsEntities Include the given fields in the response. (optional)
     * @param filterModule Filter the results where the [module] field is equal to the given value. (optional)
     * @param filterModuleNeq Filter the results where the [module] field is not equal to the given value. (optional)
     * @param filterModuleLike Filter the results where the [module] field is similar to the given case sensitive value. (optional)
     * @param filterModuleIlike Filter the results where the [module] field is similar to the given case insensitive value. (optional)
     * @param filterType Filter the results where the [type] field is equal to the given value. (optional)
     * @param filterTypeNeq Filter the results where the [type] field is not equal to the given value. (optional)
     * @param filterTypeLike Filter the results where the [type] field is similar to the given case sensitive value. (optional)
     * @param filterTypeIlike Filter the results where the [type] field is similar to the given case insensitive value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiEntitiesGetCall(ApiEntitiesGetFieldsEntitiesParameter fieldsEntities, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterType, String filterTypeNeq, String filterTypeLike, String filterTypeIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiEntitiesGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/entities";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldsEntities != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields[entities]", fieldsEntities));
        }

        if (filterModule != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[module]", filterModule));
        }

        if (filterModuleNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[module.neq]", filterModuleNeq));
        }

        if (filterModuleLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[module.like]", filterModuleLike));
        }

        if (filterModuleIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[module.ilike]", filterModuleIlike));
        }

        if (filterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[type]", filterType));
        }

        if (filterTypeNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[type.neq]", filterTypeNeq));
        }

        if (filterTypeLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[type.like]", filterTypeLike));
        }

        if (filterTypeIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[type.ilike]", filterTypeIlike));
        }

        if (filterKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key]", filterKey));
        }

        if (filterKeyNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.neq]", filterKeyNeq));
        }

        if (filterKeyLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.like]", filterKeyLike));
        }

        if (filterKeyIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.ilike]", filterKeyIlike));
        }

        if (filterValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value]", filterValue));
        }

        if (filterValueNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.neq]", filterValueNeq));
        }

        if (filterValueLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.like]", filterValueLike));
        }

        if (filterValueIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.ilike]", filterValueIlike));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiEntitiesGetValidateBeforeCall(ApiEntitiesGetFieldsEntitiesParameter fieldsEntities, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterType, String filterTypeNeq, String filterTypeLike, String filterTypeIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiEntitiesGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = apiEntitiesGetCall(fieldsEntities, filterModule, filterModuleNeq, filterModuleLike, filterModuleIlike, filterType, filterTypeNeq, filterTypeLike, filterTypeIlike, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, sort, _callback);
        return localVarCall;

    }

    /**
     * List entities
     * 
     * @param fieldsEntities Include the given fields in the response. (optional)
     * @param filterModule Filter the results where the [module] field is equal to the given value. (optional)
     * @param filterModuleNeq Filter the results where the [module] field is not equal to the given value. (optional)
     * @param filterModuleLike Filter the results where the [module] field is similar to the given case sensitive value. (optional)
     * @param filterModuleIlike Filter the results where the [module] field is similar to the given case insensitive value. (optional)
     * @param filterType Filter the results where the [type] field is equal to the given value. (optional)
     * @param filterTypeNeq Filter the results where the [type] field is not equal to the given value. (optional)
     * @param filterTypeLike Filter the results where the [type] field is similar to the given case sensitive value. (optional)
     * @param filterTypeIlike Filter the results where the [type] field is similar to the given case insensitive value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiEntitiesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiEntitiesGet200Response apiEntitiesGet(ApiEntitiesGetFieldsEntitiesParameter fieldsEntities, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterType, String filterTypeNeq, String filterTypeLike, String filterTypeIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiEntitiesGetSortParameter sort) throws ApiException {
        ApiResponse<ApiEntitiesGet200Response> localVarResp = apiEntitiesGetWithHttpInfo(fieldsEntities, filterModule, filterModuleNeq, filterModuleLike, filterModuleIlike, filterType, filterTypeNeq, filterTypeLike, filterTypeIlike, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, sort);
        return localVarResp.getData();
    }

    /**
     * List entities
     * 
     * @param fieldsEntities Include the given fields in the response. (optional)
     * @param filterModule Filter the results where the [module] field is equal to the given value. (optional)
     * @param filterModuleNeq Filter the results where the [module] field is not equal to the given value. (optional)
     * @param filterModuleLike Filter the results where the [module] field is similar to the given case sensitive value. (optional)
     * @param filterModuleIlike Filter the results where the [module] field is similar to the given case insensitive value. (optional)
     * @param filterType Filter the results where the [type] field is equal to the given value. (optional)
     * @param filterTypeNeq Filter the results where the [type] field is not equal to the given value. (optional)
     * @param filterTypeLike Filter the results where the [type] field is similar to the given case sensitive value. (optional)
     * @param filterTypeIlike Filter the results where the [type] field is similar to the given case insensitive value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiResponse&lt;ApiEntitiesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiEntitiesGet200Response> apiEntitiesGetWithHttpInfo(ApiEntitiesGetFieldsEntitiesParameter fieldsEntities, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterType, String filterTypeNeq, String filterTypeLike, String filterTypeIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiEntitiesGetSortParameter sort) throws ApiException {
        okhttp3.Call localVarCall = apiEntitiesGetValidateBeforeCall(fieldsEntities, filterModule, filterModuleNeq, filterModuleLike, filterModuleIlike, filterType, filterTypeNeq, filterTypeLike, filterTypeIlike, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, sort, null);
        Type localVarReturnType = new TypeToken<ApiEntitiesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List entities (asynchronously)
     * 
     * @param fieldsEntities Include the given fields in the response. (optional)
     * @param filterModule Filter the results where the [module] field is equal to the given value. (optional)
     * @param filterModuleNeq Filter the results where the [module] field is not equal to the given value. (optional)
     * @param filterModuleLike Filter the results where the [module] field is similar to the given case sensitive value. (optional)
     * @param filterModuleIlike Filter the results where the [module] field is similar to the given case insensitive value. (optional)
     * @param filterType Filter the results where the [type] field is equal to the given value. (optional)
     * @param filterTypeNeq Filter the results where the [type] field is not equal to the given value. (optional)
     * @param filterTypeLike Filter the results where the [type] field is similar to the given case sensitive value. (optional)
     * @param filterTypeIlike Filter the results where the [type] field is similar to the given case insensitive value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiEntitiesGetAsync(ApiEntitiesGetFieldsEntitiesParameter fieldsEntities, String filterModule, String filterModuleNeq, String filterModuleLike, String filterModuleIlike, String filterType, String filterTypeNeq, String filterTypeLike, String filterTypeIlike, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiEntitiesGetSortParameter sort, final ApiCallback<ApiEntitiesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiEntitiesGetValidateBeforeCall(fieldsEntities, filterModule, filterModuleNeq, filterModuleLike, filterModuleIlike, filterType, filterTypeNeq, filterTypeLike, filterTypeIlike, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, sort, _callback);
        Type localVarReturnType = new TypeToken<ApiEntitiesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiTransactionsGet
     * @param fieldsAccounts Include the given fields in the response. (optional)
     * @param filterHash Filter the results where the [hash] field is equal to the given value. (optional)
     * @param filterHashNeq Filter the results where the [hash] field is not equal to the given value. (optional)
     * @param filterHashLike Filter the results where the [hash] field is similar to the given case sensitive value. (optional)
     * @param filterHashIlike Filter the results where the [hash] field is similar to the given case insensitive value. (optional)
     * @param filterSender Filter the results where the [sender] field is equal to the given value. (optional)
     * @param filterSenderNeq Filter the results where the [sender] field is not equal to the given value. (optional)
     * @param filterSenderLike Filter the results where the [sender] field is similar to the given case sensitive value. (optional)
     * @param filterSenderIlike Filter the results where the [sender] field is similar to the given case insensitive value. (optional)
     * @param filterRecipient Filter the results where the [recipient] field is equal to the given value. (optional)
     * @param filterRecipientNeq Filter the results where the [recipient] field is not equal to the given value. (optional)
     * @param filterRecipientLike Filter the results where the [recipient] field is similar to the given case sensitive value. (optional)
     * @param filterRecipientIlike Filter the results where the [recipient] field is similar to the given case insensitive value. (optional)
     * @param filterGas Filter the results where the [gas] field is equal to the given value. (optional)
     * @param filterNonce Filter the results where the [nonce] field is equal to the given value. (optional)
     * @param filterSignature Filter the results where the [signature] field is equal to the given value. (optional)
     * @param filterSignatureNeq Filter the results where the [signature] field is not equal to the given value. (optional)
     * @param filterSignatureLike Filter the results where the [signature] field is similar to the given case sensitive value. (optional)
     * @param filterSignatureIlike Filter the results where the [signature] field is similar to the given case insensitive value. (optional)
     * @param filterVersion Filter the results where the [version] field is equal to the given value. (optional)
     * @param filterVersionNeq Filter the results where the [version] field is not equal to the given value. (optional)
     * @param filterVersionLike Filter the results where the [version] field is similar to the given case sensitive value. (optional)
     * @param filterVersionIlike Filter the results where the [version] field is similar to the given case insensitive value. (optional)
     * @param filterMessageHandler Filter the results where the [message.handler] field is equal to the given value. (optional)
     * @param filterMessageHandlerNeq Filter the results where the [message.handler] field is not equal to the given value. (optional)
     * @param filterMessageHandlerLike Filter the results where the [message.handler] field is similar to the given case sensitive value. (optional)
     * @param filterMessageHandlerIlike Filter the results where the [message.handler] field is similar to the given case insensitive value. (optional)
     * @param filterMessageVersion Filter the results where the [message.version] field is equal to the given value. (optional)
     * @param filterMessageVersionNeq Filter the results where the [message.version] field is not equal to the given value. (optional)
     * @param filterMessageVersionLike Filter the results where the [message.version] field is similar to the given case sensitive value. (optional)
     * @param filterMessageVersionIlike Filter the results where the [message.version] field is similar to the given case insensitive value. (optional)
     * @param filterMessageNetwork Filter the results where the [message.network] field is equal to the given value. (optional)
     * @param filterMessageNetworkNeq Filter the results where the [message.network] field is not equal to the given value. (optional)
     * @param filterMessageNetworkLike Filter the results where the [message.network] field is similar to the given case sensitive value. (optional)
     * @param filterMessageNetworkIlike Filter the results where the [message.network] field is similar to the given case insensitive value. (optional)
     * @param filterMessageContent Filter the results where the [message.content] field is equal to the given value. (optional)
     * @param filterMessageContentNeq Filter the results where the [message.content] field is not equal to the given value. (optional)
     * @param filterMessageContentLike Filter the results where the [message.content] field is similar to the given case sensitive value. (optional)
     * @param filterMessageContentIlike Filter the results where the [message.content] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiTransactionsGetCall(ApiTransactionsGetFieldsAccountsParameter fieldsAccounts, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, String filterSender, String filterSenderNeq, String filterSenderLike, String filterSenderIlike, String filterRecipient, String filterRecipientNeq, String filterRecipientLike, String filterRecipientIlike, Integer filterGas, Integer filterNonce, String filterSignature, String filterSignatureNeq, String filterSignatureLike, String filterSignatureIlike, String filterVersion, String filterVersionNeq, String filterVersionLike, String filterVersionIlike, String filterMessageHandler, String filterMessageHandlerNeq, String filterMessageHandlerLike, String filterMessageHandlerIlike, String filterMessageVersion, String filterMessageVersionNeq, String filterMessageVersionLike, String filterMessageVersionIlike, String filterMessageNetwork, String filterMessageNetworkNeq, String filterMessageNetworkLike, String filterMessageNetworkIlike, String filterMessageContent, String filterMessageContentNeq, String filterMessageContentLike, String filterMessageContentIlike, ApiTransactionsGetIncludeParameter include, ApiTransactionsGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/transactions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldsAccounts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields[accounts]", fieldsAccounts));
        }

        if (filterHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[hash]", filterHash));
        }

        if (filterHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[hash.neq]", filterHashNeq));
        }

        if (filterHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[hash.like]", filterHashLike));
        }

        if (filterHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[hash.ilike]", filterHashIlike));
        }

        if (filterSender != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[sender]", filterSender));
        }

        if (filterSenderNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[sender.neq]", filterSenderNeq));
        }

        if (filterSenderLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[sender.like]", filterSenderLike));
        }

        if (filterSenderIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[sender.ilike]", filterSenderIlike));
        }

        if (filterRecipient != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[recipient]", filterRecipient));
        }

        if (filterRecipientNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[recipient.neq]", filterRecipientNeq));
        }

        if (filterRecipientLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[recipient.like]", filterRecipientLike));
        }

        if (filterRecipientIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[recipient.ilike]", filterRecipientIlike));
        }

        if (filterGas != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[gas]", filterGas));
        }

        if (filterNonce != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[nonce]", filterNonce));
        }

        if (filterSignature != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[signature]", filterSignature));
        }

        if (filterSignatureNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[signature.neq]", filterSignatureNeq));
        }

        if (filterSignatureLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[signature.like]", filterSignatureLike));
        }

        if (filterSignatureIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[signature.ilike]", filterSignatureIlike));
        }

        if (filterVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[version]", filterVersion));
        }

        if (filterVersionNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[version.neq]", filterVersionNeq));
        }

        if (filterVersionLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[version.like]", filterVersionLike));
        }

        if (filterVersionIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[version.ilike]", filterVersionIlike));
        }

        if (filterMessageHandler != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.handler]", filterMessageHandler));
        }

        if (filterMessageHandlerNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.handler.neq]", filterMessageHandlerNeq));
        }

        if (filterMessageHandlerLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.handler.like]", filterMessageHandlerLike));
        }

        if (filterMessageHandlerIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.handler.ilike]", filterMessageHandlerIlike));
        }

        if (filterMessageVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.version]", filterMessageVersion));
        }

        if (filterMessageVersionNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.version.neq]", filterMessageVersionNeq));
        }

        if (filterMessageVersionLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.version.like]", filterMessageVersionLike));
        }

        if (filterMessageVersionIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.version.ilike]", filterMessageVersionIlike));
        }

        if (filterMessageNetwork != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.network]", filterMessageNetwork));
        }

        if (filterMessageNetworkNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.network.neq]", filterMessageNetworkNeq));
        }

        if (filterMessageNetworkLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.network.like]", filterMessageNetworkLike));
        }

        if (filterMessageNetworkIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.network.ilike]", filterMessageNetworkIlike));
        }

        if (filterMessageContent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.content]", filterMessageContent));
        }

        if (filterMessageContentNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.content.neq]", filterMessageContentNeq));
        }

        if (filterMessageContentLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.content.like]", filterMessageContentLike));
        }

        if (filterMessageContentIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[message.content.ilike]", filterMessageContentIlike));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiTransactionsGetValidateBeforeCall(ApiTransactionsGetFieldsAccountsParameter fieldsAccounts, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, String filterSender, String filterSenderNeq, String filterSenderLike, String filterSenderIlike, String filterRecipient, String filterRecipientNeq, String filterRecipientLike, String filterRecipientIlike, Integer filterGas, Integer filterNonce, String filterSignature, String filterSignatureNeq, String filterSignatureLike, String filterSignatureIlike, String filterVersion, String filterVersionNeq, String filterVersionLike, String filterVersionIlike, String filterMessageHandler, String filterMessageHandlerNeq, String filterMessageHandlerLike, String filterMessageHandlerIlike, String filterMessageVersion, String filterMessageVersionNeq, String filterMessageVersionLike, String filterMessageVersionIlike, String filterMessageNetwork, String filterMessageNetworkNeq, String filterMessageNetworkLike, String filterMessageNetworkIlike, String filterMessageContent, String filterMessageContentNeq, String filterMessageContentLike, String filterMessageContentIlike, ApiTransactionsGetIncludeParameter include, ApiTransactionsGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = apiTransactionsGetCall(fieldsAccounts, filterHash, filterHashNeq, filterHashLike, filterHashIlike, filterSender, filterSenderNeq, filterSenderLike, filterSenderIlike, filterRecipient, filterRecipientNeq, filterRecipientLike, filterRecipientIlike, filterGas, filterNonce, filterSignature, filterSignatureNeq, filterSignatureLike, filterSignatureIlike, filterVersion, filterVersionNeq, filterVersionLike, filterVersionIlike, filterMessageHandler, filterMessageHandlerNeq, filterMessageHandlerLike, filterMessageHandlerIlike, filterMessageVersion, filterMessageVersionNeq, filterMessageVersionLike, filterMessageVersionIlike, filterMessageNetwork, filterMessageNetworkNeq, filterMessageNetworkLike, filterMessageNetworkIlike, filterMessageContent, filterMessageContentNeq, filterMessageContentLike, filterMessageContentIlike, include, sort, _callback);
        return localVarCall;

    }

    /**
     * List transactions
     * 
     * @param fieldsAccounts Include the given fields in the response. (optional)
     * @param filterHash Filter the results where the [hash] field is equal to the given value. (optional)
     * @param filterHashNeq Filter the results where the [hash] field is not equal to the given value. (optional)
     * @param filterHashLike Filter the results where the [hash] field is similar to the given case sensitive value. (optional)
     * @param filterHashIlike Filter the results where the [hash] field is similar to the given case insensitive value. (optional)
     * @param filterSender Filter the results where the [sender] field is equal to the given value. (optional)
     * @param filterSenderNeq Filter the results where the [sender] field is not equal to the given value. (optional)
     * @param filterSenderLike Filter the results where the [sender] field is similar to the given case sensitive value. (optional)
     * @param filterSenderIlike Filter the results where the [sender] field is similar to the given case insensitive value. (optional)
     * @param filterRecipient Filter the results where the [recipient] field is equal to the given value. (optional)
     * @param filterRecipientNeq Filter the results where the [recipient] field is not equal to the given value. (optional)
     * @param filterRecipientLike Filter the results where the [recipient] field is similar to the given case sensitive value. (optional)
     * @param filterRecipientIlike Filter the results where the [recipient] field is similar to the given case insensitive value. (optional)
     * @param filterGas Filter the results where the [gas] field is equal to the given value. (optional)
     * @param filterNonce Filter the results where the [nonce] field is equal to the given value. (optional)
     * @param filterSignature Filter the results where the [signature] field is equal to the given value. (optional)
     * @param filterSignatureNeq Filter the results where the [signature] field is not equal to the given value. (optional)
     * @param filterSignatureLike Filter the results where the [signature] field is similar to the given case sensitive value. (optional)
     * @param filterSignatureIlike Filter the results where the [signature] field is similar to the given case insensitive value. (optional)
     * @param filterVersion Filter the results where the [version] field is equal to the given value. (optional)
     * @param filterVersionNeq Filter the results where the [version] field is not equal to the given value. (optional)
     * @param filterVersionLike Filter the results where the [version] field is similar to the given case sensitive value. (optional)
     * @param filterVersionIlike Filter the results where the [version] field is similar to the given case insensitive value. (optional)
     * @param filterMessageHandler Filter the results where the [message.handler] field is equal to the given value. (optional)
     * @param filterMessageHandlerNeq Filter the results where the [message.handler] field is not equal to the given value. (optional)
     * @param filterMessageHandlerLike Filter the results where the [message.handler] field is similar to the given case sensitive value. (optional)
     * @param filterMessageHandlerIlike Filter the results where the [message.handler] field is similar to the given case insensitive value. (optional)
     * @param filterMessageVersion Filter the results where the [message.version] field is equal to the given value. (optional)
     * @param filterMessageVersionNeq Filter the results where the [message.version] field is not equal to the given value. (optional)
     * @param filterMessageVersionLike Filter the results where the [message.version] field is similar to the given case sensitive value. (optional)
     * @param filterMessageVersionIlike Filter the results where the [message.version] field is similar to the given case insensitive value. (optional)
     * @param filterMessageNetwork Filter the results where the [message.network] field is equal to the given value. (optional)
     * @param filterMessageNetworkNeq Filter the results where the [message.network] field is not equal to the given value. (optional)
     * @param filterMessageNetworkLike Filter the results where the [message.network] field is similar to the given case sensitive value. (optional)
     * @param filterMessageNetworkIlike Filter the results where the [message.network] field is similar to the given case insensitive value. (optional)
     * @param filterMessageContent Filter the results where the [message.content] field is equal to the given value. (optional)
     * @param filterMessageContentNeq Filter the results where the [message.content] field is not equal to the given value. (optional)
     * @param filterMessageContentLike Filter the results where the [message.content] field is similar to the given case sensitive value. (optional)
     * @param filterMessageContentIlike Filter the results where the [message.content] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiTransactionsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiTransactionsGet200Response apiTransactionsGet(ApiTransactionsGetFieldsAccountsParameter fieldsAccounts, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, String filterSender, String filterSenderNeq, String filterSenderLike, String filterSenderIlike, String filterRecipient, String filterRecipientNeq, String filterRecipientLike, String filterRecipientIlike, Integer filterGas, Integer filterNonce, String filterSignature, String filterSignatureNeq, String filterSignatureLike, String filterSignatureIlike, String filterVersion, String filterVersionNeq, String filterVersionLike, String filterVersionIlike, String filterMessageHandler, String filterMessageHandlerNeq, String filterMessageHandlerLike, String filterMessageHandlerIlike, String filterMessageVersion, String filterMessageVersionNeq, String filterMessageVersionLike, String filterMessageVersionIlike, String filterMessageNetwork, String filterMessageNetworkNeq, String filterMessageNetworkLike, String filterMessageNetworkIlike, String filterMessageContent, String filterMessageContentNeq, String filterMessageContentLike, String filterMessageContentIlike, ApiTransactionsGetIncludeParameter include, ApiTransactionsGetSortParameter sort) throws ApiException {
        ApiResponse<ApiTransactionsGet200Response> localVarResp = apiTransactionsGetWithHttpInfo(fieldsAccounts, filterHash, filterHashNeq, filterHashLike, filterHashIlike, filterSender, filterSenderNeq, filterSenderLike, filterSenderIlike, filterRecipient, filterRecipientNeq, filterRecipientLike, filterRecipientIlike, filterGas, filterNonce, filterSignature, filterSignatureNeq, filterSignatureLike, filterSignatureIlike, filterVersion, filterVersionNeq, filterVersionLike, filterVersionIlike, filterMessageHandler, filterMessageHandlerNeq, filterMessageHandlerLike, filterMessageHandlerIlike, filterMessageVersion, filterMessageVersionNeq, filterMessageVersionLike, filterMessageVersionIlike, filterMessageNetwork, filterMessageNetworkNeq, filterMessageNetworkLike, filterMessageNetworkIlike, filterMessageContent, filterMessageContentNeq, filterMessageContentLike, filterMessageContentIlike, include, sort);
        return localVarResp.getData();
    }

    /**
     * List transactions
     * 
     * @param fieldsAccounts Include the given fields in the response. (optional)
     * @param filterHash Filter the results where the [hash] field is equal to the given value. (optional)
     * @param filterHashNeq Filter the results where the [hash] field is not equal to the given value. (optional)
     * @param filterHashLike Filter the results where the [hash] field is similar to the given case sensitive value. (optional)
     * @param filterHashIlike Filter the results where the [hash] field is similar to the given case insensitive value. (optional)
     * @param filterSender Filter the results where the [sender] field is equal to the given value. (optional)
     * @param filterSenderNeq Filter the results where the [sender] field is not equal to the given value. (optional)
     * @param filterSenderLike Filter the results where the [sender] field is similar to the given case sensitive value. (optional)
     * @param filterSenderIlike Filter the results where the [sender] field is similar to the given case insensitive value. (optional)
     * @param filterRecipient Filter the results where the [recipient] field is equal to the given value. (optional)
     * @param filterRecipientNeq Filter the results where the [recipient] field is not equal to the given value. (optional)
     * @param filterRecipientLike Filter the results where the [recipient] field is similar to the given case sensitive value. (optional)
     * @param filterRecipientIlike Filter the results where the [recipient] field is similar to the given case insensitive value. (optional)
     * @param filterGas Filter the results where the [gas] field is equal to the given value. (optional)
     * @param filterNonce Filter the results where the [nonce] field is equal to the given value. (optional)
     * @param filterSignature Filter the results where the [signature] field is equal to the given value. (optional)
     * @param filterSignatureNeq Filter the results where the [signature] field is not equal to the given value. (optional)
     * @param filterSignatureLike Filter the results where the [signature] field is similar to the given case sensitive value. (optional)
     * @param filterSignatureIlike Filter the results where the [signature] field is similar to the given case insensitive value. (optional)
     * @param filterVersion Filter the results where the [version] field is equal to the given value. (optional)
     * @param filterVersionNeq Filter the results where the [version] field is not equal to the given value. (optional)
     * @param filterVersionLike Filter the results where the [version] field is similar to the given case sensitive value. (optional)
     * @param filterVersionIlike Filter the results where the [version] field is similar to the given case insensitive value. (optional)
     * @param filterMessageHandler Filter the results where the [message.handler] field is equal to the given value. (optional)
     * @param filterMessageHandlerNeq Filter the results where the [message.handler] field is not equal to the given value. (optional)
     * @param filterMessageHandlerLike Filter the results where the [message.handler] field is similar to the given case sensitive value. (optional)
     * @param filterMessageHandlerIlike Filter the results where the [message.handler] field is similar to the given case insensitive value. (optional)
     * @param filterMessageVersion Filter the results where the [message.version] field is equal to the given value. (optional)
     * @param filterMessageVersionNeq Filter the results where the [message.version] field is not equal to the given value. (optional)
     * @param filterMessageVersionLike Filter the results where the [message.version] field is similar to the given case sensitive value. (optional)
     * @param filterMessageVersionIlike Filter the results where the [message.version] field is similar to the given case insensitive value. (optional)
     * @param filterMessageNetwork Filter the results where the [message.network] field is equal to the given value. (optional)
     * @param filterMessageNetworkNeq Filter the results where the [message.network] field is not equal to the given value. (optional)
     * @param filterMessageNetworkLike Filter the results where the [message.network] field is similar to the given case sensitive value. (optional)
     * @param filterMessageNetworkIlike Filter the results where the [message.network] field is similar to the given case insensitive value. (optional)
     * @param filterMessageContent Filter the results where the [message.content] field is equal to the given value. (optional)
     * @param filterMessageContentNeq Filter the results where the [message.content] field is not equal to the given value. (optional)
     * @param filterMessageContentLike Filter the results where the [message.content] field is similar to the given case sensitive value. (optional)
     * @param filterMessageContentIlike Filter the results where the [message.content] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiResponse&lt;ApiTransactionsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiTransactionsGet200Response> apiTransactionsGetWithHttpInfo(ApiTransactionsGetFieldsAccountsParameter fieldsAccounts, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, String filterSender, String filterSenderNeq, String filterSenderLike, String filterSenderIlike, String filterRecipient, String filterRecipientNeq, String filterRecipientLike, String filterRecipientIlike, Integer filterGas, Integer filterNonce, String filterSignature, String filterSignatureNeq, String filterSignatureLike, String filterSignatureIlike, String filterVersion, String filterVersionNeq, String filterVersionLike, String filterVersionIlike, String filterMessageHandler, String filterMessageHandlerNeq, String filterMessageHandlerLike, String filterMessageHandlerIlike, String filterMessageVersion, String filterMessageVersionNeq, String filterMessageVersionLike, String filterMessageVersionIlike, String filterMessageNetwork, String filterMessageNetworkNeq, String filterMessageNetworkLike, String filterMessageNetworkIlike, String filterMessageContent, String filterMessageContentNeq, String filterMessageContentLike, String filterMessageContentIlike, ApiTransactionsGetIncludeParameter include, ApiTransactionsGetSortParameter sort) throws ApiException {
        okhttp3.Call localVarCall = apiTransactionsGetValidateBeforeCall(fieldsAccounts, filterHash, filterHashNeq, filterHashLike, filterHashIlike, filterSender, filterSenderNeq, filterSenderLike, filterSenderIlike, filterRecipient, filterRecipientNeq, filterRecipientLike, filterRecipientIlike, filterGas, filterNonce, filterSignature, filterSignatureNeq, filterSignatureLike, filterSignatureIlike, filterVersion, filterVersionNeq, filterVersionLike, filterVersionIlike, filterMessageHandler, filterMessageHandlerNeq, filterMessageHandlerLike, filterMessageHandlerIlike, filterMessageVersion, filterMessageVersionNeq, filterMessageVersionLike, filterMessageVersionIlike, filterMessageNetwork, filterMessageNetworkNeq, filterMessageNetworkLike, filterMessageNetworkIlike, filterMessageContent, filterMessageContentNeq, filterMessageContentLike, filterMessageContentIlike, include, sort, null);
        Type localVarReturnType = new TypeToken<ApiTransactionsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List transactions (asynchronously)
     * 
     * @param fieldsAccounts Include the given fields in the response. (optional)
     * @param filterHash Filter the results where the [hash] field is equal to the given value. (optional)
     * @param filterHashNeq Filter the results where the [hash] field is not equal to the given value. (optional)
     * @param filterHashLike Filter the results where the [hash] field is similar to the given case sensitive value. (optional)
     * @param filterHashIlike Filter the results where the [hash] field is similar to the given case insensitive value. (optional)
     * @param filterSender Filter the results where the [sender] field is equal to the given value. (optional)
     * @param filterSenderNeq Filter the results where the [sender] field is not equal to the given value. (optional)
     * @param filterSenderLike Filter the results where the [sender] field is similar to the given case sensitive value. (optional)
     * @param filterSenderIlike Filter the results where the [sender] field is similar to the given case insensitive value. (optional)
     * @param filterRecipient Filter the results where the [recipient] field is equal to the given value. (optional)
     * @param filterRecipientNeq Filter the results where the [recipient] field is not equal to the given value. (optional)
     * @param filterRecipientLike Filter the results where the [recipient] field is similar to the given case sensitive value. (optional)
     * @param filterRecipientIlike Filter the results where the [recipient] field is similar to the given case insensitive value. (optional)
     * @param filterGas Filter the results where the [gas] field is equal to the given value. (optional)
     * @param filterNonce Filter the results where the [nonce] field is equal to the given value. (optional)
     * @param filterSignature Filter the results where the [signature] field is equal to the given value. (optional)
     * @param filterSignatureNeq Filter the results where the [signature] field is not equal to the given value. (optional)
     * @param filterSignatureLike Filter the results where the [signature] field is similar to the given case sensitive value. (optional)
     * @param filterSignatureIlike Filter the results where the [signature] field is similar to the given case insensitive value. (optional)
     * @param filterVersion Filter the results where the [version] field is equal to the given value. (optional)
     * @param filterVersionNeq Filter the results where the [version] field is not equal to the given value. (optional)
     * @param filterVersionLike Filter the results where the [version] field is similar to the given case sensitive value. (optional)
     * @param filterVersionIlike Filter the results where the [version] field is similar to the given case insensitive value. (optional)
     * @param filterMessageHandler Filter the results where the [message.handler] field is equal to the given value. (optional)
     * @param filterMessageHandlerNeq Filter the results where the [message.handler] field is not equal to the given value. (optional)
     * @param filterMessageHandlerLike Filter the results where the [message.handler] field is similar to the given case sensitive value. (optional)
     * @param filterMessageHandlerIlike Filter the results where the [message.handler] field is similar to the given case insensitive value. (optional)
     * @param filterMessageVersion Filter the results where the [message.version] field is equal to the given value. (optional)
     * @param filterMessageVersionNeq Filter the results where the [message.version] field is not equal to the given value. (optional)
     * @param filterMessageVersionLike Filter the results where the [message.version] field is similar to the given case sensitive value. (optional)
     * @param filterMessageVersionIlike Filter the results where the [message.version] field is similar to the given case insensitive value. (optional)
     * @param filterMessageNetwork Filter the results where the [message.network] field is equal to the given value. (optional)
     * @param filterMessageNetworkNeq Filter the results where the [message.network] field is not equal to the given value. (optional)
     * @param filterMessageNetworkLike Filter the results where the [message.network] field is similar to the given case sensitive value. (optional)
     * @param filterMessageNetworkIlike Filter the results where the [message.network] field is similar to the given case insensitive value. (optional)
     * @param filterMessageContent Filter the results where the [message.content] field is equal to the given value. (optional)
     * @param filterMessageContentNeq Filter the results where the [message.content] field is not equal to the given value. (optional)
     * @param filterMessageContentLike Filter the results where the [message.content] field is similar to the given case sensitive value. (optional)
     * @param filterMessageContentIlike Filter the results where the [message.content] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiTransactionsGetAsync(ApiTransactionsGetFieldsAccountsParameter fieldsAccounts, String filterHash, String filterHashNeq, String filterHashLike, String filterHashIlike, String filterSender, String filterSenderNeq, String filterSenderLike, String filterSenderIlike, String filterRecipient, String filterRecipientNeq, String filterRecipientLike, String filterRecipientIlike, Integer filterGas, Integer filterNonce, String filterSignature, String filterSignatureNeq, String filterSignatureLike, String filterSignatureIlike, String filterVersion, String filterVersionNeq, String filterVersionLike, String filterVersionIlike, String filterMessageHandler, String filterMessageHandlerNeq, String filterMessageHandlerLike, String filterMessageHandlerIlike, String filterMessageVersion, String filterMessageVersionNeq, String filterMessageVersionLike, String filterMessageVersionIlike, String filterMessageNetwork, String filterMessageNetworkNeq, String filterMessageNetworkLike, String filterMessageNetworkIlike, String filterMessageContent, String filterMessageContentNeq, String filterMessageContentLike, String filterMessageContentIlike, ApiTransactionsGetIncludeParameter include, ApiTransactionsGetSortParameter sort, final ApiCallback<ApiTransactionsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiTransactionsGetValidateBeforeCall(fieldsAccounts, filterHash, filterHashNeq, filterHashLike, filterHashIlike, filterSender, filterSenderNeq, filterSenderLike, filterSenderIlike, filterRecipient, filterRecipientNeq, filterRecipientLike, filterRecipientIlike, filterGas, filterNonce, filterSignature, filterSignatureNeq, filterSignatureLike, filterSignatureIlike, filterVersion, filterVersionNeq, filterVersionLike, filterVersionIlike, filterMessageHandler, filterMessageHandlerNeq, filterMessageHandlerLike, filterMessageHandlerIlike, filterMessageVersion, filterMessageVersionNeq, filterMessageVersionLike, filterMessageVersionIlike, filterMessageNetwork, filterMessageNetworkNeq, filterMessageNetworkLike, filterMessageNetworkIlike, filterMessageContent, filterMessageContentNeq, filterMessageContentLike, filterMessageContentIlike, include, sort, _callback);
        Type localVarReturnType = new TypeToken<ApiTransactionsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiTransactionsMetadataGet
     * @param fieldsTransactionMetadata Include the given fields in the response. (optional)
     * @param filterTransactionId Filter the results where the [transaction_id] field is equal to the given value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiTransactionsMetadataGetCall(ApiTransactionsMetadataGetFieldsTransactionMetadataParameter fieldsTransactionMetadata, Integer filterTransactionId, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsMetadataGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/transactions/metadata";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldsTransactionMetadata != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields[transaction_metadata]", fieldsTransactionMetadata));
        }

        if (filterTransactionId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[transaction_id]", filterTransactionId));
        }

        if (filterKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key]", filterKey));
        }

        if (filterKeyNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.neq]", filterKeyNeq));
        }

        if (filterKeyLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.like]", filterKeyLike));
        }

        if (filterKeyIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[key.ilike]", filterKeyIlike));
        }

        if (filterValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value]", filterValue));
        }

        if (filterValueNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.neq]", filterValueNeq));
        }

        if (filterValueLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.like]", filterValueLike));
        }

        if (filterValueIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[value.ilike]", filterValueIlike));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiTransactionsMetadataGetValidateBeforeCall(ApiTransactionsMetadataGetFieldsTransactionMetadataParameter fieldsTransactionMetadata, Integer filterTransactionId, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsMetadataGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = apiTransactionsMetadataGetCall(fieldsTransactionMetadata, filterTransactionId, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, include, sort, _callback);
        return localVarCall;

    }

    /**
     * List transaction metadata
     * 
     * @param fieldsTransactionMetadata Include the given fields in the response. (optional)
     * @param filterTransactionId Filter the results where the [transaction_id] field is equal to the given value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiTransactionsMetadataGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiTransactionsMetadataGet200Response apiTransactionsMetadataGet(ApiTransactionsMetadataGetFieldsTransactionMetadataParameter fieldsTransactionMetadata, Integer filterTransactionId, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsMetadataGetSortParameter sort) throws ApiException {
        ApiResponse<ApiTransactionsMetadataGet200Response> localVarResp = apiTransactionsMetadataGetWithHttpInfo(fieldsTransactionMetadata, filterTransactionId, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, include, sort);
        return localVarResp.getData();
    }

    /**
     * List transaction metadata
     * 
     * @param fieldsTransactionMetadata Include the given fields in the response. (optional)
     * @param filterTransactionId Filter the results where the [transaction_id] field is equal to the given value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiResponse&lt;ApiTransactionsMetadataGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiTransactionsMetadataGet200Response> apiTransactionsMetadataGetWithHttpInfo(ApiTransactionsMetadataGetFieldsTransactionMetadataParameter fieldsTransactionMetadata, Integer filterTransactionId, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsMetadataGetSortParameter sort) throws ApiException {
        okhttp3.Call localVarCall = apiTransactionsMetadataGetValidateBeforeCall(fieldsTransactionMetadata, filterTransactionId, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, include, sort, null);
        Type localVarReturnType = new TypeToken<ApiTransactionsMetadataGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List transaction metadata (asynchronously)
     * 
     * @param fieldsTransactionMetadata Include the given fields in the response. (optional)
     * @param filterTransactionId Filter the results where the [transaction_id] field is equal to the given value. (optional)
     * @param filterKey Filter the results where the [key] field is equal to the given value. (optional)
     * @param filterKeyNeq Filter the results where the [key] field is not equal to the given value. (optional)
     * @param filterKeyLike Filter the results where the [key] field is similar to the given case sensitive value. (optional)
     * @param filterKeyIlike Filter the results where the [key] field is similar to the given case insensitive value. (optional)
     * @param filterValue Filter the results where the [value] field is equal to the given value. (optional)
     * @param filterValueNeq Filter the results where the [value] field is not equal to the given value. (optional)
     * @param filterValueLike Filter the results where the [value] field is similar to the given case sensitive value. (optional)
     * @param filterValueIlike Filter the results where the [value] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiTransactionsMetadataGetAsync(ApiTransactionsMetadataGetFieldsTransactionMetadataParameter fieldsTransactionMetadata, Integer filterTransactionId, String filterKey, String filterKeyNeq, String filterKeyLike, String filterKeyIlike, String filterValue, String filterValueNeq, String filterValueLike, String filterValueIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsMetadataGetSortParameter sort, final ApiCallback<ApiTransactionsMetadataGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiTransactionsMetadataGetValidateBeforeCall(fieldsTransactionMetadata, filterTransactionId, filterKey, filterKeyNeq, filterKeyLike, filterKeyIlike, filterValue, filterValueNeq, filterValueLike, filterValueIlike, include, sort, _callback);
        Type localVarReturnType = new TypeToken<ApiTransactionsMetadataGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiTransactionsReceiptsGet
     * @param fieldsTransactionReceipts Include the given fields in the response. (optional)
     * @param filterTransactionId Filter the results where the [transaction_id] field is equal to the given value. (optional)
     * @param filterBlockHash Filter the results where the [block_hash] field is equal to the given value. (optional)
     * @param filterBlockHashNeq Filter the results where the [block_hash] field is not equal to the given value. (optional)
     * @param filterBlockHashLike Filter the results where the [block_hash] field is similar to the given case sensitive value. (optional)
     * @param filterBlockHashIlike Filter the results where the [block_hash] field is similar to the given case insensitive value. (optional)
     * @param filterBlockNumber Filter the results where the [block_number] field is equal to the given value. (optional)
     * @param filterBlockNumberNeq Filter the results where the [block_number] field is not equal to the given value. (optional)
     * @param filterBlockNumberLike Filter the results where the [block_number] field is similar to the given case sensitive value. (optional)
     * @param filterBlockNumberIlike Filter the results where the [block_number] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiTransactionsReceiptsGetCall(ApiTransactionsReceiptsGetFieldsTransactionReceiptsParameter fieldsTransactionReceipts, Integer filterTransactionId, String filterBlockHash, String filterBlockHashNeq, String filterBlockHashLike, String filterBlockHashIlike, String filterBlockNumber, String filterBlockNumberNeq, String filterBlockNumberLike, String filterBlockNumberIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsReceiptsGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/transactions/receipts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldsTransactionReceipts != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields[transaction_receipts]", fieldsTransactionReceipts));
        }

        if (filterTransactionId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[transaction_id]", filterTransactionId));
        }

        if (filterBlockHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_hash]", filterBlockHash));
        }

        if (filterBlockHashNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_hash.neq]", filterBlockHashNeq));
        }

        if (filterBlockHashLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_hash.like]", filterBlockHashLike));
        }

        if (filterBlockHashIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_hash.ilike]", filterBlockHashIlike));
        }

        if (filterBlockNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_number]", filterBlockNumber));
        }

        if (filterBlockNumberNeq != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_number.neq]", filterBlockNumberNeq));
        }

        if (filterBlockNumberLike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_number.like]", filterBlockNumberLike));
        }

        if (filterBlockNumberIlike != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_number.ilike]", filterBlockNumberIlike));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiTransactionsReceiptsGetValidateBeforeCall(ApiTransactionsReceiptsGetFieldsTransactionReceiptsParameter fieldsTransactionReceipts, Integer filterTransactionId, String filterBlockHash, String filterBlockHashNeq, String filterBlockHashLike, String filterBlockHashIlike, String filterBlockNumber, String filterBlockNumberNeq, String filterBlockNumberLike, String filterBlockNumberIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsReceiptsGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = apiTransactionsReceiptsGetCall(fieldsTransactionReceipts, filterTransactionId, filterBlockHash, filterBlockHashNeq, filterBlockHashLike, filterBlockHashIlike, filterBlockNumber, filterBlockNumberNeq, filterBlockNumberLike, filterBlockNumberIlike, include, sort, _callback);
        return localVarCall;

    }

    /**
     * List transaction receipts
     * 
     * @param fieldsTransactionReceipts Include the given fields in the response. (optional)
     * @param filterTransactionId Filter the results where the [transaction_id] field is equal to the given value. (optional)
     * @param filterBlockHash Filter the results where the [block_hash] field is equal to the given value. (optional)
     * @param filterBlockHashNeq Filter the results where the [block_hash] field is not equal to the given value. (optional)
     * @param filterBlockHashLike Filter the results where the [block_hash] field is similar to the given case sensitive value. (optional)
     * @param filterBlockHashIlike Filter the results where the [block_hash] field is similar to the given case insensitive value. (optional)
     * @param filterBlockNumber Filter the results where the [block_number] field is equal to the given value. (optional)
     * @param filterBlockNumberNeq Filter the results where the [block_number] field is not equal to the given value. (optional)
     * @param filterBlockNumberLike Filter the results where the [block_number] field is similar to the given case sensitive value. (optional)
     * @param filterBlockNumberIlike Filter the results where the [block_number] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiTransactionsReceiptsGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiTransactionsReceiptsGet200Response apiTransactionsReceiptsGet(ApiTransactionsReceiptsGetFieldsTransactionReceiptsParameter fieldsTransactionReceipts, Integer filterTransactionId, String filterBlockHash, String filterBlockHashNeq, String filterBlockHashLike, String filterBlockHashIlike, String filterBlockNumber, String filterBlockNumberNeq, String filterBlockNumberLike, String filterBlockNumberIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsReceiptsGetSortParameter sort) throws ApiException {
        ApiResponse<ApiTransactionsReceiptsGet200Response> localVarResp = apiTransactionsReceiptsGetWithHttpInfo(fieldsTransactionReceipts, filterTransactionId, filterBlockHash, filterBlockHashNeq, filterBlockHashLike, filterBlockHashIlike, filterBlockNumber, filterBlockNumberNeq, filterBlockNumberLike, filterBlockNumberIlike, include, sort);
        return localVarResp.getData();
    }

    /**
     * List transaction receipts
     * 
     * @param fieldsTransactionReceipts Include the given fields in the response. (optional)
     * @param filterTransactionId Filter the results where the [transaction_id] field is equal to the given value. (optional)
     * @param filterBlockHash Filter the results where the [block_hash] field is equal to the given value. (optional)
     * @param filterBlockHashNeq Filter the results where the [block_hash] field is not equal to the given value. (optional)
     * @param filterBlockHashLike Filter the results where the [block_hash] field is similar to the given case sensitive value. (optional)
     * @param filterBlockHashIlike Filter the results where the [block_hash] field is similar to the given case insensitive value. (optional)
     * @param filterBlockNumber Filter the results where the [block_number] field is equal to the given value. (optional)
     * @param filterBlockNumberNeq Filter the results where the [block_number] field is not equal to the given value. (optional)
     * @param filterBlockNumberLike Filter the results where the [block_number] field is similar to the given case sensitive value. (optional)
     * @param filterBlockNumberIlike Filter the results where the [block_number] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiResponse&lt;ApiTransactionsReceiptsGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiTransactionsReceiptsGet200Response> apiTransactionsReceiptsGetWithHttpInfo(ApiTransactionsReceiptsGetFieldsTransactionReceiptsParameter fieldsTransactionReceipts, Integer filterTransactionId, String filterBlockHash, String filterBlockHashNeq, String filterBlockHashLike, String filterBlockHashIlike, String filterBlockNumber, String filterBlockNumberNeq, String filterBlockNumberLike, String filterBlockNumberIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsReceiptsGetSortParameter sort) throws ApiException {
        okhttp3.Call localVarCall = apiTransactionsReceiptsGetValidateBeforeCall(fieldsTransactionReceipts, filterTransactionId, filterBlockHash, filterBlockHashNeq, filterBlockHashLike, filterBlockHashIlike, filterBlockNumber, filterBlockNumberNeq, filterBlockNumberLike, filterBlockNumberIlike, include, sort, null);
        Type localVarReturnType = new TypeToken<ApiTransactionsReceiptsGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List transaction receipts (asynchronously)
     * 
     * @param fieldsTransactionReceipts Include the given fields in the response. (optional)
     * @param filterTransactionId Filter the results where the [transaction_id] field is equal to the given value. (optional)
     * @param filterBlockHash Filter the results where the [block_hash] field is equal to the given value. (optional)
     * @param filterBlockHashNeq Filter the results where the [block_hash] field is not equal to the given value. (optional)
     * @param filterBlockHashLike Filter the results where the [block_hash] field is similar to the given case sensitive value. (optional)
     * @param filterBlockHashIlike Filter the results where the [block_hash] field is similar to the given case insensitive value. (optional)
     * @param filterBlockNumber Filter the results where the [block_number] field is equal to the given value. (optional)
     * @param filterBlockNumberNeq Filter the results where the [block_number] field is not equal to the given value. (optional)
     * @param filterBlockNumberLike Filter the results where the [block_number] field is similar to the given case sensitive value. (optional)
     * @param filterBlockNumberIlike Filter the results where the [block_number] field is similar to the given case insensitive value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiTransactionsReceiptsGetAsync(ApiTransactionsReceiptsGetFieldsTransactionReceiptsParameter fieldsTransactionReceipts, Integer filterTransactionId, String filterBlockHash, String filterBlockHashNeq, String filterBlockHashLike, String filterBlockHashIlike, String filterBlockNumber, String filterBlockNumberNeq, String filterBlockNumberLike, String filterBlockNumberIlike, ApiTransactionsMetadataGetIncludeParameter include, ApiTransactionsReceiptsGetSortParameter sort, final ApiCallback<ApiTransactionsReceiptsGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiTransactionsReceiptsGetValidateBeforeCall(fieldsTransactionReceipts, filterTransactionId, filterBlockHash, filterBlockHashNeq, filterBlockHashLike, filterBlockHashIlike, filterBlockNumber, filterBlockNumberNeq, filterBlockNumberLike, filterBlockNumberIlike, include, sort, _callback);
        Type localVarReturnType = new TypeToken<ApiTransactionsReceiptsGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiValidatorsUpdatesGet
     * @param fieldsBlockNumber Include the given fields in the response. (optional)
     * @param filterBlockNumber Filter the results where the [block_number] field is equal to the given value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiValidatorsUpdatesGetCall(ApiValidatorsUpdatesGetFieldsBlockNumberParameter fieldsBlockNumber, Integer filterBlockNumber, ApiValidatorsUpdatesGetIncludeParameter include, ApiValidatorsUpdatesGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/validators/updates";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fieldsBlockNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields[block_number]", fieldsBlockNumber));
        }

        if (filterBlockNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter[block_number]", filterBlockNumber));
        }

        if (include != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include", include));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiValidatorsUpdatesGetValidateBeforeCall(ApiValidatorsUpdatesGetFieldsBlockNumberParameter fieldsBlockNumber, Integer filterBlockNumber, ApiValidatorsUpdatesGetIncludeParameter include, ApiValidatorsUpdatesGetSortParameter sort, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = apiValidatorsUpdatesGetCall(fieldsBlockNumber, filterBlockNumber, include, sort, _callback);
        return localVarCall;

    }

    /**
     * List validator updates
     * 
     * @param fieldsBlockNumber Include the given fields in the response. (optional)
     * @param filterBlockNumber Filter the results where the [block_number] field is equal to the given value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiValidatorsUpdatesGet200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiValidatorsUpdatesGet200Response apiValidatorsUpdatesGet(ApiValidatorsUpdatesGetFieldsBlockNumberParameter fieldsBlockNumber, Integer filterBlockNumber, ApiValidatorsUpdatesGetIncludeParameter include, ApiValidatorsUpdatesGetSortParameter sort) throws ApiException {
        ApiResponse<ApiValidatorsUpdatesGet200Response> localVarResp = apiValidatorsUpdatesGetWithHttpInfo(fieldsBlockNumber, filterBlockNumber, include, sort);
        return localVarResp.getData();
    }

    /**
     * List validator updates
     * 
     * @param fieldsBlockNumber Include the given fields in the response. (optional)
     * @param filterBlockNumber Filter the results where the [block_number] field is equal to the given value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @return ApiResponse&lt;ApiValidatorsUpdatesGet200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiValidatorsUpdatesGet200Response> apiValidatorsUpdatesGetWithHttpInfo(ApiValidatorsUpdatesGetFieldsBlockNumberParameter fieldsBlockNumber, Integer filterBlockNumber, ApiValidatorsUpdatesGetIncludeParameter include, ApiValidatorsUpdatesGetSortParameter sort) throws ApiException {
        okhttp3.Call localVarCall = apiValidatorsUpdatesGetValidateBeforeCall(fieldsBlockNumber, filterBlockNumber, include, sort, null);
        Type localVarReturnType = new TypeToken<ApiValidatorsUpdatesGet200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List validator updates (asynchronously)
     * 
     * @param fieldsBlockNumber Include the given fields in the response. (optional)
     * @param filterBlockNumber Filter the results where the [block_number] field is equal to the given value. (optional)
     * @param include Include the given relationships. (optional)
     * @param sort Sort the results by the given field and direction. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiValidatorsUpdatesGetAsync(ApiValidatorsUpdatesGetFieldsBlockNumberParameter fieldsBlockNumber, Integer filterBlockNumber, ApiValidatorsUpdatesGetIncludeParameter include, ApiValidatorsUpdatesGetSortParameter sort, final ApiCallback<ApiValidatorsUpdatesGet200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiValidatorsUpdatesGetValidateBeforeCall(fieldsBlockNumber, filterBlockNumber, include, sort, _callback);
        Type localVarReturnType = new TypeToken<ApiValidatorsUpdatesGet200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}

=begin
#Railway

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'cgi'

module OpenapiClient
  class DefaultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List accounts
    # @param [Hash] opts the optional parameters
    # @option opts [ApiAccountsGetFieldsAccountsParameter] :fields_accounts Include the given fields in the response.
    # @option opts [String] :filter_address Filter the results where the [address] field is equal to the given value.
    # @option opts [String] :filter_address_neq Filter the results where the [address] field is not equal to the given value.
    # @option opts [String] :filter_address_like Filter the results where the [address] field is similar to the given case sensitive value.
    # @option opts [String] :filter_address_ilike Filter the results where the [address] field is similar to the given case insensitive value.
    # @option opts [String] :filter_public_key Filter the results where the [public_key] field is equal to the given value.
    # @option opts [String] :filter_public_key_neq Filter the results where the [public_key] field is not equal to the given value.
    # @option opts [String] :filter_public_key_like Filter the results where the [public_key] field is similar to the given case sensitive value.
    # @option opts [String] :filter_public_key_ilike Filter the results where the [public_key] field is similar to the given case insensitive value.
    # @option opts [String] :filter_name Filter the results where the [name] field is equal to the given value.
    # @option opts [String] :filter_name_neq Filter the results where the [name] field is not equal to the given value.
    # @option opts [String] :filter_name_like Filter the results where the [name] field is similar to the given case sensitive value.
    # @option opts [String] :filter_name_ilike Filter the results where the [name] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_nonce Filter the results where the [nonce] field is equal to the given value.
    # @option opts [String] :filter_validator_address Filter the results where the [validator.address] field is equal to the given value.
    # @option opts [String] :filter_validator_address_neq Filter the results where the [validator.address] field is not equal to the given value.
    # @option opts [String] :filter_validator_address_like Filter the results where the [validator.address] field is similar to the given case sensitive value.
    # @option opts [String] :filter_validator_address_ilike Filter the results where the [validator.address] field is similar to the given case insensitive value.
    # @option opts [String] :filter_validator_public_key Filter the results where the [validator.publicKey] field is equal to the given value.
    # @option opts [String] :filter_validator_public_key_neq Filter the results where the [validator.publicKey] field is not equal to the given value.
    # @option opts [String] :filter_validator_public_key_like Filter the results where the [validator.publicKey] field is similar to the given case sensitive value.
    # @option opts [String] :filter_validator_public_key_ilike Filter the results where the [validator.publicKey] field is similar to the given case insensitive value.
    # @option opts [String] :filter_validator_power Filter the results where the [validator.power] field is equal to the given value.
    # @option opts [String] :filter_validator_power_neq Filter the results where the [validator.power] field is not equal to the given value.
    # @option opts [String] :filter_validator_power_like Filter the results where the [validator.power] field is similar to the given case sensitive value.
    # @option opts [String] :filter_validator_power_ilike Filter the results where the [validator.power] field is similar to the given case insensitive value.
    # @option opts [ApiAccountsGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiAccountsGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [ApiAccountsGet200Response]
    def api_accounts_get(opts = {})
      data, _status_code, _headers = api_accounts_get_with_http_info(opts)
      data
    end

    # List accounts
    # @param [Hash] opts the optional parameters
    # @option opts [ApiAccountsGetFieldsAccountsParameter] :fields_accounts Include the given fields in the response.
    # @option opts [String] :filter_address Filter the results where the [address] field is equal to the given value.
    # @option opts [String] :filter_address_neq Filter the results where the [address] field is not equal to the given value.
    # @option opts [String] :filter_address_like Filter the results where the [address] field is similar to the given case sensitive value.
    # @option opts [String] :filter_address_ilike Filter the results where the [address] field is similar to the given case insensitive value.
    # @option opts [String] :filter_public_key Filter the results where the [public_key] field is equal to the given value.
    # @option opts [String] :filter_public_key_neq Filter the results where the [public_key] field is not equal to the given value.
    # @option opts [String] :filter_public_key_like Filter the results where the [public_key] field is similar to the given case sensitive value.
    # @option opts [String] :filter_public_key_ilike Filter the results where the [public_key] field is similar to the given case insensitive value.
    # @option opts [String] :filter_name Filter the results where the [name] field is equal to the given value.
    # @option opts [String] :filter_name_neq Filter the results where the [name] field is not equal to the given value.
    # @option opts [String] :filter_name_like Filter the results where the [name] field is similar to the given case sensitive value.
    # @option opts [String] :filter_name_ilike Filter the results where the [name] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_nonce Filter the results where the [nonce] field is equal to the given value.
    # @option opts [String] :filter_validator_address Filter the results where the [validator.address] field is equal to the given value.
    # @option opts [String] :filter_validator_address_neq Filter the results where the [validator.address] field is not equal to the given value.
    # @option opts [String] :filter_validator_address_like Filter the results where the [validator.address] field is similar to the given case sensitive value.
    # @option opts [String] :filter_validator_address_ilike Filter the results where the [validator.address] field is similar to the given case insensitive value.
    # @option opts [String] :filter_validator_public_key Filter the results where the [validator.publicKey] field is equal to the given value.
    # @option opts [String] :filter_validator_public_key_neq Filter the results where the [validator.publicKey] field is not equal to the given value.
    # @option opts [String] :filter_validator_public_key_like Filter the results where the [validator.publicKey] field is similar to the given case sensitive value.
    # @option opts [String] :filter_validator_public_key_ilike Filter the results where the [validator.publicKey] field is similar to the given case insensitive value.
    # @option opts [String] :filter_validator_power Filter the results where the [validator.power] field is equal to the given value.
    # @option opts [String] :filter_validator_power_neq Filter the results where the [validator.power] field is not equal to the given value.
    # @option opts [String] :filter_validator_power_like Filter the results where the [validator.power] field is similar to the given case sensitive value.
    # @option opts [String] :filter_validator_power_ilike Filter the results where the [validator.power] field is similar to the given case insensitive value.
    # @option opts [ApiAccountsGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiAccountsGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [Array<(ApiAccountsGet200Response, Integer, Hash)>] ApiAccountsGet200Response data, response status code and response headers
    def api_accounts_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.api_accounts_get ...'
      end
      # resource path
      local_var_path = '/api/accounts'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fields[accounts]'] = opts[:'fields_accounts'] if !opts[:'fields_accounts'].nil?
      query_params[:'filter[address]'] = opts[:'filter_address'] if !opts[:'filter_address'].nil?
      query_params[:'filter[address.neq]'] = opts[:'filter_address_neq'] if !opts[:'filter_address_neq'].nil?
      query_params[:'filter[address.like]'] = opts[:'filter_address_like'] if !opts[:'filter_address_like'].nil?
      query_params[:'filter[address.ilike]'] = opts[:'filter_address_ilike'] if !opts[:'filter_address_ilike'].nil?
      query_params[:'filter[public_key]'] = opts[:'filter_public_key'] if !opts[:'filter_public_key'].nil?
      query_params[:'filter[public_key.neq]'] = opts[:'filter_public_key_neq'] if !opts[:'filter_public_key_neq'].nil?
      query_params[:'filter[public_key.like]'] = opts[:'filter_public_key_like'] if !opts[:'filter_public_key_like'].nil?
      query_params[:'filter[public_key.ilike]'] = opts[:'filter_public_key_ilike'] if !opts[:'filter_public_key_ilike'].nil?
      query_params[:'filter[name]'] = opts[:'filter_name'] if !opts[:'filter_name'].nil?
      query_params[:'filter[name.neq]'] = opts[:'filter_name_neq'] if !opts[:'filter_name_neq'].nil?
      query_params[:'filter[name.like]'] = opts[:'filter_name_like'] if !opts[:'filter_name_like'].nil?
      query_params[:'filter[name.ilike]'] = opts[:'filter_name_ilike'] if !opts[:'filter_name_ilike'].nil?
      query_params[:'filter[nonce]'] = opts[:'filter_nonce'] if !opts[:'filter_nonce'].nil?
      query_params[:'filter[validator.address]'] = opts[:'filter_validator_address'] if !opts[:'filter_validator_address'].nil?
      query_params[:'filter[validator.address.neq]'] = opts[:'filter_validator_address_neq'] if !opts[:'filter_validator_address_neq'].nil?
      query_params[:'filter[validator.address.like]'] = opts[:'filter_validator_address_like'] if !opts[:'filter_validator_address_like'].nil?
      query_params[:'filter[validator.address.ilike]'] = opts[:'filter_validator_address_ilike'] if !opts[:'filter_validator_address_ilike'].nil?
      query_params[:'filter[validator.publicKey]'] = opts[:'filter_validator_public_key'] if !opts[:'filter_validator_public_key'].nil?
      query_params[:'filter[validator.publicKey.neq]'] = opts[:'filter_validator_public_key_neq'] if !opts[:'filter_validator_public_key_neq'].nil?
      query_params[:'filter[validator.publicKey.like]'] = opts[:'filter_validator_public_key_like'] if !opts[:'filter_validator_public_key_like'].nil?
      query_params[:'filter[validator.publicKey.ilike]'] = opts[:'filter_validator_public_key_ilike'] if !opts[:'filter_validator_public_key_ilike'].nil?
      query_params[:'filter[validator.power]'] = opts[:'filter_validator_power'] if !opts[:'filter_validator_power'].nil?
      query_params[:'filter[validator.power.neq]'] = opts[:'filter_validator_power_neq'] if !opts[:'filter_validator_power_neq'].nil?
      query_params[:'filter[validator.power.like]'] = opts[:'filter_validator_power_like'] if !opts[:'filter_validator_power_like'].nil?
      query_params[:'filter[validator.power.ilike]'] = opts[:'filter_validator_power_ilike'] if !opts[:'filter_validator_power_ilike'].nil?
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiAccountsGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.api_accounts_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#api_accounts_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List account metadata
    # @param [Hash] opts the optional parameters
    # @option opts [ApiAccountsMetadataGetFieldsAccountsMetadataParameter] :fields_accounts_metadata Include the given fields in the response.
    # @option opts [Integer] :filter_account_id Filter the results where the [account_id] field is equal to the given value.
    # @option opts [String] :filter_module Filter the results where the [module] field is equal to the given value.
    # @option opts [String] :filter_module_neq Filter the results where the [module] field is not equal to the given value.
    # @option opts [String] :filter_module_like Filter the results where the [module] field is similar to the given case sensitive value.
    # @option opts [String] :filter_module_ilike Filter the results where the [module] field is similar to the given case insensitive value.
    # @option opts [String] :filter_key Filter the results where the [key] field is equal to the given value.
    # @option opts [String] :filter_key_neq Filter the results where the [key] field is not equal to the given value.
    # @option opts [String] :filter_key_like Filter the results where the [key] field is similar to the given case sensitive value.
    # @option opts [String] :filter_key_ilike Filter the results where the [key] field is similar to the given case insensitive value.
    # @option opts [String] :filter_value Filter the results where the [value] field is equal to the given value.
    # @option opts [String] :filter_value_neq Filter the results where the [value] field is not equal to the given value.
    # @option opts [String] :filter_value_like Filter the results where the [value] field is similar to the given case sensitive value.
    # @option opts [String] :filter_value_ilike Filter the results where the [value] field is similar to the given case insensitive value.
    # @option opts [ApiAccountsMetadataGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiAccountsMetadataGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [ApiAccountsMetadataGet200Response]
    def api_accounts_metadata_get(opts = {})
      data, _status_code, _headers = api_accounts_metadata_get_with_http_info(opts)
      data
    end

    # List account metadata
    # @param [Hash] opts the optional parameters
    # @option opts [ApiAccountsMetadataGetFieldsAccountsMetadataParameter] :fields_accounts_metadata Include the given fields in the response.
    # @option opts [Integer] :filter_account_id Filter the results where the [account_id] field is equal to the given value.
    # @option opts [String] :filter_module Filter the results where the [module] field is equal to the given value.
    # @option opts [String] :filter_module_neq Filter the results where the [module] field is not equal to the given value.
    # @option opts [String] :filter_module_like Filter the results where the [module] field is similar to the given case sensitive value.
    # @option opts [String] :filter_module_ilike Filter the results where the [module] field is similar to the given case insensitive value.
    # @option opts [String] :filter_key Filter the results where the [key] field is equal to the given value.
    # @option opts [String] :filter_key_neq Filter the results where the [key] field is not equal to the given value.
    # @option opts [String] :filter_key_like Filter the results where the [key] field is similar to the given case sensitive value.
    # @option opts [String] :filter_key_ilike Filter the results where the [key] field is similar to the given case insensitive value.
    # @option opts [String] :filter_value Filter the results where the [value] field is equal to the given value.
    # @option opts [String] :filter_value_neq Filter the results where the [value] field is not equal to the given value.
    # @option opts [String] :filter_value_like Filter the results where the [value] field is similar to the given case sensitive value.
    # @option opts [String] :filter_value_ilike Filter the results where the [value] field is similar to the given case insensitive value.
    # @option opts [ApiAccountsMetadataGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiAccountsMetadataGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [Array<(ApiAccountsMetadataGet200Response, Integer, Hash)>] ApiAccountsMetadataGet200Response data, response status code and response headers
    def api_accounts_metadata_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.api_accounts_metadata_get ...'
      end
      # resource path
      local_var_path = '/api/accounts/metadata'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fields[accounts_metadata]'] = opts[:'fields_accounts_metadata'] if !opts[:'fields_accounts_metadata'].nil?
      query_params[:'filter[account_id]'] = opts[:'filter_account_id'] if !opts[:'filter_account_id'].nil?
      query_params[:'filter[module]'] = opts[:'filter_module'] if !opts[:'filter_module'].nil?
      query_params[:'filter[module.neq]'] = opts[:'filter_module_neq'] if !opts[:'filter_module_neq'].nil?
      query_params[:'filter[module.like]'] = opts[:'filter_module_like'] if !opts[:'filter_module_like'].nil?
      query_params[:'filter[module.ilike]'] = opts[:'filter_module_ilike'] if !opts[:'filter_module_ilike'].nil?
      query_params[:'filter[key]'] = opts[:'filter_key'] if !opts[:'filter_key'].nil?
      query_params[:'filter[key.neq]'] = opts[:'filter_key_neq'] if !opts[:'filter_key_neq'].nil?
      query_params[:'filter[key.like]'] = opts[:'filter_key_like'] if !opts[:'filter_key_like'].nil?
      query_params[:'filter[key.ilike]'] = opts[:'filter_key_ilike'] if !opts[:'filter_key_ilike'].nil?
      query_params[:'filter[value]'] = opts[:'filter_value'] if !opts[:'filter_value'].nil?
      query_params[:'filter[value.neq]'] = opts[:'filter_value_neq'] if !opts[:'filter_value_neq'].nil?
      query_params[:'filter[value.like]'] = opts[:'filter_value_like'] if !opts[:'filter_value_like'].nil?
      query_params[:'filter[value.ilike]'] = opts[:'filter_value_ilike'] if !opts[:'filter_value_ilike'].nil?
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiAccountsMetadataGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.api_accounts_metadata_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#api_accounts_metadata_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List blocks
    # @param [Hash] opts the optional parameters
    # @option opts [ApiBlocksGetFieldsBlocksParameter] :fields_blocks Include the given fields in the response.
    # @option opts [String] :filter_hash Filter the results where the [hash] field is equal to the given value.
    # @option opts [String] :filter_hash_neq Filter the results where the [hash] field is not equal to the given value.
    # @option opts [String] :filter_hash_like Filter the results where the [hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_hash_ilike Filter the results where the [hash] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_height Filter the results where the [height] field is equal to the given value.
    # @option opts [Integer] :filter_header_version_block Filter the results where the [header.version.block] field is equal to the given value.
    # @option opts [String] :filter_header_chain_id Filter the results where the [header.chainId] field is equal to the given value.
    # @option opts [String] :filter_header_chain_id_neq Filter the results where the [header.chainId] field is not equal to the given value.
    # @option opts [String] :filter_header_chain_id_like Filter the results where the [header.chainId] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_chain_id_ilike Filter the results where the [header.chainId] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_header_height Filter the results where the [header.height] field is equal to the given value.
    # @option opts [String] :filter_header_time Filter the results where the [header.time] field is equal to the given value.
    # @option opts [String] :filter_header_time_neq Filter the results where the [header.time] field is not equal to the given value.
    # @option opts [String] :filter_header_time_like Filter the results where the [header.time] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_time_ilike Filter the results where the [header.time] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_last_block_id_hash Filter the results where the [header.lastBlockId.hash] field is equal to the given value.
    # @option opts [String] :filter_header_last_block_id_hash_neq Filter the results where the [header.lastBlockId.hash] field is not equal to the given value.
    # @option opts [String] :filter_header_last_block_id_hash_like Filter the results where the [header.lastBlockId.hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_last_block_id_hash_ilike Filter the results where the [header.lastBlockId.hash] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_header_last_block_id_part_set_header_total Filter the results where the [header.lastBlockId.partSetHeader.total] field is equal to the given value.
    # @option opts [String] :filter_header_last_block_id_part_set_header_hash Filter the results where the [header.lastBlockId.partSetHeader.hash] field is equal to the given value.
    # @option opts [String] :filter_header_last_block_id_part_set_header_hash_neq Filter the results where the [header.lastBlockId.partSetHeader.hash] field is not equal to the given value.
    # @option opts [String] :filter_header_last_block_id_part_set_header_hash_like Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_last_block_id_part_set_header_hash_ilike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_last_commit_hash Filter the results where the [header.lastCommitHash] field is equal to the given value.
    # @option opts [String] :filter_header_last_commit_hash_neq Filter the results where the [header.lastCommitHash] field is not equal to the given value.
    # @option opts [String] :filter_header_last_commit_hash_like Filter the results where the [header.lastCommitHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_last_commit_hash_ilike Filter the results where the [header.lastCommitHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_data_hash Filter the results where the [header.dataHash] field is equal to the given value.
    # @option opts [String] :filter_header_data_hash_neq Filter the results where the [header.dataHash] field is not equal to the given value.
    # @option opts [String] :filter_header_data_hash_like Filter the results where the [header.dataHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_data_hash_ilike Filter the results where the [header.dataHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_validators_hash Filter the results where the [header.validatorsHash] field is equal to the given value.
    # @option opts [String] :filter_header_validators_hash_neq Filter the results where the [header.validatorsHash] field is not equal to the given value.
    # @option opts [String] :filter_header_validators_hash_like Filter the results where the [header.validatorsHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_validators_hash_ilike Filter the results where the [header.validatorsHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_next_validators_hash Filter the results where the [header.nextValidatorsHash] field is equal to the given value.
    # @option opts [String] :filter_header_next_validators_hash_neq Filter the results where the [header.nextValidatorsHash] field is not equal to the given value.
    # @option opts [String] :filter_header_next_validators_hash_like Filter the results where the [header.nextValidatorsHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_next_validators_hash_ilike Filter the results where the [header.nextValidatorsHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_consensus_hash Filter the results where the [header.consensusHash] field is equal to the given value.
    # @option opts [String] :filter_header_consensus_hash_neq Filter the results where the [header.consensusHash] field is not equal to the given value.
    # @option opts [String] :filter_header_consensus_hash_like Filter the results where the [header.consensusHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_consensus_hash_ilike Filter the results where the [header.consensusHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_app_hash Filter the results where the [header.appHash] field is equal to the given value.
    # @option opts [String] :filter_header_app_hash_neq Filter the results where the [header.appHash] field is not equal to the given value.
    # @option opts [String] :filter_header_app_hash_like Filter the results where the [header.appHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_app_hash_ilike Filter the results where the [header.appHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_last_results_hash Filter the results where the [header.lastResultsHash] field is equal to the given value.
    # @option opts [String] :filter_header_last_results_hash_neq Filter the results where the [header.lastResultsHash] field is not equal to the given value.
    # @option opts [String] :filter_header_last_results_hash_like Filter the results where the [header.lastResultsHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_last_results_hash_ilike Filter the results where the [header.lastResultsHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_evidence_hash Filter the results where the [header.evidenceHash] field is equal to the given value.
    # @option opts [String] :filter_header_evidence_hash_neq Filter the results where the [header.evidenceHash] field is not equal to the given value.
    # @option opts [String] :filter_header_evidence_hash_like Filter the results where the [header.evidenceHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_evidence_hash_ilike Filter the results where the [header.evidenceHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_proposer_address Filter the results where the [header.proposerAddress] field is equal to the given value.
    # @option opts [String] :filter_header_proposer_address_neq Filter the results where the [header.proposerAddress] field is not equal to the given value.
    # @option opts [String] :filter_header_proposer_address_like Filter the results where the [header.proposerAddress] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_proposer_address_ilike Filter the results where the [header.proposerAddress] field is similar to the given case insensitive value.
    # @option opts [ApiBlocksGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiBlocksGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [ApiBlocksGet200Response]
    def api_blocks_get(opts = {})
      data, _status_code, _headers = api_blocks_get_with_http_info(opts)
      data
    end

    # List blocks
    # @param [Hash] opts the optional parameters
    # @option opts [ApiBlocksGetFieldsBlocksParameter] :fields_blocks Include the given fields in the response.
    # @option opts [String] :filter_hash Filter the results where the [hash] field is equal to the given value.
    # @option opts [String] :filter_hash_neq Filter the results where the [hash] field is not equal to the given value.
    # @option opts [String] :filter_hash_like Filter the results where the [hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_hash_ilike Filter the results where the [hash] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_height Filter the results where the [height] field is equal to the given value.
    # @option opts [Integer] :filter_header_version_block Filter the results where the [header.version.block] field is equal to the given value.
    # @option opts [String] :filter_header_chain_id Filter the results where the [header.chainId] field is equal to the given value.
    # @option opts [String] :filter_header_chain_id_neq Filter the results where the [header.chainId] field is not equal to the given value.
    # @option opts [String] :filter_header_chain_id_like Filter the results where the [header.chainId] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_chain_id_ilike Filter the results where the [header.chainId] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_header_height Filter the results where the [header.height] field is equal to the given value.
    # @option opts [String] :filter_header_time Filter the results where the [header.time] field is equal to the given value.
    # @option opts [String] :filter_header_time_neq Filter the results where the [header.time] field is not equal to the given value.
    # @option opts [String] :filter_header_time_like Filter the results where the [header.time] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_time_ilike Filter the results where the [header.time] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_last_block_id_hash Filter the results where the [header.lastBlockId.hash] field is equal to the given value.
    # @option opts [String] :filter_header_last_block_id_hash_neq Filter the results where the [header.lastBlockId.hash] field is not equal to the given value.
    # @option opts [String] :filter_header_last_block_id_hash_like Filter the results where the [header.lastBlockId.hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_last_block_id_hash_ilike Filter the results where the [header.lastBlockId.hash] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_header_last_block_id_part_set_header_total Filter the results where the [header.lastBlockId.partSetHeader.total] field is equal to the given value.
    # @option opts [String] :filter_header_last_block_id_part_set_header_hash Filter the results where the [header.lastBlockId.partSetHeader.hash] field is equal to the given value.
    # @option opts [String] :filter_header_last_block_id_part_set_header_hash_neq Filter the results where the [header.lastBlockId.partSetHeader.hash] field is not equal to the given value.
    # @option opts [String] :filter_header_last_block_id_part_set_header_hash_like Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_last_block_id_part_set_header_hash_ilike Filter the results where the [header.lastBlockId.partSetHeader.hash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_last_commit_hash Filter the results where the [header.lastCommitHash] field is equal to the given value.
    # @option opts [String] :filter_header_last_commit_hash_neq Filter the results where the [header.lastCommitHash] field is not equal to the given value.
    # @option opts [String] :filter_header_last_commit_hash_like Filter the results where the [header.lastCommitHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_last_commit_hash_ilike Filter the results where the [header.lastCommitHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_data_hash Filter the results where the [header.dataHash] field is equal to the given value.
    # @option opts [String] :filter_header_data_hash_neq Filter the results where the [header.dataHash] field is not equal to the given value.
    # @option opts [String] :filter_header_data_hash_like Filter the results where the [header.dataHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_data_hash_ilike Filter the results where the [header.dataHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_validators_hash Filter the results where the [header.validatorsHash] field is equal to the given value.
    # @option opts [String] :filter_header_validators_hash_neq Filter the results where the [header.validatorsHash] field is not equal to the given value.
    # @option opts [String] :filter_header_validators_hash_like Filter the results where the [header.validatorsHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_validators_hash_ilike Filter the results where the [header.validatorsHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_next_validators_hash Filter the results where the [header.nextValidatorsHash] field is equal to the given value.
    # @option opts [String] :filter_header_next_validators_hash_neq Filter the results where the [header.nextValidatorsHash] field is not equal to the given value.
    # @option opts [String] :filter_header_next_validators_hash_like Filter the results where the [header.nextValidatorsHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_next_validators_hash_ilike Filter the results where the [header.nextValidatorsHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_consensus_hash Filter the results where the [header.consensusHash] field is equal to the given value.
    # @option opts [String] :filter_header_consensus_hash_neq Filter the results where the [header.consensusHash] field is not equal to the given value.
    # @option opts [String] :filter_header_consensus_hash_like Filter the results where the [header.consensusHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_consensus_hash_ilike Filter the results where the [header.consensusHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_app_hash Filter the results where the [header.appHash] field is equal to the given value.
    # @option opts [String] :filter_header_app_hash_neq Filter the results where the [header.appHash] field is not equal to the given value.
    # @option opts [String] :filter_header_app_hash_like Filter the results where the [header.appHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_app_hash_ilike Filter the results where the [header.appHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_last_results_hash Filter the results where the [header.lastResultsHash] field is equal to the given value.
    # @option opts [String] :filter_header_last_results_hash_neq Filter the results where the [header.lastResultsHash] field is not equal to the given value.
    # @option opts [String] :filter_header_last_results_hash_like Filter the results where the [header.lastResultsHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_last_results_hash_ilike Filter the results where the [header.lastResultsHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_evidence_hash Filter the results where the [header.evidenceHash] field is equal to the given value.
    # @option opts [String] :filter_header_evidence_hash_neq Filter the results where the [header.evidenceHash] field is not equal to the given value.
    # @option opts [String] :filter_header_evidence_hash_like Filter the results where the [header.evidenceHash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_evidence_hash_ilike Filter the results where the [header.evidenceHash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_header_proposer_address Filter the results where the [header.proposerAddress] field is equal to the given value.
    # @option opts [String] :filter_header_proposer_address_neq Filter the results where the [header.proposerAddress] field is not equal to the given value.
    # @option opts [String] :filter_header_proposer_address_like Filter the results where the [header.proposerAddress] field is similar to the given case sensitive value.
    # @option opts [String] :filter_header_proposer_address_ilike Filter the results where the [header.proposerAddress] field is similar to the given case insensitive value.
    # @option opts [ApiBlocksGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiBlocksGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [Array<(ApiBlocksGet200Response, Integer, Hash)>] ApiBlocksGet200Response data, response status code and response headers
    def api_blocks_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.api_blocks_get ...'
      end
      # resource path
      local_var_path = '/api/blocks'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fields[blocks]'] = opts[:'fields_blocks'] if !opts[:'fields_blocks'].nil?
      query_params[:'filter[hash]'] = opts[:'filter_hash'] if !opts[:'filter_hash'].nil?
      query_params[:'filter[hash.neq]'] = opts[:'filter_hash_neq'] if !opts[:'filter_hash_neq'].nil?
      query_params[:'filter[hash.like]'] = opts[:'filter_hash_like'] if !opts[:'filter_hash_like'].nil?
      query_params[:'filter[hash.ilike]'] = opts[:'filter_hash_ilike'] if !opts[:'filter_hash_ilike'].nil?
      query_params[:'filter[height]'] = opts[:'filter_height'] if !opts[:'filter_height'].nil?
      query_params[:'filter[header.version.block]'] = opts[:'filter_header_version_block'] if !opts[:'filter_header_version_block'].nil?
      query_params[:'filter[header.chainId]'] = opts[:'filter_header_chain_id'] if !opts[:'filter_header_chain_id'].nil?
      query_params[:'filter[header.chainId.neq]'] = opts[:'filter_header_chain_id_neq'] if !opts[:'filter_header_chain_id_neq'].nil?
      query_params[:'filter[header.chainId.like]'] = opts[:'filter_header_chain_id_like'] if !opts[:'filter_header_chain_id_like'].nil?
      query_params[:'filter[header.chainId.ilike]'] = opts[:'filter_header_chain_id_ilike'] if !opts[:'filter_header_chain_id_ilike'].nil?
      query_params[:'filter[header.height]'] = opts[:'filter_header_height'] if !opts[:'filter_header_height'].nil?
      query_params[:'filter[header.time]'] = opts[:'filter_header_time'] if !opts[:'filter_header_time'].nil?
      query_params[:'filter[header.time.neq]'] = opts[:'filter_header_time_neq'] if !opts[:'filter_header_time_neq'].nil?
      query_params[:'filter[header.time.like]'] = opts[:'filter_header_time_like'] if !opts[:'filter_header_time_like'].nil?
      query_params[:'filter[header.time.ilike]'] = opts[:'filter_header_time_ilike'] if !opts[:'filter_header_time_ilike'].nil?
      query_params[:'filter[header.lastBlockId.hash]'] = opts[:'filter_header_last_block_id_hash'] if !opts[:'filter_header_last_block_id_hash'].nil?
      query_params[:'filter[header.lastBlockId.hash.neq]'] = opts[:'filter_header_last_block_id_hash_neq'] if !opts[:'filter_header_last_block_id_hash_neq'].nil?
      query_params[:'filter[header.lastBlockId.hash.like]'] = opts[:'filter_header_last_block_id_hash_like'] if !opts[:'filter_header_last_block_id_hash_like'].nil?
      query_params[:'filter[header.lastBlockId.hash.ilike]'] = opts[:'filter_header_last_block_id_hash_ilike'] if !opts[:'filter_header_last_block_id_hash_ilike'].nil?
      query_params[:'filter[header.lastBlockId.partSetHeader.total]'] = opts[:'filter_header_last_block_id_part_set_header_total'] if !opts[:'filter_header_last_block_id_part_set_header_total'].nil?
      query_params[:'filter[header.lastBlockId.partSetHeader.hash]'] = opts[:'filter_header_last_block_id_part_set_header_hash'] if !opts[:'filter_header_last_block_id_part_set_header_hash'].nil?
      query_params[:'filter[header.lastBlockId.partSetHeader.hash.neq]'] = opts[:'filter_header_last_block_id_part_set_header_hash_neq'] if !opts[:'filter_header_last_block_id_part_set_header_hash_neq'].nil?
      query_params[:'filter[header.lastBlockId.partSetHeader.hash.like]'] = opts[:'filter_header_last_block_id_part_set_header_hash_like'] if !opts[:'filter_header_last_block_id_part_set_header_hash_like'].nil?
      query_params[:'filter[header.lastBlockId.partSetHeader.hash.ilike]'] = opts[:'filter_header_last_block_id_part_set_header_hash_ilike'] if !opts[:'filter_header_last_block_id_part_set_header_hash_ilike'].nil?
      query_params[:'filter[header.lastCommitHash]'] = opts[:'filter_header_last_commit_hash'] if !opts[:'filter_header_last_commit_hash'].nil?
      query_params[:'filter[header.lastCommitHash.neq]'] = opts[:'filter_header_last_commit_hash_neq'] if !opts[:'filter_header_last_commit_hash_neq'].nil?
      query_params[:'filter[header.lastCommitHash.like]'] = opts[:'filter_header_last_commit_hash_like'] if !opts[:'filter_header_last_commit_hash_like'].nil?
      query_params[:'filter[header.lastCommitHash.ilike]'] = opts[:'filter_header_last_commit_hash_ilike'] if !opts[:'filter_header_last_commit_hash_ilike'].nil?
      query_params[:'filter[header.dataHash]'] = opts[:'filter_header_data_hash'] if !opts[:'filter_header_data_hash'].nil?
      query_params[:'filter[header.dataHash.neq]'] = opts[:'filter_header_data_hash_neq'] if !opts[:'filter_header_data_hash_neq'].nil?
      query_params[:'filter[header.dataHash.like]'] = opts[:'filter_header_data_hash_like'] if !opts[:'filter_header_data_hash_like'].nil?
      query_params[:'filter[header.dataHash.ilike]'] = opts[:'filter_header_data_hash_ilike'] if !opts[:'filter_header_data_hash_ilike'].nil?
      query_params[:'filter[header.validatorsHash]'] = opts[:'filter_header_validators_hash'] if !opts[:'filter_header_validators_hash'].nil?
      query_params[:'filter[header.validatorsHash.neq]'] = opts[:'filter_header_validators_hash_neq'] if !opts[:'filter_header_validators_hash_neq'].nil?
      query_params[:'filter[header.validatorsHash.like]'] = opts[:'filter_header_validators_hash_like'] if !opts[:'filter_header_validators_hash_like'].nil?
      query_params[:'filter[header.validatorsHash.ilike]'] = opts[:'filter_header_validators_hash_ilike'] if !opts[:'filter_header_validators_hash_ilike'].nil?
      query_params[:'filter[header.nextValidatorsHash]'] = opts[:'filter_header_next_validators_hash'] if !opts[:'filter_header_next_validators_hash'].nil?
      query_params[:'filter[header.nextValidatorsHash.neq]'] = opts[:'filter_header_next_validators_hash_neq'] if !opts[:'filter_header_next_validators_hash_neq'].nil?
      query_params[:'filter[header.nextValidatorsHash.like]'] = opts[:'filter_header_next_validators_hash_like'] if !opts[:'filter_header_next_validators_hash_like'].nil?
      query_params[:'filter[header.nextValidatorsHash.ilike]'] = opts[:'filter_header_next_validators_hash_ilike'] if !opts[:'filter_header_next_validators_hash_ilike'].nil?
      query_params[:'filter[header.consensusHash]'] = opts[:'filter_header_consensus_hash'] if !opts[:'filter_header_consensus_hash'].nil?
      query_params[:'filter[header.consensusHash.neq]'] = opts[:'filter_header_consensus_hash_neq'] if !opts[:'filter_header_consensus_hash_neq'].nil?
      query_params[:'filter[header.consensusHash.like]'] = opts[:'filter_header_consensus_hash_like'] if !opts[:'filter_header_consensus_hash_like'].nil?
      query_params[:'filter[header.consensusHash.ilike]'] = opts[:'filter_header_consensus_hash_ilike'] if !opts[:'filter_header_consensus_hash_ilike'].nil?
      query_params[:'filter[header.appHash]'] = opts[:'filter_header_app_hash'] if !opts[:'filter_header_app_hash'].nil?
      query_params[:'filter[header.appHash.neq]'] = opts[:'filter_header_app_hash_neq'] if !opts[:'filter_header_app_hash_neq'].nil?
      query_params[:'filter[header.appHash.like]'] = opts[:'filter_header_app_hash_like'] if !opts[:'filter_header_app_hash_like'].nil?
      query_params[:'filter[header.appHash.ilike]'] = opts[:'filter_header_app_hash_ilike'] if !opts[:'filter_header_app_hash_ilike'].nil?
      query_params[:'filter[header.lastResultsHash]'] = opts[:'filter_header_last_results_hash'] if !opts[:'filter_header_last_results_hash'].nil?
      query_params[:'filter[header.lastResultsHash.neq]'] = opts[:'filter_header_last_results_hash_neq'] if !opts[:'filter_header_last_results_hash_neq'].nil?
      query_params[:'filter[header.lastResultsHash.like]'] = opts[:'filter_header_last_results_hash_like'] if !opts[:'filter_header_last_results_hash_like'].nil?
      query_params[:'filter[header.lastResultsHash.ilike]'] = opts[:'filter_header_last_results_hash_ilike'] if !opts[:'filter_header_last_results_hash_ilike'].nil?
      query_params[:'filter[header.evidenceHash]'] = opts[:'filter_header_evidence_hash'] if !opts[:'filter_header_evidence_hash'].nil?
      query_params[:'filter[header.evidenceHash.neq]'] = opts[:'filter_header_evidence_hash_neq'] if !opts[:'filter_header_evidence_hash_neq'].nil?
      query_params[:'filter[header.evidenceHash.like]'] = opts[:'filter_header_evidence_hash_like'] if !opts[:'filter_header_evidence_hash_like'].nil?
      query_params[:'filter[header.evidenceHash.ilike]'] = opts[:'filter_header_evidence_hash_ilike'] if !opts[:'filter_header_evidence_hash_ilike'].nil?
      query_params[:'filter[header.proposerAddress]'] = opts[:'filter_header_proposer_address'] if !opts[:'filter_header_proposer_address'].nil?
      query_params[:'filter[header.proposerAddress.neq]'] = opts[:'filter_header_proposer_address_neq'] if !opts[:'filter_header_proposer_address_neq'].nil?
      query_params[:'filter[header.proposerAddress.like]'] = opts[:'filter_header_proposer_address_like'] if !opts[:'filter_header_proposer_address_like'].nil?
      query_params[:'filter[header.proposerAddress.ilike]'] = opts[:'filter_header_proposer_address_ilike'] if !opts[:'filter_header_proposer_address_ilike'].nil?
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiBlocksGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.api_blocks_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#api_blocks_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List entities
    # @param [Hash] opts the optional parameters
    # @option opts [ApiEntitiesGetFieldsEntitiesParameter] :fields_entities Include the given fields in the response.
    # @option opts [String] :filter_module Filter the results where the [module] field is equal to the given value.
    # @option opts [String] :filter_module_neq Filter the results where the [module] field is not equal to the given value.
    # @option opts [String] :filter_module_like Filter the results where the [module] field is similar to the given case sensitive value.
    # @option opts [String] :filter_module_ilike Filter the results where the [module] field is similar to the given case insensitive value.
    # @option opts [String] :filter_type Filter the results where the [type] field is equal to the given value.
    # @option opts [String] :filter_type_neq Filter the results where the [type] field is not equal to the given value.
    # @option opts [String] :filter_type_like Filter the results where the [type] field is similar to the given case sensitive value.
    # @option opts [String] :filter_type_ilike Filter the results where the [type] field is similar to the given case insensitive value.
    # @option opts [String] :filter_key Filter the results where the [key] field is equal to the given value.
    # @option opts [String] :filter_key_neq Filter the results where the [key] field is not equal to the given value.
    # @option opts [String] :filter_key_like Filter the results where the [key] field is similar to the given case sensitive value.
    # @option opts [String] :filter_key_ilike Filter the results where the [key] field is similar to the given case insensitive value.
    # @option opts [String] :filter_value Filter the results where the [value] field is equal to the given value.
    # @option opts [String] :filter_value_neq Filter the results where the [value] field is not equal to the given value.
    # @option opts [String] :filter_value_like Filter the results where the [value] field is similar to the given case sensitive value.
    # @option opts [String] :filter_value_ilike Filter the results where the [value] field is similar to the given case insensitive value.
    # @option opts [ApiEntitiesGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [ApiEntitiesGet200Response]
    def api_entities_get(opts = {})
      data, _status_code, _headers = api_entities_get_with_http_info(opts)
      data
    end

    # List entities
    # @param [Hash] opts the optional parameters
    # @option opts [ApiEntitiesGetFieldsEntitiesParameter] :fields_entities Include the given fields in the response.
    # @option opts [String] :filter_module Filter the results where the [module] field is equal to the given value.
    # @option opts [String] :filter_module_neq Filter the results where the [module] field is not equal to the given value.
    # @option opts [String] :filter_module_like Filter the results where the [module] field is similar to the given case sensitive value.
    # @option opts [String] :filter_module_ilike Filter the results where the [module] field is similar to the given case insensitive value.
    # @option opts [String] :filter_type Filter the results where the [type] field is equal to the given value.
    # @option opts [String] :filter_type_neq Filter the results where the [type] field is not equal to the given value.
    # @option opts [String] :filter_type_like Filter the results where the [type] field is similar to the given case sensitive value.
    # @option opts [String] :filter_type_ilike Filter the results where the [type] field is similar to the given case insensitive value.
    # @option opts [String] :filter_key Filter the results where the [key] field is equal to the given value.
    # @option opts [String] :filter_key_neq Filter the results where the [key] field is not equal to the given value.
    # @option opts [String] :filter_key_like Filter the results where the [key] field is similar to the given case sensitive value.
    # @option opts [String] :filter_key_ilike Filter the results where the [key] field is similar to the given case insensitive value.
    # @option opts [String] :filter_value Filter the results where the [value] field is equal to the given value.
    # @option opts [String] :filter_value_neq Filter the results where the [value] field is not equal to the given value.
    # @option opts [String] :filter_value_like Filter the results where the [value] field is similar to the given case sensitive value.
    # @option opts [String] :filter_value_ilike Filter the results where the [value] field is similar to the given case insensitive value.
    # @option opts [ApiEntitiesGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [Array<(ApiEntitiesGet200Response, Integer, Hash)>] ApiEntitiesGet200Response data, response status code and response headers
    def api_entities_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.api_entities_get ...'
      end
      # resource path
      local_var_path = '/api/entities'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fields[entities]'] = opts[:'fields_entities'] if !opts[:'fields_entities'].nil?
      query_params[:'filter[module]'] = opts[:'filter_module'] if !opts[:'filter_module'].nil?
      query_params[:'filter[module.neq]'] = opts[:'filter_module_neq'] if !opts[:'filter_module_neq'].nil?
      query_params[:'filter[module.like]'] = opts[:'filter_module_like'] if !opts[:'filter_module_like'].nil?
      query_params[:'filter[module.ilike]'] = opts[:'filter_module_ilike'] if !opts[:'filter_module_ilike'].nil?
      query_params[:'filter[type]'] = opts[:'filter_type'] if !opts[:'filter_type'].nil?
      query_params[:'filter[type.neq]'] = opts[:'filter_type_neq'] if !opts[:'filter_type_neq'].nil?
      query_params[:'filter[type.like]'] = opts[:'filter_type_like'] if !opts[:'filter_type_like'].nil?
      query_params[:'filter[type.ilike]'] = opts[:'filter_type_ilike'] if !opts[:'filter_type_ilike'].nil?
      query_params[:'filter[key]'] = opts[:'filter_key'] if !opts[:'filter_key'].nil?
      query_params[:'filter[key.neq]'] = opts[:'filter_key_neq'] if !opts[:'filter_key_neq'].nil?
      query_params[:'filter[key.like]'] = opts[:'filter_key_like'] if !opts[:'filter_key_like'].nil?
      query_params[:'filter[key.ilike]'] = opts[:'filter_key_ilike'] if !opts[:'filter_key_ilike'].nil?
      query_params[:'filter[value]'] = opts[:'filter_value'] if !opts[:'filter_value'].nil?
      query_params[:'filter[value.neq]'] = opts[:'filter_value_neq'] if !opts[:'filter_value_neq'].nil?
      query_params[:'filter[value.like]'] = opts[:'filter_value_like'] if !opts[:'filter_value_like'].nil?
      query_params[:'filter[value.ilike]'] = opts[:'filter_value_ilike'] if !opts[:'filter_value_ilike'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiEntitiesGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.api_entities_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#api_entities_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List transactions
    # @param [Hash] opts the optional parameters
    # @option opts [ApiTransactionsGetFieldsAccountsParameter] :fields_accounts Include the given fields in the response.
    # @option opts [String] :filter_hash Filter the results where the [hash] field is equal to the given value.
    # @option opts [String] :filter_hash_neq Filter the results where the [hash] field is not equal to the given value.
    # @option opts [String] :filter_hash_like Filter the results where the [hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_hash_ilike Filter the results where the [hash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_sender Filter the results where the [sender] field is equal to the given value.
    # @option opts [String] :filter_sender_neq Filter the results where the [sender] field is not equal to the given value.
    # @option opts [String] :filter_sender_like Filter the results where the [sender] field is similar to the given case sensitive value.
    # @option opts [String] :filter_sender_ilike Filter the results where the [sender] field is similar to the given case insensitive value.
    # @option opts [String] :filter_recipient Filter the results where the [recipient] field is equal to the given value.
    # @option opts [String] :filter_recipient_neq Filter the results where the [recipient] field is not equal to the given value.
    # @option opts [String] :filter_recipient_like Filter the results where the [recipient] field is similar to the given case sensitive value.
    # @option opts [String] :filter_recipient_ilike Filter the results where the [recipient] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_gas Filter the results where the [gas] field is equal to the given value.
    # @option opts [Integer] :filter_nonce Filter the results where the [nonce] field is equal to the given value.
    # @option opts [String] :filter_signature Filter the results where the [signature] field is equal to the given value.
    # @option opts [String] :filter_signature_neq Filter the results where the [signature] field is not equal to the given value.
    # @option opts [String] :filter_signature_like Filter the results where the [signature] field is similar to the given case sensitive value.
    # @option opts [String] :filter_signature_ilike Filter the results where the [signature] field is similar to the given case insensitive value.
    # @option opts [String] :filter_version Filter the results where the [version] field is equal to the given value.
    # @option opts [String] :filter_version_neq Filter the results where the [version] field is not equal to the given value.
    # @option opts [String] :filter_version_like Filter the results where the [version] field is similar to the given case sensitive value.
    # @option opts [String] :filter_version_ilike Filter the results where the [version] field is similar to the given case insensitive value.
    # @option opts [String] :filter_message_handler Filter the results where the [message.handler] field is equal to the given value.
    # @option opts [String] :filter_message_handler_neq Filter the results where the [message.handler] field is not equal to the given value.
    # @option opts [String] :filter_message_handler_like Filter the results where the [message.handler] field is similar to the given case sensitive value.
    # @option opts [String] :filter_message_handler_ilike Filter the results where the [message.handler] field is similar to the given case insensitive value.
    # @option opts [String] :filter_message_version Filter the results where the [message.version] field is equal to the given value.
    # @option opts [String] :filter_message_version_neq Filter the results where the [message.version] field is not equal to the given value.
    # @option opts [String] :filter_message_version_like Filter the results where the [message.version] field is similar to the given case sensitive value.
    # @option opts [String] :filter_message_version_ilike Filter the results where the [message.version] field is similar to the given case insensitive value.
    # @option opts [String] :filter_message_network Filter the results where the [message.network] field is equal to the given value.
    # @option opts [String] :filter_message_network_neq Filter the results where the [message.network] field is not equal to the given value.
    # @option opts [String] :filter_message_network_like Filter the results where the [message.network] field is similar to the given case sensitive value.
    # @option opts [String] :filter_message_network_ilike Filter the results where the [message.network] field is similar to the given case insensitive value.
    # @option opts [String] :filter_message_content Filter the results where the [message.content] field is equal to the given value.
    # @option opts [String] :filter_message_content_neq Filter the results where the [message.content] field is not equal to the given value.
    # @option opts [String] :filter_message_content_like Filter the results where the [message.content] field is similar to the given case sensitive value.
    # @option opts [String] :filter_message_content_ilike Filter the results where the [message.content] field is similar to the given case insensitive value.
    # @option opts [ApiTransactionsGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiTransactionsGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [ApiTransactionsGet200Response]
    def api_transactions_get(opts = {})
      data, _status_code, _headers = api_transactions_get_with_http_info(opts)
      data
    end

    # List transactions
    # @param [Hash] opts the optional parameters
    # @option opts [ApiTransactionsGetFieldsAccountsParameter] :fields_accounts Include the given fields in the response.
    # @option opts [String] :filter_hash Filter the results where the [hash] field is equal to the given value.
    # @option opts [String] :filter_hash_neq Filter the results where the [hash] field is not equal to the given value.
    # @option opts [String] :filter_hash_like Filter the results where the [hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_hash_ilike Filter the results where the [hash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_sender Filter the results where the [sender] field is equal to the given value.
    # @option opts [String] :filter_sender_neq Filter the results where the [sender] field is not equal to the given value.
    # @option opts [String] :filter_sender_like Filter the results where the [sender] field is similar to the given case sensitive value.
    # @option opts [String] :filter_sender_ilike Filter the results where the [sender] field is similar to the given case insensitive value.
    # @option opts [String] :filter_recipient Filter the results where the [recipient] field is equal to the given value.
    # @option opts [String] :filter_recipient_neq Filter the results where the [recipient] field is not equal to the given value.
    # @option opts [String] :filter_recipient_like Filter the results where the [recipient] field is similar to the given case sensitive value.
    # @option opts [String] :filter_recipient_ilike Filter the results where the [recipient] field is similar to the given case insensitive value.
    # @option opts [Integer] :filter_gas Filter the results where the [gas] field is equal to the given value.
    # @option opts [Integer] :filter_nonce Filter the results where the [nonce] field is equal to the given value.
    # @option opts [String] :filter_signature Filter the results where the [signature] field is equal to the given value.
    # @option opts [String] :filter_signature_neq Filter the results where the [signature] field is not equal to the given value.
    # @option opts [String] :filter_signature_like Filter the results where the [signature] field is similar to the given case sensitive value.
    # @option opts [String] :filter_signature_ilike Filter the results where the [signature] field is similar to the given case insensitive value.
    # @option opts [String] :filter_version Filter the results where the [version] field is equal to the given value.
    # @option opts [String] :filter_version_neq Filter the results where the [version] field is not equal to the given value.
    # @option opts [String] :filter_version_like Filter the results where the [version] field is similar to the given case sensitive value.
    # @option opts [String] :filter_version_ilike Filter the results where the [version] field is similar to the given case insensitive value.
    # @option opts [String] :filter_message_handler Filter the results where the [message.handler] field is equal to the given value.
    # @option opts [String] :filter_message_handler_neq Filter the results where the [message.handler] field is not equal to the given value.
    # @option opts [String] :filter_message_handler_like Filter the results where the [message.handler] field is similar to the given case sensitive value.
    # @option opts [String] :filter_message_handler_ilike Filter the results where the [message.handler] field is similar to the given case insensitive value.
    # @option opts [String] :filter_message_version Filter the results where the [message.version] field is equal to the given value.
    # @option opts [String] :filter_message_version_neq Filter the results where the [message.version] field is not equal to the given value.
    # @option opts [String] :filter_message_version_like Filter the results where the [message.version] field is similar to the given case sensitive value.
    # @option opts [String] :filter_message_version_ilike Filter the results where the [message.version] field is similar to the given case insensitive value.
    # @option opts [String] :filter_message_network Filter the results where the [message.network] field is equal to the given value.
    # @option opts [String] :filter_message_network_neq Filter the results where the [message.network] field is not equal to the given value.
    # @option opts [String] :filter_message_network_like Filter the results where the [message.network] field is similar to the given case sensitive value.
    # @option opts [String] :filter_message_network_ilike Filter the results where the [message.network] field is similar to the given case insensitive value.
    # @option opts [String] :filter_message_content Filter the results where the [message.content] field is equal to the given value.
    # @option opts [String] :filter_message_content_neq Filter the results where the [message.content] field is not equal to the given value.
    # @option opts [String] :filter_message_content_like Filter the results where the [message.content] field is similar to the given case sensitive value.
    # @option opts [String] :filter_message_content_ilike Filter the results where the [message.content] field is similar to the given case insensitive value.
    # @option opts [ApiTransactionsGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiTransactionsGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [Array<(ApiTransactionsGet200Response, Integer, Hash)>] ApiTransactionsGet200Response data, response status code and response headers
    def api_transactions_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.api_transactions_get ...'
      end
      # resource path
      local_var_path = '/api/transactions'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fields[accounts]'] = opts[:'fields_accounts'] if !opts[:'fields_accounts'].nil?
      query_params[:'filter[hash]'] = opts[:'filter_hash'] if !opts[:'filter_hash'].nil?
      query_params[:'filter[hash.neq]'] = opts[:'filter_hash_neq'] if !opts[:'filter_hash_neq'].nil?
      query_params[:'filter[hash.like]'] = opts[:'filter_hash_like'] if !opts[:'filter_hash_like'].nil?
      query_params[:'filter[hash.ilike]'] = opts[:'filter_hash_ilike'] if !opts[:'filter_hash_ilike'].nil?
      query_params[:'filter[sender]'] = opts[:'filter_sender'] if !opts[:'filter_sender'].nil?
      query_params[:'filter[sender.neq]'] = opts[:'filter_sender_neq'] if !opts[:'filter_sender_neq'].nil?
      query_params[:'filter[sender.like]'] = opts[:'filter_sender_like'] if !opts[:'filter_sender_like'].nil?
      query_params[:'filter[sender.ilike]'] = opts[:'filter_sender_ilike'] if !opts[:'filter_sender_ilike'].nil?
      query_params[:'filter[recipient]'] = opts[:'filter_recipient'] if !opts[:'filter_recipient'].nil?
      query_params[:'filter[recipient.neq]'] = opts[:'filter_recipient_neq'] if !opts[:'filter_recipient_neq'].nil?
      query_params[:'filter[recipient.like]'] = opts[:'filter_recipient_like'] if !opts[:'filter_recipient_like'].nil?
      query_params[:'filter[recipient.ilike]'] = opts[:'filter_recipient_ilike'] if !opts[:'filter_recipient_ilike'].nil?
      query_params[:'filter[gas]'] = opts[:'filter_gas'] if !opts[:'filter_gas'].nil?
      query_params[:'filter[nonce]'] = opts[:'filter_nonce'] if !opts[:'filter_nonce'].nil?
      query_params[:'filter[signature]'] = opts[:'filter_signature'] if !opts[:'filter_signature'].nil?
      query_params[:'filter[signature.neq]'] = opts[:'filter_signature_neq'] if !opts[:'filter_signature_neq'].nil?
      query_params[:'filter[signature.like]'] = opts[:'filter_signature_like'] if !opts[:'filter_signature_like'].nil?
      query_params[:'filter[signature.ilike]'] = opts[:'filter_signature_ilike'] if !opts[:'filter_signature_ilike'].nil?
      query_params[:'filter[version]'] = opts[:'filter_version'] if !opts[:'filter_version'].nil?
      query_params[:'filter[version.neq]'] = opts[:'filter_version_neq'] if !opts[:'filter_version_neq'].nil?
      query_params[:'filter[version.like]'] = opts[:'filter_version_like'] if !opts[:'filter_version_like'].nil?
      query_params[:'filter[version.ilike]'] = opts[:'filter_version_ilike'] if !opts[:'filter_version_ilike'].nil?
      query_params[:'filter[message.handler]'] = opts[:'filter_message_handler'] if !opts[:'filter_message_handler'].nil?
      query_params[:'filter[message.handler.neq]'] = opts[:'filter_message_handler_neq'] if !opts[:'filter_message_handler_neq'].nil?
      query_params[:'filter[message.handler.like]'] = opts[:'filter_message_handler_like'] if !opts[:'filter_message_handler_like'].nil?
      query_params[:'filter[message.handler.ilike]'] = opts[:'filter_message_handler_ilike'] if !opts[:'filter_message_handler_ilike'].nil?
      query_params[:'filter[message.version]'] = opts[:'filter_message_version'] if !opts[:'filter_message_version'].nil?
      query_params[:'filter[message.version.neq]'] = opts[:'filter_message_version_neq'] if !opts[:'filter_message_version_neq'].nil?
      query_params[:'filter[message.version.like]'] = opts[:'filter_message_version_like'] if !opts[:'filter_message_version_like'].nil?
      query_params[:'filter[message.version.ilike]'] = opts[:'filter_message_version_ilike'] if !opts[:'filter_message_version_ilike'].nil?
      query_params[:'filter[message.network]'] = opts[:'filter_message_network'] if !opts[:'filter_message_network'].nil?
      query_params[:'filter[message.network.neq]'] = opts[:'filter_message_network_neq'] if !opts[:'filter_message_network_neq'].nil?
      query_params[:'filter[message.network.like]'] = opts[:'filter_message_network_like'] if !opts[:'filter_message_network_like'].nil?
      query_params[:'filter[message.network.ilike]'] = opts[:'filter_message_network_ilike'] if !opts[:'filter_message_network_ilike'].nil?
      query_params[:'filter[message.content]'] = opts[:'filter_message_content'] if !opts[:'filter_message_content'].nil?
      query_params[:'filter[message.content.neq]'] = opts[:'filter_message_content_neq'] if !opts[:'filter_message_content_neq'].nil?
      query_params[:'filter[message.content.like]'] = opts[:'filter_message_content_like'] if !opts[:'filter_message_content_like'].nil?
      query_params[:'filter[message.content.ilike]'] = opts[:'filter_message_content_ilike'] if !opts[:'filter_message_content_ilike'].nil?
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiTransactionsGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.api_transactions_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#api_transactions_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List transaction metadata
    # @param [Hash] opts the optional parameters
    # @option opts [ApiTransactionsMetadataGetFieldsTransactionMetadataParameter] :fields_transaction_metadata Include the given fields in the response.
    # @option opts [Integer] :filter_transaction_id Filter the results where the [transaction_id] field is equal to the given value.
    # @option opts [String] :filter_key Filter the results where the [key] field is equal to the given value.
    # @option opts [String] :filter_key_neq Filter the results where the [key] field is not equal to the given value.
    # @option opts [String] :filter_key_like Filter the results where the [key] field is similar to the given case sensitive value.
    # @option opts [String] :filter_key_ilike Filter the results where the [key] field is similar to the given case insensitive value.
    # @option opts [String] :filter_value Filter the results where the [value] field is equal to the given value.
    # @option opts [String] :filter_value_neq Filter the results where the [value] field is not equal to the given value.
    # @option opts [String] :filter_value_like Filter the results where the [value] field is similar to the given case sensitive value.
    # @option opts [String] :filter_value_ilike Filter the results where the [value] field is similar to the given case insensitive value.
    # @option opts [ApiTransactionsMetadataGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiTransactionsMetadataGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [ApiTransactionsMetadataGet200Response]
    def api_transactions_metadata_get(opts = {})
      data, _status_code, _headers = api_transactions_metadata_get_with_http_info(opts)
      data
    end

    # List transaction metadata
    # @param [Hash] opts the optional parameters
    # @option opts [ApiTransactionsMetadataGetFieldsTransactionMetadataParameter] :fields_transaction_metadata Include the given fields in the response.
    # @option opts [Integer] :filter_transaction_id Filter the results where the [transaction_id] field is equal to the given value.
    # @option opts [String] :filter_key Filter the results where the [key] field is equal to the given value.
    # @option opts [String] :filter_key_neq Filter the results where the [key] field is not equal to the given value.
    # @option opts [String] :filter_key_like Filter the results where the [key] field is similar to the given case sensitive value.
    # @option opts [String] :filter_key_ilike Filter the results where the [key] field is similar to the given case insensitive value.
    # @option opts [String] :filter_value Filter the results where the [value] field is equal to the given value.
    # @option opts [String] :filter_value_neq Filter the results where the [value] field is not equal to the given value.
    # @option opts [String] :filter_value_like Filter the results where the [value] field is similar to the given case sensitive value.
    # @option opts [String] :filter_value_ilike Filter the results where the [value] field is similar to the given case insensitive value.
    # @option opts [ApiTransactionsMetadataGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiTransactionsMetadataGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [Array<(ApiTransactionsMetadataGet200Response, Integer, Hash)>] ApiTransactionsMetadataGet200Response data, response status code and response headers
    def api_transactions_metadata_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.api_transactions_metadata_get ...'
      end
      # resource path
      local_var_path = '/api/transactions/metadata'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fields[transaction_metadata]'] = opts[:'fields_transaction_metadata'] if !opts[:'fields_transaction_metadata'].nil?
      query_params[:'filter[transaction_id]'] = opts[:'filter_transaction_id'] if !opts[:'filter_transaction_id'].nil?
      query_params[:'filter[key]'] = opts[:'filter_key'] if !opts[:'filter_key'].nil?
      query_params[:'filter[key.neq]'] = opts[:'filter_key_neq'] if !opts[:'filter_key_neq'].nil?
      query_params[:'filter[key.like]'] = opts[:'filter_key_like'] if !opts[:'filter_key_like'].nil?
      query_params[:'filter[key.ilike]'] = opts[:'filter_key_ilike'] if !opts[:'filter_key_ilike'].nil?
      query_params[:'filter[value]'] = opts[:'filter_value'] if !opts[:'filter_value'].nil?
      query_params[:'filter[value.neq]'] = opts[:'filter_value_neq'] if !opts[:'filter_value_neq'].nil?
      query_params[:'filter[value.like]'] = opts[:'filter_value_like'] if !opts[:'filter_value_like'].nil?
      query_params[:'filter[value.ilike]'] = opts[:'filter_value_ilike'] if !opts[:'filter_value_ilike'].nil?
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiTransactionsMetadataGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.api_transactions_metadata_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#api_transactions_metadata_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List transaction receipts
    # @param [Hash] opts the optional parameters
    # @option opts [ApiTransactionsReceiptsGetFieldsTransactionReceiptsParameter] :fields_transaction_receipts Include the given fields in the response.
    # @option opts [Integer] :filter_transaction_id Filter the results where the [transaction_id] field is equal to the given value.
    # @option opts [String] :filter_block_hash Filter the results where the [block_hash] field is equal to the given value.
    # @option opts [String] :filter_block_hash_neq Filter the results where the [block_hash] field is not equal to the given value.
    # @option opts [String] :filter_block_hash_like Filter the results where the [block_hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_block_hash_ilike Filter the results where the [block_hash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_block_number Filter the results where the [block_number] field is equal to the given value.
    # @option opts [String] :filter_block_number_neq Filter the results where the [block_number] field is not equal to the given value.
    # @option opts [String] :filter_block_number_like Filter the results where the [block_number] field is similar to the given case sensitive value.
    # @option opts [String] :filter_block_number_ilike Filter the results where the [block_number] field is similar to the given case insensitive value.
    # @option opts [ApiTransactionsMetadataGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiTransactionsReceiptsGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [ApiTransactionsReceiptsGet200Response]
    def api_transactions_receipts_get(opts = {})
      data, _status_code, _headers = api_transactions_receipts_get_with_http_info(opts)
      data
    end

    # List transaction receipts
    # @param [Hash] opts the optional parameters
    # @option opts [ApiTransactionsReceiptsGetFieldsTransactionReceiptsParameter] :fields_transaction_receipts Include the given fields in the response.
    # @option opts [Integer] :filter_transaction_id Filter the results where the [transaction_id] field is equal to the given value.
    # @option opts [String] :filter_block_hash Filter the results where the [block_hash] field is equal to the given value.
    # @option opts [String] :filter_block_hash_neq Filter the results where the [block_hash] field is not equal to the given value.
    # @option opts [String] :filter_block_hash_like Filter the results where the [block_hash] field is similar to the given case sensitive value.
    # @option opts [String] :filter_block_hash_ilike Filter the results where the [block_hash] field is similar to the given case insensitive value.
    # @option opts [String] :filter_block_number Filter the results where the [block_number] field is equal to the given value.
    # @option opts [String] :filter_block_number_neq Filter the results where the [block_number] field is not equal to the given value.
    # @option opts [String] :filter_block_number_like Filter the results where the [block_number] field is similar to the given case sensitive value.
    # @option opts [String] :filter_block_number_ilike Filter the results where the [block_number] field is similar to the given case insensitive value.
    # @option opts [ApiTransactionsMetadataGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiTransactionsReceiptsGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [Array<(ApiTransactionsReceiptsGet200Response, Integer, Hash)>] ApiTransactionsReceiptsGet200Response data, response status code and response headers
    def api_transactions_receipts_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.api_transactions_receipts_get ...'
      end
      # resource path
      local_var_path = '/api/transactions/receipts'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fields[transaction_receipts]'] = opts[:'fields_transaction_receipts'] if !opts[:'fields_transaction_receipts'].nil?
      query_params[:'filter[transaction_id]'] = opts[:'filter_transaction_id'] if !opts[:'filter_transaction_id'].nil?
      query_params[:'filter[block_hash]'] = opts[:'filter_block_hash'] if !opts[:'filter_block_hash'].nil?
      query_params[:'filter[block_hash.neq]'] = opts[:'filter_block_hash_neq'] if !opts[:'filter_block_hash_neq'].nil?
      query_params[:'filter[block_hash.like]'] = opts[:'filter_block_hash_like'] if !opts[:'filter_block_hash_like'].nil?
      query_params[:'filter[block_hash.ilike]'] = opts[:'filter_block_hash_ilike'] if !opts[:'filter_block_hash_ilike'].nil?
      query_params[:'filter[block_number]'] = opts[:'filter_block_number'] if !opts[:'filter_block_number'].nil?
      query_params[:'filter[block_number.neq]'] = opts[:'filter_block_number_neq'] if !opts[:'filter_block_number_neq'].nil?
      query_params[:'filter[block_number.like]'] = opts[:'filter_block_number_like'] if !opts[:'filter_block_number_like'].nil?
      query_params[:'filter[block_number.ilike]'] = opts[:'filter_block_number_ilike'] if !opts[:'filter_block_number_ilike'].nil?
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiTransactionsReceiptsGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.api_transactions_receipts_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#api_transactions_receipts_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List validator updates
    # @param [Hash] opts the optional parameters
    # @option opts [ApiValidatorsUpdatesGetFieldsBlockNumberParameter] :fields_block_number Include the given fields in the response.
    # @option opts [Integer] :filter_block_number Filter the results where the [block_number] field is equal to the given value.
    # @option opts [ApiValidatorsUpdatesGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiValidatorsUpdatesGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [ApiValidatorsUpdatesGet200Response]
    def api_validators_updates_get(opts = {})
      data, _status_code, _headers = api_validators_updates_get_with_http_info(opts)
      data
    end

    # List validator updates
    # @param [Hash] opts the optional parameters
    # @option opts [ApiValidatorsUpdatesGetFieldsBlockNumberParameter] :fields_block_number Include the given fields in the response.
    # @option opts [Integer] :filter_block_number Filter the results where the [block_number] field is equal to the given value.
    # @option opts [ApiValidatorsUpdatesGetIncludeParameter] :include Include the given relationships.
    # @option opts [ApiValidatorsUpdatesGetSortParameter] :sort Sort the results by the given field and direction.
    # @return [Array<(ApiValidatorsUpdatesGet200Response, Integer, Hash)>] ApiValidatorsUpdatesGet200Response data, response status code and response headers
    def api_validators_updates_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.api_validators_updates_get ...'
      end
      # resource path
      local_var_path = '/api/validators/updates'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fields[block_number]'] = opts[:'fields_block_number'] if !opts[:'fields_block_number'].nil?
      query_params[:'filter[block_number]'] = opts[:'filter_block_number'] if !opts[:'filter_block_number'].nil?
      query_params[:'include'] = opts[:'include'] if !opts[:'include'].nil?
      query_params[:'sort'] = opts[:'sort'] if !opts[:'sort'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ApiValidatorsUpdatesGet200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.api_validators_updates_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#api_validators_updates_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
